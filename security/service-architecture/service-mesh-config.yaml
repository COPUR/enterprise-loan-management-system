# Enterprise Banking Service Mesh Configuration
# Production-grade microservices architecture with Istio

# Gateway configuration for external traffic
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: banking-gateway
  namespace: banking-production
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: banking-tls-cert
    hosts:
    - "api.banking.enterprise.com"
    - "banking.enterprise.com"
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "api.banking.enterprise.com"
    - "banking.enterprise.com"
    tls:
      httpsRedirect: true
---
# Virtual Service for routing
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: banking-virtual-service
  namespace: banking-production
spec:
  hosts:
  - "api.banking.enterprise.com"
  - "banking.enterprise.com"
  gateways:
  - banking-gateway
  http:
  # API Gateway routes
  - match:
    - uri:
        prefix: /api/v1/
    route:
    - destination:
        host: api-gateway.banking-production.svc.cluster.local
        port:
          number: 8080
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: gateway-error,connect-failure,refused-stream
  # Customer service routes
  - match:
    - uri:
        prefix: /customers/
    route:
    - destination:
        host: customer-service.banking-production.svc.cluster.local
        port:
          number: 8080
    timeout: 15s
    retries:
      attempts: 3
      perTryTimeout: 5s
  # Loan service routes
  - match:
    - uri:
        prefix: /loans/
    route:
    - destination:
        host: loan-service.banking-production.svc.cluster.local
        port:
          number: 8080
    timeout: 60s  # Longer timeout for loan processing
    retries:
      attempts: 2
      perTryTimeout: 30s
  # Payment service routes (highest security)
  - match:
    - uri:
        prefix: /payments/
    route:
    - destination:
        host: payment-service.banking-production.svc.cluster.local
        port:
          number: 8080
    timeout: 30s
    retries:
      attempts: 1  # No retries for payments
      perTryTimeout: 30s
  # ML/Fraud detection routes
  - match:
    - uri:
        prefix: /ml/
    route:
    - destination:
        host: ml-anomaly-service.banking-production.svc.cluster.local
        port:
          number: 8080
    timeout: 10s
    retries:
      attempts: 3
      perTryTimeout: 3s
  # Default route to API Gateway
  - route:
    - destination:
        host: api-gateway.banking-production.svc.cluster.local
        port:
          number: 8080
---
# Service Entry for external dependencies
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: external-credit-bureau
  namespace: banking-production
spec:
  hosts:
  - credit-bureau.external.com
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: DNS
---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: external-payment-processor
  namespace: banking-production
spec:
  hosts:
  - payment-processor.external.com
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: DNS
---
# Destination Rules for circuit breakers and load balancing
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: customer-service-destination
  namespace: banking-production
spec:
  host: customer-service.banking-production.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 50
      http:
        http1MaxPendingRequests: 10
        http2MaxRequests: 100
        maxRequestsPerConnection: 2
        maxRetries: 3
        connectTimeout: 30s
        h2UpgradePolicy: UPGRADE
    circuitBreaker:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50
    loadBalancer:
      simple: LEAST_CONN
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: loan-service-destination
  namespace: banking-production
spec:
  host: loan-service.banking-production.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 30
      http:
        http1MaxPendingRequests: 5
        http2MaxRequests: 50
        maxRequestsPerConnection: 1
        maxRetries: 2
        connectTimeout: 30s
    circuitBreaker:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 60s
      maxEjectionPercent: 30
      minHealthPercent: 70
    loadBalancer:
      simple: ROUND_ROBIN
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: payment-service-destination
  namespace: banking-production
spec:
  host: payment-service.banking-production.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 20
      http:
        http1MaxPendingRequests: 1
        http2MaxRequests: 10
        maxRequestsPerConnection: 1
        maxRetries: 1
        connectTimeout: 30s
    circuitBreaker:
      consecutiveErrors: 2
      interval: 30s
      baseEjectionTime: 120s
      maxEjectionPercent: 20
      minHealthPercent: 80
    loadBalancer:
      simple: LEAST_CONN
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: ml-anomaly-service-destination
  namespace: banking-production
spec:
  host: ml-anomaly-service.banking-production.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 20
        http2MaxRequests: 200
        maxRequestsPerConnection: 10
        maxRetries: 3
        connectTimeout: 10s
    circuitBreaker:
      consecutiveErrors: 10
      interval: 60s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50
    loadBalancer:
      simple: ROUND_ROBIN
---
# External service destination rules
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: external-credit-bureau-destination
  namespace: banking-production
spec:
  host: credit-bureau.external.com
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 10
      http:
        http1MaxPendingRequests: 2
        maxRequestsPerConnection: 1
        connectTimeout: 30s
    circuitBreaker:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 60s
---
# Request authentication for JWT validation
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: banking-jwt-auth
  namespace: banking-production
spec:
  jwtRules:
  - issuer: "https://keycloak.banking.enterprise.com/realms/banking"
    jwksUri: "https://keycloak.banking.enterprise.com/realms/banking/protocol/openid-connect/certs"
    audiences:
    - "banking-api"
    forwardOriginalToken: true
  - issuer: "https://fapi.banking.enterprise.com"
    jwksUri: "https://fapi.banking.enterprise.com/.well-known/jwks.json"
    audiences:
    - "open-banking-api"
    forwardOriginalToken: true
---
# Authorization policies for different services
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-gateway-authz
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: api-gateway
  rules:
  - from:
    - source:
        requestPrincipals: ["*"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
    when:
    - key: request.headers[authorization]
      values: ["Bearer *"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: customer-service-authz
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: customer-service
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/banking-production/sa/api-gateway"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT"]
    when:
    - key: request.headers[x-banking-role]
      values: ["customer-service", "admin"]
  - from:
    - source:
        principals: ["cluster.local/ns/banking-monitoring/sa/prometheus"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/actuator/metrics", "/actuator/health"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: loan-service-authz
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: loan-service
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/banking-production/sa/api-gateway"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT"]
    when:
    - key: request.headers[x-banking-role]
      values: ["loan-officer", "underwriter", "admin"]
  - from:
    - source:
        principals: ["cluster.local/ns/banking-production/sa/ml-anomaly-service"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/internal/risk-assessment"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: payment-service-authz
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: payment-service
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/banking-production/sa/api-gateway"]
    to:
    - operation:
        methods: ["GET", "POST"]
    when:
    - key: request.headers[x-banking-role]
      values: ["payment-processor", "admin"]
    - key: request.headers[x-fapi-interaction-id]
      values: ["*"]
  - from:
    - source:
        principals: ["cluster.local/ns/banking-production/sa/loan-service"]
    to:
    - operation:
        methods: ["POST"]
        paths: ["/internal/loan-payment"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ml-anomaly-service-authz
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: ml-anomaly-service
  rules:
  - from:
    - source:
        principals: 
        - "cluster.local/ns/banking-production/sa/api-gateway"
        - "cluster.local/ns/banking-production/sa/customer-service"
        - "cluster.local/ns/banking-production/sa/loan-service"
        - "cluster.local/ns/banking-production/sa/payment-service"
    to:
    - operation:
        methods: ["GET", "POST"]
    when:
    - key: request.headers[x-banking-role]
      values: ["fraud-analyst", "ml-service", "admin"]
---
# Telemetry configuration for observability
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: banking-telemetry
  namespace: banking-production
spec:
  metrics:
  - providers:
    - name: prometheus
  - overrides:
    - match:
        metric: ALL_METRICS
      tagOverrides:
        banking_service:
          value: "%{DEPLOYMENT_NAME}"
        banking_customer_id:
          value: "%{REQUEST_HEADER_X_CUSTOMER_ID}"
        banking_transaction_id:
          value: "%{REQUEST_HEADER_X_TRANSACTION_ID}"
  accessLogging:
  - providers:
    - name: otel
  tracing:
  - providers:
    - name: jaeger
  - customTags:
      banking_service:
        header:
          name: x-banking-service
      banking_operation:
        header:
          name: x-banking-operation
      customer_id:
        header:
          name: x-customer-id
      transaction_id:
        header:
          name: x-transaction-id
---
# EnvoyFilter for custom headers and security
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: banking-security-headers
  namespace: banking-production
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: local_rate_limiter
            token_bucket:
              max_tokens: 100
              tokens_per_fill: 100
              fill_interval: 60s
            filter_enabled:
              runtime_key: local_rate_limit_enabled
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              runtime_key: local_rate_limit_enforced
              default_value:
                numerator: 100
                denominator: HUNDRED
            response_headers_to_add:
            - append: false
              header:
                key: x-local-rate-limit
                value: 'true'
---
# Wasm extension for custom banking validation
apiVersion: extensions.istio.io/v1alpha1
kind: WasmPlugin
metadata:
  name: banking-fapi-validator
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: payment-service
  url: oci://registry.banking.enterprise.com/wasm/fapi-validator:v1.0.0
  configuration:
    required_headers:
    - "x-fapi-auth-date"
    - "x-fapi-customer-ip-address"
    - "x-fapi-interaction-id"
    - "authorization"
    validation_rules:
    - header: "x-fapi-auth-date"
      pattern: "^\\d{10}$"
    - header: "x-fapi-interaction-id"
      pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
    - header: "authorization"
      pattern: "^Bearer [A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+$"
---
# Sidecar configuration for resource optimization
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: customer-service-sidecar
  namespace: banking-production
spec:
  workloadSelector:
    labels:
      app: customer-service
  ingress:
  - port:
      number: 8080
      protocol: HTTP
      name: http
    defaultEndpoint: 127.0.0.1:8080
  egress:
  - hosts:
    - "./postgres.banking-infrastructure.svc.cluster.local"
    - "./redis.banking-infrastructure.svc.cluster.local"
    - "./kafka.banking-infrastructure.svc.cluster.local"
    - "./vault.banking-infrastructure.svc.cluster.local"
    - "istio-system/*"
---
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: payment-service-sidecar
  namespace: banking-production
spec:
  workloadSelector:
    labels:
      app: payment-service
  ingress:
  - port:
      number: 8080
      protocol: HTTP
      name: http
    defaultEndpoint: 127.0.0.1:8080
  egress:
  - hosts:
    - "./postgres.banking-infrastructure.svc.cluster.local"
    - "./redis.banking-infrastructure.svc.cluster.local"
    - "./kafka.banking-infrastructure.svc.cluster.local"
    - "./vault.banking-infrastructure.svc.cluster.local"
    - "payment-processor.external.com"
    - "istio-system/*"
---
# Service Monitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: banking-services-monitor
  namespace: banking-production
spec:
  selector:
    matchLabels:
      monitoring: enabled
  endpoints:
  - port: http
    path: /actuator/prometheus
    interval: 30s
    scrapeTimeout: 10s
  - port: http
    path: /stats/prometheus
    interval: 30s
    scrapeTimeout: 10s
---
# Horizontal Pod Autoscaler for services
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: customer-service-hpa
  namespace: banking-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: customer-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: payment-service-hpa
  namespace: banking-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
---
# Pod Disruption Budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: customer-service-pdb
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: customer-service
  minAvailable: 50%
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: payment-service-pdb
  namespace: banking-production
spec:
  selector:
    matchLabels:
      app: payment-service
  minAvailable: 67%
---
# Istio peer authentication for mTLS
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: banking-mtls-strict
  namespace: banking-production
spec:
  mtls:
    mode: STRICT
---
# Workload entries for external services
apiVersion: networking.istio.io/v1beta1
kind: WorkloadEntry
metadata:
  name: external-credit-bureau-vm
  namespace: banking-production
spec:
  address: "192.168.1.100"
  ports:
    https: 443
  labels:
    app: credit-bureau
    version: v1
    external: "true"
  serviceAccount: external-credit-bureau