# Enhanced Enterprise Banking System - Local Development Testing
# Docker Compose configuration for testing Dockerfiles and service mesh simulation

services:
  # === DATABASE TIER ===
  postgres:
    image: postgres:16-alpine
    container_name: banking-postgres-test
    environment:
      POSTGRES_DB: banking_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d banking_system"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - banking-test

  # === CACHE TIER ===
  redis:
    image: redis:7-alpine
    container_name: banking-redis-test
    command: redis-server --requirepass redis123 --maxmemory 256mb
    ports:
      - "6379:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "redis123", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - banking-test

  # === MESSAGE STREAMING ===
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: banking-kafka-test
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - banking-test

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: banking-zookeeper-test
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - banking-test

  # === ENHANCED BANKING APPLICATION (Enhanced Runtime) ===
  banking-app-enhanced:
    build:
      context: .
      dockerfile: Dockerfile.enhanced-v2
      target: runtime
    image: banking-system:enhanced-runtime
    container_name: banking-enhanced-test
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: development,docker
      SERVER_PORT: 8080
      MANAGEMENT_PORT: 8081
      
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://postgres:5432/banking_system
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      
      # Cache Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      
      # Message Streaming
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      
      # Banking Compliance
      FAPI_ENABLED: "true"
      BANKING_SECURITY_STRICT: "true"
      ISLAMIC_BANKING_ENABLED: "true"
      BIAN_COMPLIANCE_ENABLED: "true"
      AUDIT_ENABLED: "true"
      
      # AI/ML Configuration
      AI_CREDIT_SCORING_ENABLED: "true"
      ML_RISK_ASSESSMENT_ENABLED: "true"
      
      # Security Configuration
      JWT_SECRET: enhanced_banking_jwt_secret_key_for_testing
      
      # Performance Configuration
      JAVA_OPTS: >-
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -Dspring.profiles.active=development,docker
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - banking_enhanced_logs:/app/logs
      - banking_enhanced_config:/app/config
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s
    networks:
      - banking-test
    labels:
      - "com.banking.service=enhanced-banking"
      - "com.banking.tier=application"
      - "com.banking.test=enhanced-runtime"

  # === DEVELOPMENT BANKING APPLICATION (Development Target) ===
  banking-app-dev:
    build:
      context: .
      dockerfile: Dockerfile.enhanced-v2
      target: development
    image: banking-system:enhanced-dev
    container_name: banking-dev-test
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: development,local
      DATABASE_URL: jdbc:postgresql://postgres:5432/banking_system
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis123
      JPA_SHOW_SQL: "true"
      LOGGING_LEVEL_BANKING: DEBUG
    ports:
      - "8082:8080"
      - "5005:5005"  # Debug port
    volumes:
      - banking_dev_logs:/app/logs
      - ./src:/app/src:ro  # Mount source for hot reload
    networks:
      - banking-test
    labels:
      - "com.banking.service=dev-banking"
      - "com.banking.tier=development"
      - "com.banking.test=development"

  # === ISTIO PROXY SIMULATION (Envoy) ===
  envoy-proxy:
    image: envoyproxy/envoy:v1.29-latest
    container_name: banking-envoy-test
    ports:
      - "9901:9901"  # Admin interface
      - "10000:10000"  # Listener port
    volumes:
      - ./config/envoy-test.yaml:/etc/envoy/envoy.yaml:ro
    command: ["/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml", "--service-cluster", "banking-proxy"]
    depends_on:
      - banking-app-enhanced
    networks:
      - banking-test
    labels:
      - "com.banking.service=envoy-proxy"
      - "com.banking.tier=mesh"

  # === MONITORING STACK ===
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: banking-prometheus-test
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-test.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_test_data:/prometheus
    depends_on:
      - banking-app-enhanced
    networks:
      - banking-test
    labels:
      - "com.banking.service=prometheus"
      - "com.banking.tier=monitoring"

  grafana:
    image: grafana/grafana:10.2.0
    container_name: banking-grafana-test
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana_test_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - banking-test
    labels:
      - "com.banking.service=grafana"
      - "com.banking.tier=monitoring"

  # === LOAD BALANCER / API GATEWAY ===
  nginx:
    image: nginx:1.25-alpine
    container_name: banking-nginx-test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx-test.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - banking-app-enhanced
      - envoy-proxy
    networks:
      - banking-test
    labels:
      - "com.banking.service=gateway"
      - "com.banking.tier=edge"

  # === FUNCTIONAL TEST RUNNER ===
  functional-tests:
    build:
      context: .
      dockerfile: Dockerfile.enhanced-v2
      target: functional-testing
    image: banking-system:functional-test
    container_name: banking-functional-tests
    depends_on:
      banking-app-enhanced:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: test,functional
      FUNCTIONAL_TESTS_ENABLED: "true"
      BIAN_TESTS_ENABLED: "true"
      FAPI_TESTS_ENABLED: "true"
      ISLAMIC_BANKING_TESTS_ENABLED: "true"
      AI_INTEGRATION_TESTS_ENABLED: "true"
      TEST_TARGET_URL: http://banking-app-enhanced:8080
    volumes:
      - functional_test_reports:/app/test-reports
      - functional_test_logs:/app/logs
    networks:
      - banking-test
    labels:
      - "com.banking.service=functional-tests"
      - "com.banking.tier=testing"

  # === TESTING UTILITIES ===
  curl-test:
    image: curlimages/curl:8.5.0
    container_name: banking-curl-test
    command: sleep infinity
    networks:
      - banking-test
    labels:
      - "com.banking.service=curl-test"
      - "com.banking.tier=utilities"

volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local
  prometheus_test_data:
    driver: local
  grafana_test_data:
    driver: local
  banking_enhanced_logs:
    driver: local
  banking_enhanced_config:
    driver: local
  banking_dev_logs:
    driver: local
  functional_test_reports:
    driver: local
  functional_test_logs:
    driver: local

networks:
  banking-test:
    driver: bridge
    name: banking-test-network
    labels:
      - "com.banking.network=test"
      - "com.banking.purpose=local-development"