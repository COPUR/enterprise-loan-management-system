# Islamic Banking Enterprise Test Environment
# Complete Docker Compose setup for Islamic banking platform testing
# Includes AmanahFi platform, MasruFi framework, and UAE CBDC simulation

version: '3.8'

services:
  # === DATABASE TIER ===
  postgres-islamic:
    image: postgres:16-alpine
    container_name: amanahfi-postgres-islamic
    environment:
      POSTGRES_DB: amanahfi_islamic_banking
      POSTGRES_USER: amanahfi_user
      POSTGRES_PASSWORD: amanahfi_islamic_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      # Islamic Banking Extensions
      POSTGRES_EXTENSIONS: "pgcrypto,uuid-ossp,pg_stat_statements"
      # UAE/Islamic Banking Timezone
      TZ: "Asia/Dubai"
    ports:
      - "5434:5432"
    volumes:
      - postgres_islamic_data:/var/lib/postgresql/data
      - ./sql/islamic-banking-init.sql:/docker-entrypoint-initdb.d/01-islamic-banking-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U amanahfi_user -d amanahfi_islamic_banking"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network

  # === REDIS CACHE FOR ISLAMIC BANKING ===
  redis-islamic:
    image: redis:7-alpine
    container_name: amanahfi-redis-islamic
    command: redis-server --requirepass amanahfi_redis_pass --maxmemory 1gb --maxmemory-policy allkeys-lru --appendonly yes
    ports:
      - "6381:6379"
    volumes:
      - redis_islamic_data:/data
      - ./redis/islamic-banking.conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "amanahfi_redis_pass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network

  # === KAFKA FOR ISLAMIC BANKING EVENTS ===
  kafka-islamic:
    image: confluentinc/cp-kafka:7.4.0
    container_name: amanahfi-kafka-islamic
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-islamic:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-islamic:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_MS: 604800000  # 7 days
      # Islamic Banking Topics
      KAFKA_CREATE_TOPICS: "amanahfi.customer.events:3:1,amanahfi.sharia.compliance:3:1,amanahfi.murabaha.events:3:1,amanahfi.cbdc.transactions:3:1,amanahfi.mfa.events:3:1,amanahfi.security.audit:3:1"
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper-islamic
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9093"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network

  zookeeper-islamic:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: amanahfi-zookeeper-islamic
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_SYNC_LIMIT: 5
    ports:
      - "2182:2181"
    volumes:
      - zookeeper_islamic_data:/var/lib/zookeeper/data
      - zookeeper_islamic_logs:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network

  # === AMANAHFI ISLAMIC BANKING APPLICATION ===
  amanahfi-islamic-banking:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: amanahfi-islamic-banking:latest
    container_name: amanahfi-islamic-banking-app
    depends_on:
      postgres-islamic:
        condition: service_healthy
      redis-islamic:
        condition: service_healthy
      kafka-islamic:
        condition: service_healthy
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: islamic-banking,test,docker
      SERVER_PORT: 8080
      MANAGEMENT_PORT: 8081
      
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://postgres-islamic:5432/amanahfi_islamic_banking
      DATABASE_USERNAME: amanahfi_user
      DATABASE_PASSWORD: amanahfi_islamic_pass
      
      # Cache Configuration
      REDIS_HOST: redis-islamic
      REDIS_PORT: 6379
      REDIS_PASSWORD: amanahfi_redis_pass
      
      # Message Streaming
      KAFKA_BOOTSTRAP_SERVERS: kafka-islamic:9093
      
      # Islamic Banking Configuration
      ISLAMIC_BANKING_ENABLED: "true"
      MASRUFI_FRAMEWORK_ENABLED: "true"
      SHARIA_COMPLIANCE_ENABLED: "true"
      SHARIA_COMPLIANCE_STRICT_MODE: "true"
      UAE_CBDC_ENABLED: "true"
      UAE_TIMEZONE: "Asia/Dubai"
      
      # Multi-Factor Authentication
      MFA_ENABLED: "true"
      MFA_TOTP_ENABLED: "true"
      MFA_SMS_ENABLED: "true"
      MFA_EMAIL_ENABLED: "true"
      MFA_HARDWARE_TOKEN_ENABLED: "true"
      MFA_BIOMETRIC_ENABLED: "true"
      
      # Security Audit Configuration
      SECURITY_AUDIT_ENABLED: "true"
      SECURITY_AUDIT_LOG_LEVEL: "INFO"
      SECURITY_AUDIT_RETENTION_DAYS: "365"
      
      # FAPI 2.0 Security Configuration
      FAPI_ENABLED: "true"
      OAUTH2_ENABLED: "true"
      DPOP_ENABLED: "true"
      RATE_LIMITING_ENABLED: "true"
      
      # Supported Currencies
      SUPPORTED_CURRENCIES: "AED,USD,EUR,SAR,QAR,KWD,BHD"
      DEFAULT_CURRENCY: "AED"
      
      # Islamic Finance Products
      MURABAHA_ENABLED: "true"
      MUSHARAKAH_ENABLED: "true"
      IJARAH_ENABLED: "true"
      SALAM_ENABLED: "true"
      ISTISNA_ENABLED: "true"
      QARD_HASSAN_ENABLED: "true"
      
      # Compliance and Regulatory
      CBUAE_COMPLIANCE_ENABLED: "true"
      VARA_COMPLIANCE_ENABLED: "true"
      HSA_COMPLIANCE_ENABLED: "true"
      PCI_DSS_COMPLIANCE_ENABLED: "true"
      
      # Analytics and Monitoring
      ISLAMIC_BANKING_ANALYTICS_ENABLED: "true"
      BUSINESS_INTELLIGENCE_ENABLED: "true"
      REAL_TIME_MONITORING_ENABLED: "true"
      CUSTOMER_JOURNEY_ANALYTICS_ENABLED: "true"
      
      # UAE CBDC Configuration
      UAE_CBDC_NETWORK_URL: "http://uae-cbdc-simulator:8090"
      UAE_CBDC_SETTLEMENT_TIMEOUT: "5000"
      UAE_CBDC_MAX_TRANSACTION_AMOUNT: "1000000"
      
      # Performance Configuration
      JAVA_OPTS: >-
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -Dspring.profiles.active=islamic-banking,test,docker
        -Dfile.encoding=UTF-8
        -Duser.timezone=Asia/Dubai
        -Djava.security.egd=file:/dev/./urandom
    ports:
      - "8083:8080"
      - "8084:8081"
    volumes:
      - amanahfi_islamic_logs:/app/logs
      - amanahfi_islamic_config:/app/config
      - amanahfi_islamic_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health/islamic-banking"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=islamic-banking"
      - "com.amanahfi.tier=application"
      - "com.amanahfi.environment=test"

  # === UAE CBDC SIMULATOR ===
  uae-cbdc-simulator:
    image: wiremock/wiremock:2.35.0
    container_name: amanahfi-uae-cbdc-simulator
    command: ["--port", "8090", "--verbose", "--global-response-templating"]
    ports:
      - "8090:8090"
    volumes:
      - ./wiremock/uae-cbdc-mappings:/home/wiremock/mappings
      - ./wiremock/uae-cbdc-files:/home/wiremock/__files
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/__admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=uae-cbdc-simulator"
      - "com.amanahfi.tier=external"

  # === MONITORING STACK ===
  prometheus-islamic:
    image: prom/prometheus:v2.48.0
    container_name: amanahfi-prometheus-islamic
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus-islamic-banking.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_islamic_data:/prometheus
    depends_on:
      - amanahfi-islamic-banking
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=prometheus"
      - "com.amanahfi.tier=monitoring"

  grafana-islamic:
    image: grafana/grafana:10.2.0
    container_name: amanahfi-grafana-islamic
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: amanahfi_admin_pass
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /etc/grafana/provisioning/dashboards/islamic-banking-overview.json
    ports:
      - "3001:3000"
    volumes:
      - grafana_islamic_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards/islamic-banking:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/provisioning/islamic-banking:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus-islamic
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=grafana"
      - "com.amanahfi.tier=monitoring"

  # === API GATEWAY / LOAD BALANCER ===
  nginx-islamic:
    image: nginx:1.25-alpine
    container_name: amanahfi-nginx-islamic
    ports:
      - "8443:443"
      - "8080:80"
    volumes:
      - ./config/nginx-islamic-banking.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
    depends_on:
      - amanahfi-islamic-banking
    restart: unless-stopped
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=api-gateway"
      - "com.amanahfi.tier=edge"

  # === ISLAMIC BANKING FUNCTIONAL TESTS ===
  islamic-banking-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: testing
    image: amanahfi-islamic-banking-tests:latest
    container_name: amanahfi-islamic-banking-tests
    depends_on:
      amanahfi-islamic-banking:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: test,functional,islamic-banking
      FUNCTIONAL_TESTS_ENABLED: "true"
      ISLAMIC_BANKING_TESTS_ENABLED: "true"
      MASRUFI_FRAMEWORK_TESTS_ENABLED: "true"
      SHARIA_COMPLIANCE_TESTS_ENABLED: "true"
      UAE_CBDC_TESTS_ENABLED: "true"
      MFA_TESTS_ENABLED: "true"
      SECURITY_AUDIT_TESTS_ENABLED: "true"
      TEST_TARGET_URL: http://amanahfi-islamic-banking:8080
      
      # Test Data Configuration
      TEST_CUSTOMERS_COUNT: "100"
      TEST_ISLAMIC_CONTRACTS_COUNT: "50"
      TEST_TRANSACTION_VOLUME: "1000"
      
      # Performance Test Configuration
      PERFORMANCE_TESTS_ENABLED: "true"
      LOAD_TEST_DURATION: "300"
      CONCURRENT_USERS: "50"
      
      # UAE Test Data
      TEST_EMIRATES_ID: "784-2024-1234567-8"
      TEST_UAE_MOBILE: "+971501234567"
      TEST_EMAIL: "test@amanahfi.ae"
      TEST_CURRENCY: "AED"
      TEST_SHARIA_BOARD: "UAE_HIGHER_SHARIA_AUTHORITY"
    volumes:
      - islamic_banking_test_reports:/app/test-reports
      - islamic_banking_test_logs:/app/logs
      - islamic_banking_test_data:/app/test-data
    restart: "no"
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=functional-tests"
      - "com.amanahfi.tier=testing"

  # === POSTMAN NEWMAN TEST RUNNER ===
  newman-islamic-tests:
    image: postman/newman:5.3.2-alpine
    container_name: amanahfi-newman-islamic-tests
    depends_on:
      amanahfi-islamic-banking:
        condition: service_healthy
    command: |
      run /postman/Islamic-Banking-API-Tests.postman_collection.json
      --environment /postman/AmanahFi-Enterprise-Environment.postman_environment.json
      --reporters cli,json,html
      --reporter-json-export /newman/results/islamic-banking-test-results.json
      --reporter-html-export /newman/results/islamic-banking-test-report.html
      --timeout 30000
      --delay-request 1000
      --bail
    volumes:
      - ./postman:/postman:ro
      - newman_islamic_results:/newman/results
    restart: "no"
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=newman-tests"
      - "com.amanahfi.tier=testing"

  # === TESTING UTILITIES ===
  curl-test-islamic:
    image: curlimages/curl:8.5.0
    container_name: amanahfi-curl-test-islamic
    command: sleep infinity
    networks:
      - amanahfi-islamic-network
    labels:
      - "com.amanahfi.service=curl-test"
      - "com.amanahfi.tier=utilities"

volumes:
  postgres_islamic_data:
    driver: local
  redis_islamic_data:
    driver: local
  zookeeper_islamic_data:
    driver: local
  zookeeper_islamic_logs:
    driver: local
  prometheus_islamic_data:
    driver: local
  grafana_islamic_data:
    driver: local
  amanahfi_islamic_logs:
    driver: local
  amanahfi_islamic_config:
    driver: local
  amanahfi_islamic_data:
    driver: local
  islamic_banking_test_reports:
    driver: local
  islamic_banking_test_logs:
    driver: local
  islamic_banking_test_data:
    driver: local
  newman_islamic_results:
    driver: local

networks:
  amanahfi-islamic-network:
    driver: bridge
    name: amanahfi-islamic-network
    labels:
      - "com.amanahfi.network=islamic-banking"
      - "com.amanahfi.purpose=test-environment"