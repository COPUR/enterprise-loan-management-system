# Enterprise Banking System - Functional Testing Environment
# Comprehensive setup for enterprise banking with Islamic finance testing
# Includes MFA, Security Audit, Sharia Compliance, and CBDC support

services:
  # === DATABASE ===
  postgres-test:
    image: postgres:15-alpine
    container_name: banking-postgres-test
    environment:
      POSTGRES_DB: banking_test
      POSTGRES_USER: banking_test
      POSTGRES_PASSWORD: banking_test_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      # Islamic Banking Extensions
      POSTGRES_EXTENSIONS: "pgcrypto,uuid-ossp"
      # UAE/Islamic Banking Timezone
      TZ: "Asia/Dubai"
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U banking_test -d banking_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - banking-test-network

  # === CACHE ===
  redis-test:
    image: redis:7-alpine
    container_name: banking-redis-test
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --appendonly yes
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - banking-test-network

  # === BANKING APPLICATION ===
  banking-app-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: enterprise-loan-system:test
    container_name: banking-loan-management-test
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: test,docker,islamic-banking
      SERVER_PORT: 8080
      
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://postgres-test:5432/banking_test
      DATABASE_USERNAME: banking_test
      DATABASE_PASSWORD: banking_test_pass
      
      # Cache Configuration
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      
      # Disable complex features for testing
      SPRING_CLOUD_CONFIG_ENABLED: false
      
      # Enterprise Banking Configuration
      LOAN_MAX_AMOUNT: 5000000
      TRANSACTION_DAILY_LIMIT: 50000
      
      # Islamic Banking Configuration
      ISLAMIC_BANKING_ENABLED: true
      MASRUFI_FRAMEWORK_ENABLED: true
      SHARIA_COMPLIANCE_ENABLED: true
      SHARIA_COMPLIANCE_STRICT_MODE: true
      UAE_CBDC_ENABLED: true
      UAE_TIMEZONE: "Asia/Dubai"
      
      # Multi-Factor Authentication
      MFA_ENABLED: true
      MFA_TOTP_ENABLED: true
      MFA_SMS_ENABLED: true
      MFA_EMAIL_ENABLED: true
      
      # Security Audit Configuration
      SECURITY_AUDIT_ENABLED: true
      SECURITY_AUDIT_LOG_LEVEL: INFO
      
      # FAPI 2.0 Security Configuration
      FAPI_ENABLED: true
      OAUTH2_ENABLED: true
      DPOP_ENABLED: true
      
      # Supported Currencies for Testing
      SUPPORTED_CURRENCIES: "AED,USD,EUR,SAR,QAR,KWD,BHD"
      DEFAULT_CURRENCY: "AED"
      
      # Islamic Finance Products
      MURABAHA_ENABLED: true
      MUSHARAKAH_ENABLED: true
      IJARAH_ENABLED: true
      SALAM_ENABLED: true
      ISTISNA_ENABLED: true
      
      # Compliance and Regulatory
      CBUAE_COMPLIANCE_ENABLED: true
      VARA_COMPLIANCE_ENABLED: true
      HSA_COMPLIANCE_ENABLED: true
      
      # Analytics and Monitoring
      ISLAMIC_BANKING_ANALYTICS_ENABLED: true
      BUSINESS_INTELLIGENCE_ENABLED: true
      REAL_TIME_MONITORING_ENABLED: true
      
      # Application Metadata
      APP_NAME: "Enterprise Loan Management System - Test"
      APP_VERSION: "1.0.0-test"
      
      # JVM Configuration
      JAVA_OPTS: >-
        -server
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -Djava.security.egd=file:/dev/./urandom
        -Dspring.profiles.active=test,docker
        -Dfile.encoding=UTF-8
        -Duser.timezone=UTC
    ports:
      - "8081:8080"
    volumes:
      - banking_test_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - banking-test-network

# === VOLUMES ===
volumes:
  postgres_test_data:
    driver: local
  redis_test_data:
    driver: local
  banking_test_logs:
    driver: local

# === NETWORKS ===
networks:
  banking-test-network:
    driver: bridge
    name: banking-test-network