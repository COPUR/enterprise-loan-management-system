# Enhanced Enterprise Banking System Dockerfile
# Multi-stage build for Spring Boot application with AI features

FROM eclipse-temurin:21-jdk-alpine AS builder

# Install required tools
RUN apk add --no-cache curl git

# Set working directory
WORKDIR /workspace/app

# Copy Gradle files
COPY gradle gradle
COPY gradlew .
COPY gradle.properties .
COPY build.gradle .
COPY settings.gradle .

# Copy source code
COPY src src

# Build application
RUN chmod +x gradlew && ./gradlew clean build -x test

# Runtime stage
FROM eclipse-temurin:21-jre-alpine AS runtime

# Install required packages for banking operations
RUN apk add --no-cache \
    curl \
    bash \
    tzdata \
    && cp /usr/share/zoneinfo/UTC /etc/localtime \
    && echo "UTC" > /etc/timezone

# Create application user
RUN addgroup -g 1001 banking && \
    adduser -D -s /bin/false -G banking -u 1001 banking

# Set working directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/logs /app/config /app/ai/models /app/schemas/berlin-group /app/schemas/bian && \
    chown -R banking:banking /app

# Copy application JAR from builder stage
COPY --from=builder /workspace/app/build/libs/*.jar /app/banking-app.jar

# Set ownership
RUN chown banking:banking /app/banking-app.jar

# Switch to non-root user
USER banking

# Health check
HEALTHCHECK --interval=30s --timeout=15s --start-period=180s --retries=5 \
    CMD curl -f http://localhost:8080/api/actuator/health || exit 1

# Expose ports
EXPOSE 8080

# Environment variables
ENV JAVA_OPTS="-server -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UseContainerSupport -XX:MaxRAMPercentage=70.0"
ENV SPRING_PROFILES_ACTIVE="enhanced-enterprise,docker"

# Start application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar /app/banking-app.jar"]