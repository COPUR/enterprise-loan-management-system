apiVersion: v1
kind: ServiceAccount
metadata:
  name: amanahfi-platform
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/instance: amanahfi-platform
    app.kubernetes.io/component: service-account
    app.kubernetes.io/part-of: amanahfi-ecosystem
    app.kubernetes.io/managed-by: kustomize
  annotations:
    description: "Service account for AmanahFi Platform with minimal required permissions"
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789012:role/AmanahFiPlatformRole"  # For IRSA if using AWS EKS
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: amanahfi-platform-role
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/instance: amanahfi-platform
    app.kubernetes.io/component: role
    app.kubernetes.io/part-of: amanahfi-ecosystem
  annotations:
    description: "Role with minimal permissions required for AmanahFi Platform operation"
rules:
# ConfigMap access for dynamic configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["amanahfi-platform-config", "amanahfi-platform-regulatory-config", "amanahfi-platform-islamic-finance-config"]

# Secret access for sensitive configuration
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["amanahfi-platform-secrets", "amanahfi-platform-tls", "amanahfi-platform-mtls-keystore"]

# Pod information access for service discovery
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
  
# Service information for service mesh integration
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]

# Endpoint access for load balancing and discovery
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch"]

# Events for monitoring and troubleshooting
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Custom resource access for Islamic Finance compliance
- apiGroups: ["compliance.amanahfi.ae"]
  resources: ["shariacompliances", "regulatoryreports"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

# Custom resource access for CBDC operations
- apiGroups: ["cbdc.amanahfi.ae"]
  resources: ["digitaldirhams", "cordatransactions"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: amanahfi-platform-role-binding
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/instance: amanahfi-platform
    app.kubernetes.io/component: role-binding
    app.kubernetes.io/part-of: amanahfi-ecosystem
  annotations:
    description: "Role binding for AmanahFi Platform service account"
subjects:
- kind: ServiceAccount
  name: amanahfi-platform
  namespace: amanahfi-platform
roleRef:
  kind: Role
  name: amanahfi-platform-role
  apiGroup: rbac.authorization.k8s.io

---
# ClusterRole for cross-namespace service discovery (if needed)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: amanahfi-platform-cluster-role
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/instance: amanahfi-platform
    app.kubernetes.io/component: cluster-role
    app.kubernetes.io/part-of: amanahfi-ecosystem
  annotations:
    description: "Cluster-level permissions for AmanahFi Platform"
rules:
# Node information for scheduling decisions
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]

# Custom resource definitions for platform extensions
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["shariacompliances.compliance.amanahfi.ae", "digitaldirhams.cbdc.amanahfi.ae"]

# Access to platform-wide monitoring resources
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors", "prometheusrules"]
  verbs: ["get", "list", "watch"]

# Certificate management for mTLS
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests"]
  verbs: ["get", "list", "watch", "create", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: amanahfi-platform-cluster-role-binding
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/instance: amanahfi-platform
    app.kubernetes.io/component: cluster-role-binding
    app.kubernetes.io/part-of: amanahfi-ecosystem
  annotations:
    description: "Cluster role binding for AmanahFi Platform"
subjects:
- kind: ServiceAccount
  name: amanahfi-platform
  namespace: amanahfi-platform
roleRef:
  kind: ClusterRole
  name: amanahfi-platform-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
# Service account for monitoring components
apiVersion: v1
kind: ServiceAccount
metadata:
  name: amanahfi-platform-monitoring
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/instance: amanahfi-platform
    app.kubernetes.io/component: monitoring-service-account
    app.kubernetes.io/part-of: amanahfi-ecosystem
  annotations:
    description: "Service account for monitoring and observability components"
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: amanahfi-platform-monitoring-role
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/component: monitoring-role
    app.kubernetes.io/part-of: amanahfi-ecosystem
rules:
# Access to monitoring endpoints
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]

# Access to monitoring configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
  resourceNames: ["prometheus-config", "grafana-config", "alertmanager-config"]

# Metrics access
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: amanahfi-platform-monitoring-role-binding
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/component: monitoring-role-binding
    app.kubernetes.io/part-of: amanahfi-ecosystem
subjects:
- kind: ServiceAccount
  name: amanahfi-platform-monitoring
  namespace: amanahfi-platform
roleRef:
  kind: Role
  name: amanahfi-platform-monitoring-role
  apiGroup: rbac.authorization.k8s.io

---
# Service account for compliance and security scanning
apiVersion: v1
kind: ServiceAccount
metadata:
  name: amanahfi-platform-security
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/component: security-service-account
    app.kubernetes.io/part-of: amanahfi-ecosystem
  annotations:
    description: "Service account for security scanning and compliance validation"
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: amanahfi-platform-security-role
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/component: security-role
    app.kubernetes.io/part-of: amanahfi-ecosystem
rules:
# Security scanning access
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]

# Security policy enforcement
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  verbs: ["use"]
  resourceNames: ["amanahfi-platform-psp"]

# Network policy access
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: amanahfi-platform-security-role-binding
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: amanahfi-platform
    app.kubernetes.io/component: security-role-binding
    app.kubernetes.io/part-of: amanahfi-ecosystem
subjects:
- kind: ServiceAccount
  name: amanahfi-platform-security
  namespace: amanahfi-platform
roleRef:
  kind: Role
  name: amanahfi-platform-security-role
  apiGroup: rbac.authorization.k8s.io