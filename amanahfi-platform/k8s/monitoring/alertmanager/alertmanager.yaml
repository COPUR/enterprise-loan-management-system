apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: monitoring
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'smtp.amanahfi.ae:587'
      smtp_from: 'alerts@amanahfi.ae'
      smtp_auth_username: 'alerts@amanahfi.ae'
      smtp_auth_password: '${SMTP_PASSWORD}'
      smtp_require_tls: true
      
      # Slack webhook for general alerts
      slack_api_url: '${SLACK_WEBHOOK_URL}'
      
      # PagerDuty integration for critical alerts
      pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'
      
      # Default values
      resolve_timeout: 5m

    # Templates for custom notifications
    templates:
    - '/etc/alertmanager/templates/*.tmpl'

    # Routing rules
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'default'
      
      routes:
      # Critical Islamic Finance alerts
      - match:
          severity: critical
          compliance: sharia
        receiver: 'islamic-finance-critical'
        group_wait: 0s
        repeat_interval: 15m
        continue: true

      # Critical CBDC alerts
      - match:
          severity: critical
          team: cbdc
        receiver: 'cbdc-critical'
        group_wait: 0s
        repeat_interval: 15m
        continue: true

      # Regulatory compliance alerts
      - match_re:
          compliance: 'aml|sanctions|sar'
        receiver: 'compliance-team'
        group_wait: 0s
        repeat_interval: 30m
        continue: true

      # Platform critical alerts
      - match:
          severity: critical
          service: amanahfi-platform
        receiver: 'platform-critical'
        group_wait: 30s
        repeat_interval: 5m
        continue: true

      # Security alerts
      - match_re:
          alertname: '.*Security.*|.*Auth.*|.*Breach.*'
        receiver: 'security-team'
        group_wait: 0s
        repeat_interval: 10m
        continue: true

      # Infrastructure warnings
      - match:
          severity: warning
          component: infrastructure
        receiver: 'infrastructure-team'
        group_wait: 5m
        repeat_interval: 2h

      # Business metrics alerts
      - match_re:
          team: 'business|product'
        receiver: 'business-team'
        group_wait: 10m
        repeat_interval: 4h

    # Inhibition rules to reduce noise
    inhibit_rules:
    # Inhibit warning alerts if critical alert is firing
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'instance']

    # Inhibit individual service alerts if general platform is down
    - source_match:
        alertname: 'AmanahFiPlatformDown'
      target_match_re:
        alertname: '.*HighErrorRate|.*HighResponseTime.*'
      equal: ['instance']

    # Receivers configuration
    receivers:
    - name: 'default'
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#amanahfi-alerts'
        title: 'AmanahFi Platform Alert'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Severity:* {{ .Labels.severity }}
          *Service:* {{ .Labels.service }}
          *Runbook:* {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true

    - name: 'islamic-finance-critical'
      email_configs:
      - to: 'islamic-finance-team@amanahfi.ae,hsa-compliance@amanahfi.ae'
        subject: '[CRITICAL] Islamic Finance Alert - {{ .GroupLabels.alertname }}'
        body: |
          üïå CRITICAL ISLAMIC FINANCE ALERT
          
          Service: {{ .GroupLabels.service }}
          Alert: {{ .GroupLabels.alertname }}
          
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          Sharia Compliance Impact: This alert may indicate a potential violation of Islamic finance principles.
          
          Immediate Actions Required:
          1. Investigate the root cause immediately
          2. Ensure no non-Sharia compliant transactions are processed
          3. Contact HSA compliance team if needed
          4. Review runbook: {{ .Annotations.runbook_url }}
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}
          {{ end }}
        send_resolved: true
      
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#islamic-finance-alerts'
        color: 'danger'
        title: 'üïå CRITICAL: Islamic Finance Alert'
        text: |
          <!here> Critical Islamic Finance alert requiring immediate attention
          
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Compliance Type:* {{ .Labels.compliance }}
          *Runbook:* {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true
      
      pagerduty_configs:
      - routing_key: '${PAGERDUTY_ISLAMIC_FINANCE_KEY}'
        severity: 'critical'
        description: 'Islamic Finance Critical Alert: {{ .GroupLabels.alertname }}'
        details:
          alert_name: '{{ .GroupLabels.alertname }}'
          service: '{{ .GroupLabels.service }}'
          compliance_type: '{{ .CommonLabels.compliance }}'

    - name: 'cbdc-critical'
      email_configs:
      - to: 'cbdc-team@amanahfi.ae,cbuae-liaison@amanahfi.ae'
        subject: '[CRITICAL] CBDC Digital Dirham Alert - {{ .GroupLabels.alertname }}'
        body: |
          üíé CRITICAL CBDC ALERT
          
          Service: {{ .GroupLabels.service }}
          Alert: {{ .GroupLabels.alertname }}
          
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          CBDC Network Impact: This alert may affect Digital Dirham operations.
          
          Immediate Actions Required:
          1. Check Corda network connectivity
          2. Verify Digital Dirham wallet balances
          3. Contact CBUAE technical team if needed
          4. Review runbook: {{ .Annotations.runbook_url }}
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}
          {{ end }}
        send_resolved: true
      
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#cbdc-alerts'
        color: 'danger'
        title: 'üíé CRITICAL: CBDC Alert'
        text: |
          <!here> Critical CBDC alert requiring immediate attention
          
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Network:* {{ .Labels.network }}
          *Runbook:* {{ .Annotations.runbook_url }}
          {{ end }}
        send_resolved: true
      
      pagerduty_configs:
      - routing_key: '${PAGERDUTY_CBDC_KEY}'
        severity: 'critical'
        description: 'CBDC Critical Alert: {{ .GroupLabels.alertname }}'

    - name: 'compliance-team'
      email_configs:
      - to: 'compliance-team@amanahfi.ae,legal-team@amanahfi.ae'
        subject: '[COMPLIANCE] Regulatory Alert - {{ .GroupLabels.alertname }}'
        body: |
          ‚öñÔ∏è REGULATORY COMPLIANCE ALERT
          
          Alert: {{ .GroupLabels.alertname }}
          Compliance Type: {{ .CommonLabels.compliance }}
          
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          Regulatory Impact: This alert indicates a potential compliance issue.
          
          Required Actions:
          1. Review the compliance violation immediately
          2. Document the incident for regulatory reporting
          3. Contact relevant regulatory authority if required
          4. Escalate to: {{ .Annotations.escalation }}
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}
          {{ end }}
        send_resolved: true
      
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#compliance-alerts'
        color: 'warning'
        title: '‚öñÔ∏è COMPLIANCE: Regulatory Alert'
        send_resolved: true

    - name: 'platform-critical'
      email_configs:
      - to: 'platform-team@amanahfi.ae,devops-team@amanahfi.ae'
        subject: '[CRITICAL] Platform Alert - {{ .GroupLabels.alertname }}'
        body: |
          üö® CRITICAL PLATFORM ALERT
          
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          
          Runbook: {{ .Annotations.runbook_url }}
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}
          {{ end }}
        send_resolved: true
      
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#platform-alerts'
        color: 'danger'
        title: 'üö® CRITICAL: Platform Alert'
        send_resolved: true
      
      pagerduty_configs:
      - routing_key: '${PAGERDUTY_PLATFORM_KEY}'
        severity: 'critical'

    - name: 'security-team'
      email_configs:
      - to: 'security-team@amanahfi.ae,ciso@amanahfi.ae'
        subject: '[SECURITY] Security Alert - {{ .GroupLabels.alertname }}'
        body: |
          üîí SECURITY ALERT
          
          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          IMMEDIATE SECURITY RESPONSE REQUIRED
          
          Time: {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}
          {{ end }}
        send_resolved: true
      
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#security-alerts'
        color: 'danger'
        title: 'üîí SECURITY ALERT'
        send_resolved: true

    - name: 'infrastructure-team'
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#infrastructure-alerts'
        color: 'warning'
        title: 'üîß Infrastructure Warning'
        send_resolved: true

    - name: 'business-team'
      email_configs:
      - to: 'business-team@amanahfi.ae'
        subject: '[INFO] Business Metrics Alert - {{ .GroupLabels.alertname }}'
        send_resolved: true
      
      slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#business-metrics'
        color: 'warning'
        title: 'üìä Business Metrics Alert'
        send_resolved: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-templates
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: templates
data:
  default.tmpl: |
    {{ define "__alertmanager" }}AlertManager{{ end }}
    {{ define "__alertmanagerURL" }}{{ .ExternalURL }}/#/alerts?receiver={{ .Receiver | urlquery }}{{ end }}

    {{ define "__subject" }}[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .GroupLabels.SortedPairs.Values | join " " }} {{ if gt (len .CommonLabels) (len .GroupLabels) }}({{ with .CommonLabels.Remove .GroupLabels.Names }}{{ .Values | join " " }}{{ end }}){{ end }}{{ end }}

    {{ define "__description" }}{{ end }}

    {{ define "__text_alert_list" }}{{ range . }}Labels:
    {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}Annotations:
    {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}Source: {{ .GeneratorURL }}
    {{ end }}{{ end }}

    {{ define "slack.amanahfi.title" }}
    [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] AmanahFi Platform Alert
    {{ end }}

    {{ define "slack.amanahfi.text" }}
    {{ if gt (len .Alerts.Firing) 0 }}
    *Firing Alerts:*
    {{ range .Alerts.Firing }}
    ‚Ä¢ *{{ .Annotations.summary }}*
      {{ .Annotations.description }}
      _Service:_ {{ .Labels.service }}
      _Severity:_ {{ .Labels.severity }}
    {{ end }}
    {{ end }}
    {{ if gt (len .Alerts.Resolved) 0 }}
    *Resolved Alerts:*
    {{ range .Alerts.Resolved }}
    ‚Ä¢ *{{ .Annotations.summary }}* ‚úÖ
    {{ end }}
    {{ end }}
    {{ end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: alerting
    app.kubernetes.io/part-of: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: alertmanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alertmanager
      annotations:
        checksum/config: "{{ include (print $.Template.BasePath \"/configmap.yaml\") . | sha256sum }}"
    spec:
      serviceAccountName: alertmanager
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.26.0
        imagePullPolicy: IfNotPresent
        
        args:
          - '--config.file=/etc/alertmanager/alertmanager.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=https://alertmanager.amanahfi.ae'
          - '--web.route-prefix=/'
          - '--cluster.listen-address=0.0.0.0:9094'
          - '--log.level=info'
        
        env:
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: smtp-password
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: slack-webhook-url
        - name: PAGERDUTY_ISLAMIC_FINANCE_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: pagerduty-islamic-finance-key
        - name: PAGERDUTY_CBDC_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: pagerduty-cbdc-key
        - name: PAGERDUTY_PLATFORM_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: pagerduty-platform-key
        
        ports:
        - name: web
          containerPort: 9093
          protocol: TCP
        - name: cluster
          containerPort: 9094
          protocol: TCP
        
        volumeMounts:
        - name: config-volume
          mountPath: /etc/alertmanager
          readOnly: true
        - name: storage-volume
          mountPath: /alertmanager
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: web
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 15
        
        readinessProbe:
          httpGet:
            path: /-/ready
            port: web
          initialDelaySeconds: 5
          timeoutSeconds: 30
          periodSeconds: 5
        
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: config-volume
        projected:
          sources:
          - configMap:
              name: alertmanager-config
          - configMap:
              name: alertmanager-templates
      - name: storage-volume
        persistentVolumeClaim:
          claimName: alertmanager-storage

---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: alerting
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9093"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9093
    targetPort: web
    protocol: TCP
  - name: cluster
    port: 9094
    targetPort: cluster
    protocol: TCP
  selector:
    app.kubernetes.io/name: alertmanager

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-storage
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp3

---
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-secrets
  namespace: amanahfi-platform
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  smtp-password: "PLACEHOLDER_SMTP_PASSWORD"
  slack-webhook-url: "PLACEHOLDER_SLACK_WEBHOOK_URL"
  pagerduty-islamic-finance-key: "PLACEHOLDER_PAGERDUTY_IF_KEY"
  pagerduty-cbdc-key: "PLACEHOLDER_PAGERDUTY_CBDC_KEY"
  pagerduty-platform-key: "PLACEHOLDER_PAGERDUTY_PLATFORM_KEY"