# Default values for amanahfi-platform
# This is a YAML-formatted file.

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# API Gateway Configuration
apiGateway:
  enabled: true
  replicaCount: 2
  image:
    repository: amanahfi/api-gateway
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    port: 8080
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: api.amanahfi.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

# Onboarding Context
onboarding:
  enabled: true
  replicaCount: 2
  image:
    repository: amanahfi/onboarding-context
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8081
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# Accounts Context
accounts:
  enabled: true
  replicaCount: 2
  image:
    repository: amanahfi/accounts-context
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8082
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# Payments Context
payments:
  enabled: true
  replicaCount: 3
  image:
    repository: amanahfi/payments-context
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8083
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

# Murabaha Context
murabaha:
  enabled: true
  replicaCount: 2
  image:
    repository: amanahfi/murabaha-context
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8084
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# Compliance Context
compliance:
  enabled: true
  replicaCount: 2
  image:
    repository: amanahfi/compliance-context
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8085
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# PostgreSQL Configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "amanahfi-postgres"
    username: "amanahfi"
    password: "amanahfi-password"
    database: "amanahfi"
  primary:
    persistence:
      enabled: true
      size: 50Gi
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

# Kafka Configuration
kafka:
  enabled: true
  replicaCount: 3
  auth:
    clientProtocol: plaintext
  persistence:
    enabled: true
    size: 20Gi
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  zookeeper:
    enabled: true
    replicaCount: 3
    persistence:
      enabled: true
      size: 10Gi

# Redis Configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "amanahfi-redis"
  master:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true

# Logging
logging:
  level:
    com.amanahfi: INFO
    org.springframework: WARN
    org.apache.kafka: WARN