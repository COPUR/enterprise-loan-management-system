version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: amanahfi-postgres
    environment:
      POSTGRES_DB: amanahfi
      POSTGRES_USER: amanahfi
      POSTGRES_PASSWORD: amanahfi-password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - amanahfi-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: amanahfi-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - amanahfi-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: amanahfi-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - amanahfi-network

  redis:
    image: redis:7-alpine
    container_name: amanahfi-redis
    command: redis-server --requirepass amanahfi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - amanahfi-network

  # Application Services
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: amanahfi-api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: amanahfi-redis
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka:8761/eureka
    depends_on:
      - redis
    networks:
      - amanahfi-network

  onboarding-service:
    build:
      context: ./onboarding-context
      dockerfile: Dockerfile
    container_name: amanahfi-onboarding
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/amanahfi
      SPRING_DATASOURCE_USERNAME: amanahfi
      SPRING_DATASOURCE_PASSWORD: amanahfi-password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: amanahfi-redis
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - amanahfi-network

  accounts-service:
    build:
      context: ./accounts-context
      dockerfile: Dockerfile
    container_name: amanahfi-accounts
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/amanahfi
      SPRING_DATASOURCE_USERNAME: amanahfi
      SPRING_DATASOURCE_PASSWORD: amanahfi-password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: amanahfi-redis
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - amanahfi-network

  payments-service:
    build:
      context: ./payments-context
      dockerfile: Dockerfile
    container_name: amanahfi-payments
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/amanahfi
      SPRING_DATASOURCE_USERNAME: amanahfi
      SPRING_DATASOURCE_PASSWORD: amanahfi-password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: amanahfi-redis
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - amanahfi-network

  murabaha-service:
    build:
      context: ./murabaha-context
      dockerfile: Dockerfile
    container_name: amanahfi-murabaha
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/amanahfi
      SPRING_DATASOURCE_USERNAME: amanahfi
      SPRING_DATASOURCE_PASSWORD: amanahfi-password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: amanahfi-redis
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - amanahfi-network

  compliance-service:
    build:
      context: ./compliance-context
      dockerfile: Dockerfile
    container_name: amanahfi-compliance
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/amanahfi
      SPRING_DATASOURCE_USERNAME: amanahfi
      SPRING_DATASOURCE_PASSWORD: amanahfi-password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PASSWORD: amanahfi-redis
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - amanahfi-network

volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:
  redis_data:

networks:
  amanahfi-network:
    driver: bridge