apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-service
  namespace: banking-system
  labels:
    app: loan-service
    version: "1.0.0"
    service: loan-origination
    tier: microservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: loan-service
  template:
    metadata:
      labels:
        app: loan-service
        version: "1.0.0"
        service: loan-origination
      annotations:
        # Istio sidecar injection
        sidecar.istio.io/inject: "true"
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        # Istio traffic management
        traffic.sidecar.istio.io/includeInboundPorts: "8082"
        traffic.sidecar.istio.io/excludeOutboundPorts: "5432,6379,9092"
        # Prometheus metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "8082"
        prometheus.io/path: "/actuator/prometheus"
        # Service mesh config for high-volume loan processing
        proxy.istio.io/config: |
          proxyStatsMatcher:
            inclusionRegexps:
            - ".*loan.*"
            - ".*_rq_.*"
            - ".*saga.*"
          concurrency: 4
    spec:
      serviceAccountName: loan-service-sa
      containers:
      - name: loan-service
        image: loan-service:1.0.0
        ports:
        - containerPort: 8082
          name: http
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production,kubernetes,loan,saga"
        - name: SERVER_PORT
          value: "8082"
        - name: REDIS_HOST
          value: "banking-redis"
        - name: DATABASE_URL
          value: "jdbc:postgresql://banking-postgres:5432/loan_db"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: SAGA_ENABLED
          value: "true"
        - name: BUSINESS_RULES_STRICT
          value: "true"
        - name: MICROSERVICE_NAME
          value: "loan-service"
        resources:
          requests:
            memory: "1.5Gi"
            cpu: "750m"
          limits:
            memory: "3Gi"
            cpu: "1500m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: http
          initialDelaySeconds: 90
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: http
          initialDelaySeconds: 45
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: loan-service
  namespace: banking-system
  labels:
    app: loan-service
    service: loan-origination
spec:
  selector:
    app: loan-service
  ports:
  - port: 8082
    targetPort: 8082
    name: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loan-service-sa
  namespace: banking-system
  labels:
    app: loan-service