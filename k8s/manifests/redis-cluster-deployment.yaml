apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: banking-system
  labels:
    app: redis-cluster
    service: distributed-cache
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
        service: distributed-cache
      annotations:
        # Istio sidecar injection for Redis
        sidecar.istio.io/inject: "true"
        traffic.sidecar.istio.io/includeInboundPorts: "6379,16379"
        # Redis-specific Istio config
        proxy.istio.io/config: |
          proxyStatsMatcher:
            inclusionRegexps:
            - ".*redis.*"
            - ".*cache.*"
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command:
        - redis-server
        args:
        - /etc/redis/redis.conf
        - --cluster-enabled
        - "yes"
        - --cluster-config-file
        - /data/nodes.conf
        - --cluster-node-timeout
        - "5000"
        - --appendonly
        - "yes"
        - --maxmemory
        - "1gb"
        - --maxmemory-policy
        - "allkeys-lru"
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REDIS_CLUSTER_ANNOUNCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /etc/redis/
          readOnly: false
        - name: data
          mountPath: /data
          readOnly: false
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "500m"
      volumes:
      - name: conf
        configMap:
          name: redis-cluster-config
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: banking-system
data:
  redis.conf: |
    # Redis Cluster Configuration for Banking System
    bind 0.0.0.0
    port 6379
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # Security
    requirepass ${REDIS_PASSWORD}
    masterauth ${REDIS_PASSWORD}
    
    # Memory management
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # Logging
    loglevel notice
    logfile ""
    
    # Banking-specific settings
    tcp-keepalive 300
    timeout 0
    tcp-backlog 511
    
    # Persistence for financial data
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: banking-system
  labels:
    app: redis-cluster
    service: distributed-cache
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  clusterIP: None
  selector:
    app: redis-cluster
---
apiVersion: v1
kind: Service
metadata:
  name: banking-redis
  namespace: banking-system
  labels:
    app: redis-cluster
    service: distributed-cache
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  selector:
    app: redis-cluster
    statefulset.kubernetes.io/pod-name: redis-cluster-0
---
# Redis cluster initialization job
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
  namespace: banking-system
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: redis-cluster-init
        image: redis:7.2-alpine
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for Redis pods to be ready..."
          sleep 30
          redis-cli --cluster create \
            redis-cluster-0.redis-cluster.banking-system.svc.cluster.local:6379 \
            redis-cluster-1.redis-cluster.banking-system.svc.cluster.local:6379 \
            redis-cluster-2.redis-cluster.banking-system.svc.cluster.local:6379 \
            redis-cluster-3.redis-cluster.banking-system.svc.cluster.local:6379 \
            redis-cluster-4.redis-cluster.banking-system.svc.cluster.local:6379 \
            redis-cluster-5.redis-cluster.banking-system.svc.cluster.local:6379 \
            --cluster-replicas 1 --cluster-yes