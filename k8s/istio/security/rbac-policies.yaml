apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: banking-deny-all-default
  namespace: banking
  labels:
    app: banking-security
    compliance: fapi-2.0
    security-level: strict
spec:
  {}  # Empty spec denies all traffic by default

---
# Allow health checks and metrics
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-health-checks
  namespace: banking
  labels:
    app: banking-security
    type: health-check
spec:
  action: ALLOW
  rules:
  - to:
    - operation:
        paths: ["/health", "/ready", "/healthz", "/readyz"]
        methods: ["GET"]
  - from:
    - source:
        namespaces: ["istio-system", "monitoring", "kube-system"]
    to:
    - operation:
        paths: ["/metrics", "/stats/prometheus"]
        methods: ["GET"]

---
# Gateway to services authorization
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: gateway-to-services
  namespace: banking
  labels:
    app: banking-security
    compliance: fapi-2.0
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
    when:
    - key: request.headers[x-fapi-interaction-id]
      notValues: [""]
    - key: request.headers[authorization]
      notValues: [""]
    - key: source.namespace
      values: ["istio-system"]

---
# Loan Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: loan-service-rbac
  namespace: banking
  labels:
    app: loan-service
    compliance: fapi-2.0
    data-classification: sensitive
spec:
  selector:
    matchLabels:
      app: loan-service
  action: ALLOW
  rules:
  # Allow gateway access
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/api/v1/loans*"]
        methods: ["GET", "POST", "PUT", "DELETE"]
    when:
    - key: request.auth.claims[scope]
      values: ["loans:read", "loans:write", "loans:admin"]
  # Allow customer service to check loan eligibility
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/customer-service"]
    to:
    - operation:
        paths: ["/api/v1/loans/eligibility*"]
        methods: ["GET", "POST"]
  # Allow payment service to update loan status
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/payment-service"]
    to:
    - operation:
        paths: ["/api/v1/loans/*/payments"]
        methods: ["POST", "PUT"]
  # Allow AI service for loan recommendations
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/ai-service"]
    to:
    - operation:
        paths: ["/api/v1/loans/recommendations", "/api/v1/loans/risk-assessment"]
        methods: ["GET", "POST"]

---
# Payment Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: payment-service-rbac
  namespace: banking
  labels:
    app: payment-service
    compliance: pci-dss
    data-classification: highly-sensitive
spec:
  selector:
    matchLabels:
      app: payment-service
  action: ALLOW
  rules:
  # Allow gateway access for payment operations
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/api/v1/payments*", "/open-banking/v3.1/pisp*"]
        methods: ["GET", "POST", "PUT"]
    when:
    - key: request.auth.claims[scope]
      values: ["payments:read", "payments:write", "payments:admin", "openbanking:pisp"]
    - key: request.headers[x-idempotency-key]
      notValues: [""]
  # Allow loan service to process loan payments
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/loan-service"]
    to:
    - operation:
        paths: ["/api/v1/payments/loan-payments"]
        methods: ["POST"]
  # Allow audit service read access
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/audit-service"]
    to:
    - operation:
        paths: ["/api/v1/payments/audit*"]
        methods: ["GET"]

---
# Customer Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: customer-service-rbac
  namespace: banking
  labels:
    app: customer-service
    compliance: gdpr
    data-classification: pii
spec:
  selector:
    matchLabels:
      app: customer-service
  action: ALLOW
  rules:
  # Allow gateway access
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/api/v1/customers*"]
        methods: ["GET", "POST", "PUT", "DELETE"]
    when:
    - key: request.auth.claims[scope]
      values: ["customers:read", "customers:write", "customers:admin"]
    # GDPR compliance - require consent header for PII access
    - key: request.headers[x-gdpr-consent]
      values: ["granted"]
  # Allow loan service to verify customer
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/loan-service"]
    to:
    - operation:
        paths: ["/api/v1/customers/*/verification", "/api/v1/customers/*/credit-check"]
        methods: ["GET", "POST"]
  # Allow payment service to get customer details
  - from:
    - source:
        principals: ["cluster.local/ns/banking/sa/payment-service"]
    to:
    - operation:
        paths: ["/api/v1/customers/*/payment-methods"]
        methods: ["GET"]

---
# AI Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ai-service-rbac
  namespace: banking
  labels:
    app: ai-service
    compliance: fapi-2.0
    data-classification: sensitive
spec:
  selector:
    matchLabels:
      app: ai-service
  action: ALLOW
  rules:
  # Allow gateway access
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/api/v1/ai*"]
        methods: ["GET", "POST"]
    when:
    - key: request.auth.claims[scope]
      values: ["ai:read", "ai:write", "ai:admin"]
  # Allow internal services to use AI capabilities
  - from:
    - source:
        principals: 
        - "cluster.local/ns/banking/sa/loan-service"
        - "cluster.local/ns/banking/sa/customer-service"
    to:
    - operation:
        paths: ["/api/v1/ai/analyze", "/api/v1/ai/recommendations"]
        methods: ["POST"]

---
# Audit Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: audit-service-rbac
  namespace: banking
  labels:
    app: audit-service
    compliance: sox
    data-classification: regulatory
spec:
  selector:
    matchLabels:
      app: audit-service
  action: ALLOW
  rules:
  # Allow all banking services to write audit logs
  - from:
    - source:
        namespaces: ["banking"]
    to:
    - operation:
        paths: ["/api/v1/audit/events"]
        methods: ["POST"]
  # Allow compliance and security teams read access
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/api/v1/audit*"]
        methods: ["GET"]
    when:
    - key: request.auth.claims[roles]
      values: ["compliance-officer", "security-auditor", "admin"]

---
# Compliance Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: compliance-service-rbac
  namespace: banking
  labels:
    app: compliance-service
    compliance: multiple
    data-classification: regulatory
spec:
  selector:
    matchLabels:
      app: compliance-service
  action: ALLOW
  rules:
  # Allow all banking services to check compliance
  - from:
    - source:
        namespaces: ["banking"]
    to:
    - operation:
        paths: ["/api/v1/compliance/check", "/api/v1/compliance/validate"]
        methods: ["POST"]
  # Allow compliance officers full access
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/api/v1/compliance*"]
        methods: ["GET", "POST", "PUT"]
    when:
    - key: request.auth.claims[roles]
      values: ["compliance-officer", "admin"]

---
# Keycloak Service RBAC
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: keycloak-rbac
  namespace: security
  labels:
    app: keycloak
    compliance: fapi-2.0
spec:
  selector:
    matchLabels:
      app: keycloak
  action: ALLOW
  rules:
  # Allow public access to OIDC endpoints
  - to:
    - operation:
        paths: 
        - "/realms/banking/.well-known/openid-configuration"
        - "/realms/banking/protocol/openid-connect/certs"
        - "/realms/banking/protocol/openid-connect/token"
        - "/realms/banking/protocol/openid-connect/auth"
        methods: ["GET", "POST"]
  # Allow banking services to validate tokens
  - from:
    - source:
        namespaces: ["banking", "istio-system"]
    to:
    - operation:
        paths: 
        - "/realms/banking/protocol/openid-connect/token/introspect"
        - "/realms/banking/protocol/openid-connect/userinfo"
        methods: ["POST", "GET"]

---
# Inter-service communication policies
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: service-to-service-communication
  namespace: banking
  labels:
    app: banking-security
    type: internal
spec:
  action: ALLOW
  rules:
  # Allow services to communicate with shared services
  - from:
    - source:
        namespaces: ["banking"]
    to:
    - operation:
        paths: 
        - "/internal/cache*"
        - "/internal/events*"
        - "/internal/metrics*"
        methods: ["GET", "POST", "PUT", "DELETE"]
    when:
    - key: source.workload.name
      notValues: [""]

---
# Admin access policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: admin-full-access
  namespace: banking
  labels:
    app: banking-security
    type: admin
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    when:
    - key: request.auth.claims[roles]
      values: ["admin", "super-admin"]
    - key: request.headers[x-admin-action-reason]
      notValues: [""]  # Require audit reason for admin actions

---
# Deny external access to internal endpoints
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-external-to-internal
  namespace: banking
  labels:
    app: banking-security
    type: security
spec:
  action: DENY
  rules:
  - from:
    - source:
        notNamespaces: ["banking", "istio-system", "monitoring", "security"]
    to:
    - operation:
        paths: ["/internal*", "/private*", "/admin*"]

---
# Custom RBAC for Open Banking APIs
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: open-banking-rbac
  namespace: banking
  labels:
    app: open-banking
    compliance: fapi-2.0
spec:
  action: ALLOW
  rules:
  # Account Information Service Provider (AISP)
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/open-banking/v3.1/aisp*"]
        methods: ["GET"]
    when:
    - key: request.auth.claims[scope]
      values: ["accounts", "openbanking:aisp"]
    - key: request.headers[x-fapi-financial-id]
      notValues: [""]
  # Payment Initiation Service Provider (PISP)
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        paths: ["/open-banking/v3.1/pisp*"]
        methods: ["GET", "POST"]
    when:
    - key: request.auth.claims[scope]
      values: ["payments", "openbanking:pisp"]
    - key: request.headers[x-fapi-financial-id]
      notValues: [""]
    - key: request.headers[x-idempotency-key]
      notValues: [""]  # Required for payment initiation