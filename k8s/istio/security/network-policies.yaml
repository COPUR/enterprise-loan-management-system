apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: banking-default-deny-all
  namespace: banking
  labels:
    app: banking-security
    compliance: fapi-2.0
    security-level: strict
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow DNS resolution for all pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-access
  namespace: banking
  labels:
    app: banking-security
    type: infrastructure
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Allow Istio system communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-istio-system
  namespace: banking
  labels:
    app: banking-security
    type: service-mesh
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 15090  # Envoy stats
    - protocol: TCP
      port: 15021  # Health checks
    - protocol: TCP
      port: 15020  # Merged Prometheus telemetry
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 15012  # XDS and CA services
    - protocol: TCP
      port: 443    # Webhooks

---
# Allow ingress gateway to banking services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-from-ingress-gateway
  namespace: banking
  labels:
    app: banking-security
    type: ingress
spec:
  podSelector:
    matchLabels:
      banking-service: "true"
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443

---
# Loan Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: loan-service-network-policy
  namespace: banking
  labels:
    app: loan-service
    compliance: fapi-2.0
spec:
  podSelector:
    matchLabels:
      app: loan-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
  # From customer service
  - from:
    - podSelector:
        matchLabels:
          app: customer-service
    ports:
    - protocol: TCP
      port: 8080
  # From payment service
  - from:
    - podSelector:
        matchLabels:
          app: payment-service
    ports:
    - protocol: TCP
      port: 8080
  # From AI service
  - from:
    - podSelector:
        matchLabels:
          app: ai-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # To customer service
  - to:
    - podSelector:
        matchLabels:
          app: customer-service
    ports:
    - protocol: TCP
      port: 8080
  # To payment service
  - to:
    - podSelector:
        matchLabels:
          app: payment-service
    ports:
    - protocol: TCP
      port: 8080
  # To AI service
  - to:
    - podSelector:
        matchLabels:
          app: ai-service
    ports:
    - protocol: TCP
      port: 8080
  # To audit service
  - to:
    - podSelector:
        matchLabels:
          app: audit-service
    ports:
    - protocol: TCP
      port: 8080
  # To Keycloak
  - to:
    - namespaceSelector:
        matchLabels:
          name: security
      podSelector:
        matchLabels:
          app: keycloak
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443

---
# Payment Service Network Policy (PCI-DSS Compliant)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: payment-service-network-policy
  namespace: banking
  labels:
    app: payment-service
    compliance: pci-dss
spec:
  podSelector:
    matchLabels:
      app: payment-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From gateway only
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
  # From loan service
  - from:
    - podSelector:
        matchLabels:
          app: loan-service
    ports:
    - protocol: TCP
      port: 8080
  # From audit service
  - from:
    - podSelector:
        matchLabels:
          app: audit-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # To customer service
  - to:
    - podSelector:
        matchLabels:
          app: customer-service
    ports:
    - protocol: TCP
      port: 8080
  # To audit service
  - to:
    - podSelector:
        matchLabels:
          app: audit-service
    ports:
    - protocol: TCP
      port: 8080
  # To compliance service
  - to:
    - podSelector:
        matchLabels:
          app: compliance-service
    ports:
    - protocol: TCP
      port: 8080
  # To external payment gateways (restricted)
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 8443

---
# Customer Service Network Policy (GDPR Compliant)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: customer-service-network-policy
  namespace: banking
  labels:
    app: customer-service
    compliance: gdpr
spec:
  podSelector:
    matchLabels:
      app: customer-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
  # From loan service
  - from:
    - podSelector:
        matchLabels:
          app: loan-service
    ports:
    - protocol: TCP
      port: 8080
  # From payment service
  - from:
    - podSelector:
        matchLabels:
          app: payment-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # To audit service (GDPR audit trail)
  - to:
    - podSelector:
        matchLabels:
          app: audit-service
    ports:
    - protocol: TCP
      port: 8080
  # To compliance service
  - to:
    - podSelector:
        matchLabels:
          app: compliance-service
    ports:
    - protocol: TCP
      port: 8080
  # To Keycloak
  - to:
    - namespaceSelector:
        matchLabels:
          name: security
      podSelector:
        matchLabels:
          app: keycloak
    ports:
    - protocol: TCP
      port: 8080

---
# AI Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-service-network-policy
  namespace: banking
  labels:
    app: ai-service
    compliance: fapi-2.0
spec:
  podSelector:
    matchLabels:
      app: ai-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
  # From loan service
  - from:
    - podSelector:
        matchLabels:
          app: loan-service
    ports:
    - protocol: TCP
      port: 8080
  # From customer service
  - from:
    - podSelector:
        matchLabels:
          app: customer-service
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # To loan service
  - to:
    - podSelector:
        matchLabels:
          app: loan-service
    ports:
    - protocol: TCP
      port: 8080
  # To customer service
  - to:
    - podSelector:
        matchLabels:
          app: customer-service
    ports:
    - protocol: TCP
      port: 8080
  # To audit service
  - to:
    - podSelector:
        matchLabels:
          app: audit-service
    ports:
    - protocol: TCP
      port: 8080
  # To external AI APIs (if needed)
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443

---
# Audit Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: audit-service-network-policy
  namespace: banking
  labels:
    app: audit-service
    compliance: sox
spec:
  podSelector:
    matchLabels:
      app: audit-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From all banking services
  - from:
    - podSelector:
        matchLabels:
          banking-service: "true"
    ports:
    - protocol: TCP
      port: 8080
  # From gateway (for audit queries)
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # To persistent storage
  - to:
    - namespaceSelector:
        matchLabels:
          name: storage
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 9042  # Cassandra
  # To monitoring stack
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090  # Prometheus
    - protocol: TCP
      port: 3100  # Loki

---
# Compliance Service Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: compliance-service-network-policy
  namespace: banking
  labels:
    app: compliance-service
    compliance: multiple
spec:
  podSelector:
    matchLabels:
      app: compliance-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From all banking services
  - from:
    - podSelector:
        matchLabels:
          banking-service: "true"
    ports:
    - protocol: TCP
      port: 8080
  # From gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # To external regulatory APIs
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
  # To audit service
  - to:
    - podSelector:
        matchLabels:
          app: audit-service
    ports:
    - protocol: TCP
      port: 8080

---
# Monitoring namespace access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-access
  namespace: banking
  labels:
    app: banking-security
    type: observability
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090   # Prometheus metrics
    - protocol: TCP
      port: 9093   # Alertmanager
    - protocol: TCP
      port: 3100   # Loki
    - protocol: TCP
      port: 16686  # Jaeger

---
# Keycloak Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-network-policy
  namespace: security
  labels:
    app: keycloak
    compliance: fapi-2.0
spec:
  podSelector:
    matchLabels:
      app: keycloak
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # From Istio gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
      podSelector:
        matchLabels:
          app: istio-ingressgateway
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443
  # From banking services
  - from:
    - namespaceSelector:
        matchLabels:
          name: banking
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8443
  egress:
  # To database
  - to:
    - namespaceSelector:
        matchLabels:
          name: storage
      podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # To LDAP (if configured)
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 389
    - protocol: TCP
      port: 636

---
# Egress policy for external APIs
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-apis
  namespace: banking
  labels:
    app: banking-security
    type: egress
spec:
  podSelector:
    matchLabels:
      allow-external: "true"
  policyTypes:
  - Egress
  egress:
  # To external HTTPS APIs
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 8443
  # Restrict to specific external IPs (example)
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 169.254.169.254/32  # Block AWS metadata service
        - 10.0.0.0/8          # Block internal networks
        - 172.16.0.0/12
        - 192.168.0.0/16