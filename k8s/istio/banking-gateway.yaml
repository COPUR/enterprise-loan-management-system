# Enhanced Enterprise Banking System - Istio Ingress Gateway
# OAuth 2.1 Authorization Code Flow with PKCE Support

apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: banking-gateway
  namespace: banking-system
spec:
  selector:
    istio: ingressgateway
  servers:
  # HTTPS termination with TLS 1.3
  - port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: banking-tls-secret
      minProtocolVersion: TLSV1_3
      maxProtocolVersion: TLSV1_3
      cipherSuites:
      - ECDHE-RSA-AES256-GCM-SHA384
      - ECDHE-RSA-CHACHA20-POLY1305
    hosts:
    - banking.local
    - api.banking.local
    - keycloak.banking.local
  # HTTP redirect to HTTPS
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - banking.local
    - api.banking.local
    - keycloak.banking.local
    tls:
      httpsRedirect: true
---
# Virtual Service for Banking Application
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: banking-vs
  namespace: banking-system
spec:
  hosts:
  - banking.local
  - api.banking.local
  gateways:
  - banking-gateway
  http:
  # OAuth 2.1 Authorization Endpoint
  - match:
    - uri:
        prefix: "/auth"
    route:
    - destination:
        host: oauth2-proxy.banking-system.svc.cluster.local
        port:
          number: 4180
    headers:
      request:
        set:
          x-forwarded-proto: https
          x-forwarded-host: banking.local
  
  # API routes (Protected by OAuth 2.1)
  - match:
    - uri:
        prefix: "/api/"
    route:
    - destination:
        host: banking-service.banking-system.svc.cluster.local
        port:
          number: 8080
    headers:
      request:
        set:
          x-forwarded-proto: https
          x-forwarded-host: api.banking.local
    fault:
      delay:
        percentage:
          value: 0.1
        fixedDelay: 5s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
  
  # GraphQL endpoint
  - match:
    - uri:
        exact: "/graphql"
    route:
    - destination:
        host: banking-service.banking-system.svc.cluster.local
        port:
          number: 8080
    headers:
      request:
        set:
          x-forwarded-proto: https
  
  # WebSocket support for real-time notifications
  - match:
    - uri:
        prefix: "/ws/"
    - headers:
        upgrade:
          exact: websocket
    route:
    - destination:
        host: banking-service.banking-system.svc.cluster.local
        port:
          number: 8080
    headers:
      request:
        set:
          x-forwarded-proto: https
  
  # Static assets and frontend
  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: banking-frontend.banking-system.svc.cluster.local
        port:
          number: 3000
    headers:
      request:
        set:
          x-forwarded-proto: https
---
# Virtual Service for Keycloak
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: keycloak-vs
  namespace: keycloak
spec:
  hosts:
  - keycloak.banking.local
  gateways:
  - banking-system/banking-gateway
  http:
  - match:
    - uri:
        prefix: "/"
    route:
    - destination:
        host: keycloak.keycloak.svc.cluster.local
        port:
          number: 8080
    headers:
      request:
        set:
          x-forwarded-proto: https
          x-forwarded-host: keycloak.banking.local
          x-forwarded-port: "443"
    timeout: 30s
---
# OAuth2 Proxy Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  namespace: banking-system
  labels:
    app: oauth2-proxy
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oauth2-proxy
      version: v1
  template:
    metadata:
      labels:
        app: oauth2-proxy
        version: v1
    spec:
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
        args:
        - --provider=keycloak-oidc
        - --provider-display-name="Enhanced Banking System"
        - --upstream=http://banking-service.banking-system.svc.cluster.local:8080
        - --http-address=0.0.0.0:4180
        - --redirect-url=https://banking.local/oauth2/callback
        - --oidc-issuer-url=https://keycloak.banking.local/realms/banking-system
        - --cookie-secure=true
        - --cookie-httponly=true
        - --cookie-samesite=lax
        - --cookie-expire=1h
        - --cookie-refresh=30m
        - --session-store-type=redis
        - --redis-connection-url=redis://redis.banking-system.svc.cluster.local:6379
        - --skip-provider-button=false
        - --scope=openid profile email banking-operations
        - --email-domain=*
        - --pass-access-token=true
        - --pass-authorization-header=true
        - --set-authorization-header=true
        - --set-xauthrequest=true
        - --skip-auth-regex=^/actuator/health$
        - --skip-auth-regex=^/actuator/info$
        - --skip-auth-regex=^/auth/.*$
        - --reverse-proxy=true
        - --real-client-ip-header=X-Forwarded-For
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: cookie-secret
        ports:
        - containerPort: 4180
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 65532
---
# OAuth2 Proxy Service
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  namespace: banking-system
  labels:
    app: oauth2-proxy
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 4180
    targetPort: 4180
    protocol: TCP
  selector:
    app: oauth2-proxy
---
# OAuth2 Proxy Secret
apiVersion: v1
kind: Secret
metadata:
  name: oauth2-proxy-secret
  namespace: banking-system
type: Opaque
data:
  # SECURITY WARNING: These values must be provided via external secret management
  # Do not commit actual secret values to version control
  client-id: ""  # Must be provided via kubectl or external secret operator
  client-secret: ""  # Must be provided via kubectl or external secret operator  
  cookie-secret: ""  # Must be provided via kubectl or external secret operator
---
# TLS Certificate Secret (Self-signed for testing)
apiVersion: v1
kind: Secret
metadata:
  name: banking-tls-secret
  namespace: istio-system
type: kubernetes.io/tls
data:
  # Self-signed certificate for testing (replace with real cert in production)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lKQU1aMlFkM1Z5c0pPTUEwR0NTcUdTSWIzRFFFQkN3VUFNQmt4RnpBVkJnTlYKQkFNTURuTmxiR1l0YzJsbmJtVmtMV05oTUI0WERUSXpNRE13TnpFNU1qWXpObG9YRFRJME1EUXdOakU1TWpZegpObG93R1RFWE1CVUdBMVVFQXd3T2MyVnNaaTF6YVdkdVpXUXRZMkV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBCkE0SUJEd0F3Z2dFS0FvSUJBUURFOVdmSGZmSkx2VGNkejJaUTVEUkZGQW5iRlNYRkJOVDdEdmNka3dxdENJaWsKQU9OQXhvcDM2QldYRHBEN1MrNFZjbUQzY3g2M25RMldBTW9TNGt6R0ZPSjdjdU5aaDNBMkNldklUWEhIOUdKcApXN0R5VktLWGpEcmFNZUlGNXRJaWNIZWxObWdUcjBEZUNLYnZkR05nVVNhWjJpVHJ5ZGNtZmlOSzI5dFJQU1FxCnVkY1ZoaVhGNXNFbUVhVjRXd2xRbVhMWGFpK2lkWEVVWDM5b2N6Z3BYNEFsaHZYWUZaVWJWNW9vTDZ4bHN2QVgKVzgzajdOSmlHRWFHUDNDNXVTd2xhV3BQUXU1NHpURlYvczJYVGVQM2w1VWJhN0Q0dnFKT1BTajFJSE1FMXh5SwpBTkg5NGFhM1BOLzdKcmpLdE9NR3g5cmZDZXlyNGVkUkFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVHBpeE15CmI3djZaUFRlYVUvejVJU0ZnTnFDdGpBZkJnTlZIU01FR0RBV2dCVHBpeE15Yjd2NlpQVGVhVS96NUlTRmdOcUMKdGpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCTCtIeXBEK0lXNUQreApuNWZjWXFlUU1Vc2Vta2V6Y3h6UjY2RWY0QjdhZU5NdEtXaUdhYUFqZ3VsQ1Y5R05UMWtuUW1BdnNBUFV0K0lsCkNMRGJLSS9WSzdGNjJjZENlWGR2UlVLRDIvOTUwZ2FhVUUydVFBcDJ3SzJjaDl0SVNGNjF1VkxCQVNveVJhVkMKMkdFdmI0VFZYdk9PQnhMZE13PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREU5V2ZIZmZKTHZUY2QKejJaUTVEUkZGQW5iRlNYRkJOVDdEdmNka3dxdENJaWtBT05BeG9wMzZCV1hEcEQ3Uys0VmNtRDNjeDYzblEyVwpBTW9TNGt6R0ZPSjdjdU5aaDNBMkNldklUWEhIOUdKcFc3RHlWS0tYakRyYU1lSUY1dElpY0hlbE5tZ1RyMERlCkNLYnZkR05nVVNhWjJpVHJ5ZGNtZmlOSzI5dFJQU1FxdWRjVmhpWEY1c0VtRWFWNFd3bFFtWExYYWkraWRYRVUKWDM5b2N6Z3BYNEFsaHZYWUZaVWJWNW9vTDZ4bHN2QVhXODNqN05KaUdFYUdQM0M1dVN3bGFXcFBRdTU0elRGVgovczJYVGVQM2w1VWJhN0Q0dnFKT1BTajFJSE1FMXh5S0FOSDk0YWEzUE4vN0pyakt0T01HeDlyZkNleXI0ZWRSCkFnTUJBQUVDZ2dFQVhFT2p2SWNheDhCZEJlYjZqZ01zSVczNkw1UU1ZUVlNT21WRUR6SnhMWC9ITFpvU25CQXIKVmhIeVJiRmdUQU91MjdoQjZaUWhKZk5rMjd3ZHQyQ1p0czRDbmdaVzRXVENjWlVJcjRHK3NJdE16MkRZT3FlQgoxeXhOb1JrcGUybXowcWttTGNwMkY4eXQwK1N2T2F6TGdKNmdQZUd2Z1hEUHFBZ1Y1R2FjZkp1TlJhUVJzM1ZTCndOY0gxL3o1RVJqNHU1b2dyQ3FoSURLZ29scDYrMFEwdkZ2eUZaRVpOZVd1dllDTWp2eG9ZRUNpUWNSM3plVFgKWVhaNk0wcWlhUkxTT2xNNzJTSFBnWUpYWFpDRVVvOHZhZ1E3REVHN2l5ZjN6b3RFQ1N2d1MzSjdLR25MVVZ3NApCUTVzVzVxTGVDZzQ4L083ekxpaG1wRlAvRzZBOVFLQmdRRHNDUmU2cGVuWUVBMEErcXY2WmdLRzA3U3VHL2VOCkJJd3ZYbVBjOEwyTlVRc1J4UXdubzVCemk2VDZaQVZLNklvVExJblZWZGpPd2xuRGJJUjVRWEtKSGZzVTlCM08KYlAvZmdRd3I1d3N3M0lITFRIdnNHYWpiRXVMblkvWGE4Z2g3SG5LM3BqZ29KK2R0M1NKNExUZU0xYjkwUUJUTApSUDZ2YzdpdzdRS0JnUURWbktWSHlUZ1ZaTEtFaHhYQUJYWXJkVm5OMUMrUUN0b3hOeU4rbXZOd3NCSldJQ2JZClFweEd2RlZURUl5UXgxN3pxVE1qSmJtaGlBY0JZRThyNTc0aDdDdGZvcURqQ2JKTGlGVlVTT1pIK0VOdlEyZHYKbE4rc0JBT1dVSjVzaUVYOGhwYU5sNEZHcGYyOUtOdWd2RzJjQUtXdEVINURZQk5ubDNLMFpRS0JnUUM4REF1QgpGUFFhL0VnRGtlZmZGUERaMHlJQlk4b3dJOXhTSmZIMnJkV3p1bVZpc3FBNFEyZjFwQzZDbXdCUWg0eGFac2JUCk1EQnFYZkZiSkdUbkZtVE1VOVVRRCsxZ1lITjVQSWJ1QjZLOEppTHBhT01OMmlMWURNZkp6NW4rbW1ENkZYRFMKVjhNL2tOUzlEY0NEcEhiMC9sK05CeW5sdkxIdzVrUE9UTGtOaFFLQmdGd2RBNnNUUnRCclZDbWo5VUNzcWhJaApzNFc3SjNKRlgrZGI3elFUY0k1dGNIZ0RnUXVlRVRONzViKzJxSnVyRitNQ0ZHQ21Pd1o1QlJEQXV3YmIyOFF0ClcyWUIzZGZWVGNiaWUvajZZVEhjdGlQSnRTQ2NkYkJJOVNHT2R6Y245UGlSekRQQzIrd3Fpd1NJNVlYdlhwakUKMUFuNWNHWG8rQXJNaWw4SkFvR0FMbHJXSU5lOTNWNjByaXZKbmhVbjFGaG5HcnNzeGtzZFIyUUZoZ0l0dUMzUwprUUpxcXcwVmR5Z3lQa0NXMnNSUkl4S2k5YnBJdjdOY0NrbXR6eWNDbXdJZzhXcHBFRXFGMHNJS0dhZ0g1VmE4CmxnYXE2OHRZVHJ0NXBKK1MzVEdIQ1gzUHkzbmdOODlJZ3Q5ZHNqZUxzbWNLODBmcEx2QUFWVzIwNUxrPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
---
# DestinationRule for mTLS enforcement
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: banking-service-mtls
  namespace: banking-system
spec:
  host: banking-service.banking-system.svc.cluster.local
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 2
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
    outlierDetection:
      consecutiveGatewayErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
---
# Network Policy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: banking-network-policy
  namespace: banking-system
spec:
  podSelector:
    matchLabels:
      app: banking-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from Istio Ingress Gateway
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - podSelector:
        matchLabels:
          app: istio-proxy
  # Allow traffic from OAuth2 Proxy
  - from:
    - podSelector:
        matchLabels:
          app: oauth2-proxy
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow access to Keycloak
  - to:
    - namespaceSelector:
        matchLabels:
          name: keycloak
    ports:
    - protocol: TCP
      port: 8080
  # Allow access to database
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  # Allow access to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53