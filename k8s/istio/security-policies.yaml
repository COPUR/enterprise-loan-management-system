apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: banking-peer-auth
  namespace: banking-system
spec:
  mtls:
    mode: STRICT
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: banking-authz-policy
  namespace: banking-system
spec:
  selector:
    matchLabels:
      app: enterprise-loan-system
  rules:
  # Allow health checks from istio-system
  - from:
    - source:
        namespaces: ["istio-system"]
    to:
    - operation:
        paths: ["/actuator/health", "/actuator/health/*"]
  # Allow API access from ingress gateway
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        paths: ["/api/*", "/oauth2/*", "/swagger-ui/*", "/v3/api-docs/*", "/graphql"]
  # Allow Prometheus scraping
  - from:
    - source:
        namespaces: ["istio-system"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/actuator/prometheus"]
  # Allow inter-service communication within banking-system namespace
  - from:
    - source:
        namespaces: ["banking-system"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
---
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: banking-jwt-auth
  namespace: banking-system
spec:
  selector:
    matchLabels:
      app: enterprise-loan-system
  jwtRules:
  - issuer: "https://banking.local/oauth2/token"
    jwksUri: "https://banking.local/oauth2/jwks"
    audiences:
    - "banking-api"
    fromHeaders:
    - name: Authorization
      prefix: "Bearer "
    fromParams:
    - "access_token"
    outputPayloadToHeader: "x-jwt-payload"
---
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: external-oauth-provider
  namespace: banking-system
spec:
  hosts:
  - auth.banking.external
  ports:
  - number: 443
    name: https
    protocol: HTTPS
  location: MESH_EXTERNAL
  resolution: DNS
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: banking-rate-limit-policy
  namespace: banking-system
spec:
  selector:
    matchLabels:
      app: enterprise-loan-system
  rules:
  - from:
    - source:
        remoteIpBlocks: ["0.0.0.0/0"]
    to:
    - operation:
        methods: ["POST"]
        paths: ["/api/v1/loans", "/api/v1/payments"]
    when:
    - key: source.ip
      notValues: ["127.0.0.1", "::1"]
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: banking-security-headers
  namespace: banking-system
spec:
  workloadSelector:
    labels:
      app: enterprise-loan-system
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: banking_rate_limiter
            token_bucket:
              max_tokens: 1000
              tokens_per_fill: 100
              fill_interval: 60s
            filter_enabled:
              runtime_key: banking_rate_limit_enabled
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              runtime_key: banking_rate_limit_enforced
              default_value:
                numerator: 100
                denominator: HUNDRED
            response_headers_to_add:
            - append: false
              header:
                key: x-banking-rate-limit
                value: "1000"
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.cors
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          cors_policy:
            allow_origin_string_match:
            - prefix: "https://banking.local"
            - prefix: "http://localhost"
            - prefix: "http://127.0.0.1"
            allow_methods: "GET, POST, PUT, DELETE, OPTIONS"
            allow_headers: "authorization, content-type, x-requested-with, x-banking-session"
            expose_headers: "x-banking-rate-limit, x-banking-request-id"
            max_age: "3600"
            allow_credentials: true