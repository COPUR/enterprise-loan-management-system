# Default values for enterprise-loan-system
replicaCount: 3

image:
  repository: your-registry/enterprise-loan-system
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "5000"
  prometheus.io/path: "/actuator/prometheus"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 5000
  targetPort: 5000

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
  hosts:
    - host: banking.your-domain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: banking-tls
      hosts:
        - banking.your-domain.com

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 500m
    memory: 1Gi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - enterprise-loan-system
        topologyKey: kubernetes.io/hostname

# Application Configuration
app:
  env: production
  javaOpts: "-Xmx2g -Xms1g -XX:+UseG1GC -XX:+UseContainerSupport"
  
  banking:
    installments:
      allowed: "6,9,12,24"
    interestRate:
      min: 0.1
      max: 0.5
    compliance:
      tddRequired: 75
    fapi:
      enabled: true

# Database Configuration
database:
  type: postgresql
  external: true
  host: ""  # Set via environment or external config
  port: 5432
  name: banking_system
  username: postgres
  ssl: true

# Redis Configuration
redis:
  enabled: true
  external: true
  host: ""  # Set via environment or external config
  port: 6379
  ssl: true
  timeout: 2000

# Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    scrape: true
  grafana:
    enabled: true
  healthcheck:
    enabled: true
    path: /actuator/health
    livenessProbe:
      initialDelaySeconds: 60
      periodSeconds: 30
      timeoutSeconds: 5
      failureThreshold: 3
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
    startupProbe:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30

# Security Configuration
security:
  networkPolicy:
    enabled: true
  podSecurityPolicy:
    enabled: false
  secrets:
    external: true
    secretsManager: aws

# Persistent Volume Claims
persistence:
  enabled: true
  logs:
    enabled: true
    size: 10Gi
    storageClass: gp3

# External Dependencies
external:
  postgresql:
    enabled: false  # Using external RDS
  redis:
    enabled: false  # Using external ElastiCache