# Production values for Enterprise Loan Management System
replicaCount: 5

image:
  repository: your-account.dkr.ecr.us-west-2.amazonaws.com/enterprise-loan-system
  pullPolicy: Always
  tag: "production"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/enterprise-loan-system-role
  name: "enterprise-loan-system-sa"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "5000"
  prometheus.io/path: "/actuator/prometheus"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 5000
  targetPort: 5000

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:ACCOUNT:certificate/CERT-ID
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/target-group-attributes: deregistration_delay.timeout_seconds=30
  hosts:
    - host: banking.your-production-domain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: banking-tls-production
      hosts:
        - banking.your-production-domain.com

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

autoscaling:
  enabled: true
  minReplicas: 5
  maxReplicas: 50
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

nodeSelector:
  kubernetes.io/arch: amd64
  node-type: banking-system

tolerations:
- key: "banking-system"
  operator: "Equal"
  value: "true"
  effect: "NoSchedule"

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values:
          - enterprise-loan-system
      topologyKey: kubernetes.io/hostname
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node-type
          operator: In
          values:
          - banking-system

# Production Application Configuration
app:
  env: production
  javaOpts: "-Xmx3g -Xms2g -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxGCPauseMillis=200 -XX:+HeapDumpOnOutOfMemoryError"
  
  banking:
    installments:
      allowed: "6,9,12,24"
    interestRate:
      min: 0.1
      max: 0.5
    compliance:
      tddRequired: 87.4
    fapi:
      enabled: true

# Production Database Configuration
database:
  type: postgresql
  external: true
  host: "enterprise-loan-system-postgres.cluster-xxxxx.us-west-2.rds.amazonaws.com"
  port: 5432
  name: banking_system
  username: postgres
  ssl: true
  maxPoolSize: 50
  minPoolSize: 10
  connectionTimeout: 30000

# Production Redis Configuration
redis:
  enabled: true
  external: true
  host: "enterprise-loan-system-redis.xxxxx.cache.amazonaws.com"
  port: 6379
  ssl: true
  timeout: 5000
  poolMaxActive: 20
  poolMaxIdle: 10

# Production Monitoring Configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    scrape: true
  grafana:
    enabled: true
  healthcheck:
    enabled: true
    path: /actuator/health
    livenessProbe:
      initialDelaySeconds: 120
      periodSeconds: 30
      timeoutSeconds: 10
      failureThreshold: 3
    readinessProbe:
      initialDelaySeconds: 60
      periodSeconds: 15
      timeoutSeconds: 5
      failureThreshold: 3
    startupProbe:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 60

# Production Security Configuration
security:
  networkPolicy:
    enabled: true
  podSecurityPolicy:
    enabled: true
  secrets:
    external: true
    secretsManager: aws

# Production Persistent Volume Claims
persistence:
  enabled: true
  logs:
    enabled: true
    size: 100Gi
    storageClass: gp3
    accessMode: ReadWriteOnce

# Production External Dependencies
external:
  postgresql:
    enabled: false
  redis:
    enabled: false

# Production environment variables
env:
  SPRING_PROFILES_ACTIVE: "kubernetes,production"
  JAVA_TOOL_OPTIONS: "-javaagent:/app/lib/opentelemetry-javaagent.jar"
  OTEL_SERVICE_NAME: "enterprise-loan-system"
  OTEL_RESOURCE_ATTRIBUTES: "service.version=1.0.0,deployment.environment=production"