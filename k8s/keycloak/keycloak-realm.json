{
  "realm": "banking-system",
  "displayName": "Enhanced Enterprise Banking System",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>Enhanced Enterprise Banking System</span></div>",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "alias": "banking-browser",
      "description": "Banking Browser Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "flowAlias": "banking-browser-forms",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "banking-browser-forms",
      "description": "Banking Browser Forms Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "flowAlias": "banking-browser-conditional-otp",
          "requirement": "CONDITIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "alias": "banking-browser-conditional-otp",
      "description": "Banking Conditional OTP Flow",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "browserFlow": "banking-browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "clients": [
    {
      "clientId": "banking-system-frontend",
      "name": "Banking System Frontend Application",
      "description": "Frontend application for Enhanced Enterprise Banking System",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "banking-frontend-secret-2024",
      "redirectUris": [
        "http://localhost:3000/*",
        "https://banking.local/*",
        "https://banking.example.com/*",
        "http://banking-app-enhanced:8080/*"
      ],
      "webOrigins": [
        "http://localhost:3000",
        "https://banking.local",
        "https://banking.example.com"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "consentRequired": false,
      "frontchannelLogout": true,
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "banking-microservices",
      "name": "Banking Microservices",
      "description": "Service-to-service authentication for banking microservices",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "banking-microservices-secret-2024",
      "redirectUris": [],
      "webOrigins": [],
      "protocol": "openid-connect",
      "publicClient": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "consentRequired": false,
      "frontchannelLogout": false,
      "attributes": {
        "access.token.lifespan": "300",
        "tls.client.certificate.bound.access.tokens": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "roles"
      ],
      "optionalClientScopes": []
    },
    {
      "clientId": "istio-proxy",
      "name": "Istio Service Mesh Proxy",
      "description": "Istio Envoy proxy authentication client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "istio-proxy-secret-2024",
      "redirectUris": [],
      "webOrigins": [],
      "protocol": "openid-connect",
      "publicClient": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "consentRequired": false,
      "frontchannelLogout": false,
      "attributes": {
        "access.token.lifespan": "3600"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "roles"
      ],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "name": "banking-operations",
      "description": "Banking operations scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "Access to banking operations"
      },
      "protocolMappers": [
        {
          "name": "banking-role-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "banking_roles",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "fapi-compliance",
      "description": "FAPI compliance scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "FAPI compliant access"
      },
      "protocolMappers": [
        {
          "name": "fapi-compliance-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "fapi_compliant",
            "claim.value": "true",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "banking-admin",
        "description": "Banking system administrator role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "banking-manager",
        "description": "Banking manager role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "banking-officer",
        "description": "Banking officer role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "banking-customer",
        "description": "Banking customer role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "loan-specialist",
        "description": "Loan specialist role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "risk-analyst",
        "description": "Risk analyst role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "audit-user",
        "description": "Audit user role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      },
      {
        "name": "compliance-officer",
        "description": "Compliance officer role",
        "composite": false,
        "clientRole": false,
        "containerId": "banking-system"
      }
    ],
    "client": {
      "banking-microservices": [
        {
          "name": "service-loan",
          "description": "Loan service access",
          "composite": false,
          "clientRole": true
        },
        {
          "name": "service-payment",
          "description": "Payment service access",
          "composite": false,
          "clientRole": true
        },
        {
          "name": "service-customer",
          "description": "Customer service access",
          "composite": false,
          "clientRole": true
        },
        {
          "name": "service-risk",
          "description": "Risk service access",
          "composite": false,
          "clientRole": true
        },
        {
          "name": "service-audit",
          "description": "Audit service access",
          "composite": false,
          "clientRole": true
        }
      ],
      "istio-proxy": [
        {
          "name": "mesh-access",
          "description": "Service mesh access",
          "composite": false,
          "clientRole": true
        }
      ]
    }
  },
  "users": [
    {
      "username": "banking-admin",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Banking",
      "lastName": "Administrator",
      "email": "admin@banking.local",
      "credentials": [
        {
          "type": "password",
          "value": "BankingAdmin123!",
          "temporary": false
        }
      ],
      "realmRoles": [
        "banking-admin",
        "audit-user",
        "compliance-officer"
      ],
      "clientRoles": {
        "banking-microservices": [
          "service-loan",
          "service-payment",
          "service-customer",
          "service-risk",
          "service-audit"
        ]
      },
      "attributes": {
        "department": ["Banking Administration"],
        "employee_id": ["BA001"],
        "security_clearance": ["HIGH"]
      }
    },
    {
      "username": "loan-manager",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Loan",
      "lastName": "Manager",
      "email": "loan.manager@banking.local",
      "credentials": [
        {
          "type": "password",
          "value": "LoanManager123!",
          "temporary": false
        }
      ],
      "realmRoles": [
        "banking-manager",
        "loan-specialist",
        "risk-analyst"
      ],
      "clientRoles": {
        "banking-microservices": [
          "service-loan",
          "service-risk"
        ]
      },
      "attributes": {
        "department": ["Loan Operations"],
        "employee_id": ["LM001"],
        "security_clearance": ["MEDIUM"]
      }
    },
    {
      "username": "customer-user",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "John",
      "lastName": "Customer",
      "email": "john.customer@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "Customer123!",
          "temporary": false
        }
      ],
      "realmRoles": [
        "banking-customer"
      ],
      "clientRoles": {},
      "attributes": {
        "customer_id": ["CUST001"],
        "account_type": ["PREMIUM"],
        "kyc_status": ["VERIFIED"]
      }
    }
  ],
  "groups": [
    {
      "name": "Banking Staff",
      "path": "/Banking Staff",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": [
        {
          "name": "Administration",
          "path": "/Banking Staff/Administration",
          "attributes": {},
          "realmRoles": [
            "banking-admin",
            "audit-user",
            "compliance-officer"
          ],
          "clientRoles": {
            "banking-microservices": [
              "service-loan",
              "service-payment",
              "service-customer",
              "service-risk",
              "service-audit"
            ]
          },
          "subGroups": []
        },
        {
          "name": "Loan Operations",
          "path": "/Banking Staff/Loan Operations",
          "attributes": {},
          "realmRoles": [
            "banking-manager",
            "loan-specialist",
            "risk-analyst"
          ],
          "clientRoles": {
            "banking-microservices": [
              "service-loan",
              "service-risk"
            ]
          },
          "subGroups": []
        },
        {
          "name": "Customer Service",
          "path": "/Banking Staff/Customer Service",
          "attributes": {},
          "realmRoles": [
            "banking-officer"
          ],
          "clientRoles": {
            "banking-microservices": [
              "service-customer"
            ]
          },
          "subGroups": []
        }
      ]
    },
    {
      "name": "Customers",
      "path": "/Customers",
      "attributes": {},
      "realmRoles": [
        "banking-customer"
      ],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    }
  ],
  "webAuthnPolicyRpEntityName": "Enhanced Banking System",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "banking.local",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "cibaAuthRequestedUserHint": "login_hint",
    "parRequestUriLifespan": "60",
    "frontendUrl": "",
    "acr.loa.map": "{}",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "oauth2DeviceCodeLifespan": "600"
  }
}