admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  # HTTPS Listener for Banking APIs
  - name: banking_https_listener
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8443
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          scheme_header_transformation:
            scheme_to_overwrite: https
          stat_prefix: banking_https
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              format: |
                [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                customer_id="%REQ(x-customer-id)%" transaction_id="%REQ(x-transaction-id)%"
                compliance_level="%REQ(x-compliance-level)%" fapi_interaction_id="%REQ(x-fapi-interaction-id)%"
          codec_type: AUTO
          route_config:
            name: banking_routes
            virtual_hosts:
            - name: banking_api
              domains: ["*"]
              routes:
              # FAPI Compliant Routes
              - match:
                  prefix: "/open-banking/v3.1/aisp"
                route:
                  cluster: account-information-service
                  timeout: 30s
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure,refused-stream"
                    num_retries: 3
                    per_try_timeout: 10s
                typed_per_filter_config:
                  envoy.filters.http.fault:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
                    abort:
                      percentage:
                        numerator: 0
                        denominator: HUNDRED
                      http_status: 503
              - match:
                  prefix: "/open-banking/v3.1/pisp"
                route:
                  cluster: payment-initiation-service
                  timeout: 30s
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure,refused-stream"
                    num_retries: 3
                    per_try_timeout: 10s
              - match:
                  prefix: "/api/v1/loans"
                route:
                  cluster: loan-management-service
                  timeout: 45s
                  retry_policy:
                    retry_on: "5xx,reset,connect-failure,refused-stream"
                    num_retries: 2
                    per_try_timeout: 15s
              - match:
                  prefix: "/api/v1/customers"
                route:
                  cluster: customer-management-service
                  timeout: 30s
              - match:
                  prefix: "/api/v1/payments"
                route:
                  cluster: payment-processing-service
                  timeout: 60s
              - match:
                  prefix: "/api/v1/ai"
                route:
                  cluster: ai-banking-service
                  timeout: 120s
              - match:
                  prefix: "/health"
                route:
                  cluster: health_check
          http_filters:
          # FAPI Security Headers Filter
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                  -- FAPI Required Headers Validation
                  local interaction_id = request_handle:headers():get("x-fapi-interaction-id")
                  local auth_date = request_handle:headers():get("x-fapi-auth-date")
                  local customer_ip = request_handle:headers():get("x-fapi-customer-ip-address")
                  
                  -- Generate interaction ID if missing (for FAPI compliance)
                  if not interaction_id then
                    local uuid = string.gsub(string.format("%08x-%04x-%04x-%04x-%012x", 
                      math.random(0, 0xffffffff), 
                      math.random(0, 0xffff), 
                      math.random(0, 0xffff), 
                      math.random(0, 0xffff), 
                      math.random(0, 0xffffffffffff)), 
                      ".", function(c) return string.format("%x", string.byte(c)) end)
                    request_handle:headers():add("x-fapi-interaction-id", uuid)
                  end
                  
                  -- Banking specific headers
                  request_handle:headers():add("x-banking-timestamp", os.date("!%Y-%m-%dT%H:%M:%SZ"))
                  request_handle:headers():add("x-envoy-proxy-version", "banking-v1.0")
                  
                  -- Content-Security-Policy for banking
                  if string.match(request_handle:headers():get(":path") or "", "^/open%-banking/") then
                    request_handle:headers():add("x-banking-api-type", "open-banking")
                  end
                end
                
                function envoy_on_response(response_handle)
                  -- FAPI Response Headers
                  response_handle:headers():add("x-fapi-interaction-id", 
                    response_handle:headers():get("x-fapi-interaction-id") or "unknown")
                  response_handle:headers():add("cache-control", "no-store")
                  response_handle:headers():add("pragma", "no-cache")
                  response_handle:headers():add("x-content-type-options", "nosniff")
                  response_handle:headers():add("x-frame-options", "DENY")
                  response_handle:headers():add("content-security-policy", 
                    "default-src 'none'; script-src 'none'; style-src 'none'")
                  
                  -- Banking compliance headers
                  response_handle:headers():add("x-banking-compliance", "FAPI-2.0")
                  response_handle:headers():add("strict-transport-security", 
                    "max-age=31536000; includeSubDomains")
                end
          # Rate Limiting Filter (FAPI Compliant)
          - name: envoy.filters.http.local_ratelimit
            typed_config:
              "@type": type.googleapis.com/udpa.type.v1.TypedStruct
              type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
              value:
                stat_prefix: banking_rate_limiter
                token_bucket:
                  max_tokens: 1000
                  tokens_per_fill: 100
                  fill_interval: 60s
                filter_enabled:
                  runtime_key: rate_limit_enabled
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                filter_enforced:
                  runtime_key: rate_limit_enforced
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                response_headers_to_add:
                - append: false
                  header:
                    key: x-banking-rate-limit
                    value: "applied"
          # JWT Authentication Filter (FAPI Compliant)
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                keycloak_provider:
                  issuer: https://keycloak.banking.local/realms/banking
                  audiences:
                  - banking-api
                  - open-banking-api
                  remote_jwks:
                    http_uri:
                      uri: https://keycloak.banking.local/realms/banking/protocol/openid_connect/certs
                      cluster: keycloak_cluster
                      timeout: 5s
                    cache_duration: 300s
                  forward: true
                  forward_payload_header: x-jwt-payload
                  claim_to_headers:
                  - header_name: x-customer-id
                    claim_name: sub
                  - header_name: x-banking-scope
                    claim_name: scope
                  - header_name: x-client-id
                    claim_name: client_id
              rules:
              - match:
                  prefix: "/open-banking/"
                requires:
                  provider_name: keycloak_provider
              - match:
                  prefix: "/api/v1/"
                requires:
                  provider_name: keycloak_provider
              - match:
                  prefix: "/health"
                requires: {}
          # CORS Filter for Banking APIs
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
              allow_credentials: false
              allow_methods: "GET,POST,PUT,DELETE,OPTIONS"
              allow_headers: "authorization,content-type,x-fapi-interaction-id,x-fapi-auth-date,x-fapi-customer-ip-address,x-customer-id,x-idempotency-key"
              expose_headers: "x-fapi-interaction-id,x-ratelimit-limit,x-ratelimit-remaining"
              max_age: "86400"
          # Request/Response Transformation
          - name: envoy.filters.http.fault
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
              abort:
                percentage:
                  numerator: 0
                  denominator: MILLION
                http_status: 503
              delay:
                percentage:
                  numerator: 0
                  denominator: MILLION
                fixed_delay: 0.1s
          # Router (must be last)
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/ssl/certs/banking-api.crt"
              private_key:
                filename: "/etc/ssl/private/banking-api.key"
            validation_context:
              trusted_ca:
                filename: "/etc/ssl/certs/ca-certificates.crt"
            alpn_protocols: ["h2", "http/1.1"]
          require_client_certificate: false

  # HTTP Listener (Redirect to HTTPS)
  - name: banking_http_listener
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: banking_http_redirect
          route_config:
            name: redirect_routes
            virtual_hosts:
            - name: redirect_to_https
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                redirect:
                  https_redirect: true
                  port_redirect: 8443
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  # Banking Service Clusters
  - name: loan-management-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 3
        keepalive_time: 10
        keepalive_interval: 5
    load_assignment:
      cluster_name: loan-management-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: loan-service.banking.svc.cluster.local
                port_value: 8080
    health_checks:
    - timeout: 3s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/actuator/health"
        expected_statuses:
        - start: 200
          end: 299

  - name: customer-management-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: customer-management-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: customer-service.banking.svc.cluster.local
                port_value: 8080
    health_checks:
    - timeout: 3s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/actuator/health"

  - name: payment-processing-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: payment-processing-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: payment-service.banking.svc.cluster.local
                port_value: 8080
    health_checks:
    - timeout: 3s
      interval: 15s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/actuator/health"

  - name: account-information-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: account-information-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: account-service.banking.svc.cluster.local
                port_value: 8080
    health_checks:
    - timeout: 3s
      interval: 10s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/actuator/health"

  - name: payment-initiation-service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: payment-initiation-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: payment-initiation-service.banking.svc.cluster.local
                port_value: 8080
    health_checks:
    - timeout: 3s
      interval: 15s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/actuator/health"

  - name: ai-banking-service
    connect_timeout: 10s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: ai-banking-service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: ai-service.banking.svc.cluster.local
                port_value: 8080
    health_checks:
    - timeout: 5s
      interval: 20s
      unhealthy_threshold: 3
      healthy_threshold: 2
      http_health_check:
        path: "/actuator/health"

  - name: keycloak_cluster
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: keycloak_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: keycloak.security.svc.cluster.local
                port_value: 8080

  - name: health_check
    connect_timeout: 1s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: health_check
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 9901

# Runtime Configuration
runtime:
  symlink_root: /srv/runtime_data
  subdirectory: envoy
  override_subdirectory: envoy_override

# Stats Configuration
stats_config:
  stats_tags:
  - tag_name: banking_service
    regex: "^cluster\\.(([^.]+)\\.)"
  - tag_name: banking_method
    regex: "^http\\..*?\\.downstream_rq_(\\w+)"
  - tag_name: banking_response_code
    regex: "^http\\..*?\\.downstream_rq_(\\d{3})"