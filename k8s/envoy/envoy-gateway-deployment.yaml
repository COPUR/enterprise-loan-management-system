apiVersion: apps/v1
kind: Deployment
metadata:
  name: banking-envoy-gateway
  namespace: banking
  labels:
    app: banking-envoy-gateway
    version: v1.0
    tier: gateway
    compliance: fapi-2.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: banking-envoy-gateway
  template:
    metadata:
      labels:
        app: banking-envoy-gateway
        version: v1.0
        tier: gateway
        compliance: fapi-2.0
      annotations:
        sidecar.istio.io/inject: "false"  # Gateway manages its own Envoy
        prometheus.io/scrape: "true"
        prometheus.io/port: "9901"
        prometheus.io/path: "/stats/prometheus"
    spec:
      serviceAccountName: banking-envoy-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: envoy-gateway
        image: envoyproxy/envoy:v1.28.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        command:
        - /usr/local/bin/envoy
        args:
        - -c
        - /etc/envoy/envoy.yaml
        - --service-cluster
        - banking-envoy-gateway
        - --service-node
        - $(POD_NAME).$(POD_NAMESPACE)
        - --log-level
        - info
        - --component-log-level
        - "filter:debug,http:debug,router:debug,config:debug"
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        - name: admin
          containerPort: 9901
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_NAME
          value: "banking-envoy-gateway"
        - name: ENVOY_UID
          value: "65534"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
          readOnly: true
        - name: envoy-certs
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: envoy-private-key
          mountPath: /etc/ssl/private
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        - name: runtime-data
          mountPath: /srv/runtime_data
        livenessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /ready
            port: 9901
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 6

      # Banking Metrics Sidecar
      - name: banking-metrics-exporter
        image: prom/node-exporter:v1.6.1
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          capabilities:
            drop:
            - ALL
        args:
        - --path.procfs=/host/proc
        - --path.sysfs=/host/sys
        - --path.rootfs=/host/root
        - --collector.filesystem.mount-points-exclude
        - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
        ports:
        - name: node-metrics
          containerPort: 9100
          protocol: TCP
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: proc
          mountPath: /host/proc
          readOnly: true
        - name: sys
          mountPath: /host/sys
          readOnly: true
        - name: root
          mountPath: /host/root
          mountPropagation: HostToContainer
          readOnly: true

      # FAPI Compliance Monitor
      - name: fapi-compliance-monitor
        image: curlimages/curl:8.4.0
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          capabilities:
            drop:
            - ALL
        command:
        - /bin/sh
        - -c
        - |
          while true; do
            # Check FAPI compliance endpoints
            echo "$(date): Checking FAPI compliance..."
            
            # Check if required headers are present
            curl -s -H "x-fapi-interaction-id: test-$(date +%s)" \
                 -H "authorization: Bearer test-token" \
                 http://localhost:9901/stats | grep -q "banking" && echo "Envoy banking stats OK" || echo "Envoy banking stats FAIL"
            
            # Check TLS configuration
            curl -s -k https://localhost:8443/health 2>/dev/null | grep -q "UP" && echo "HTTPS endpoint OK" || echo "HTTPS endpoint FAIL"
            
            sleep 60
          done
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp

      volumes:
      - name: envoy-config
        configMap:
          name: banking-envoy-config
          defaultMode: 0644
      - name: envoy-certs
        secret:
          secretName: banking-tls-certs
          defaultMode: 0644
      - name: envoy-private-key
        secret:
          secretName: banking-tls-private-key
          defaultMode: 0600
      - name: tmp-volume
        emptyDir:
          sizeLimit: 100Mi
      - name: runtime-data
        emptyDir:
          sizeLimit: 50Mi
      - name: proc
        hostPath:
          path: /proc
          type: Directory
      - name: sys
        hostPath:
          path: /sys
          type: Directory
      - name: root
        hostPath:
          path: /
          type: Directory

      nodeSelector:
        node-role: gateway
      tolerations:
      - key: "gateway-only"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: banking-envoy-gateway
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - gateway

---
apiVersion: v1
kind: Service
metadata:
  name: banking-envoy-gateway
  namespace: banking
  labels:
    app: banking-envoy-gateway
    tier: gateway
    compliance: fapi-2.0
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/certificate-id"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9901"
    prometheus.io/path: "/stats/prometheus"
spec:
  type: LoadBalancer
  selector:
    app: banking-envoy-gateway
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8443
    protocol: TCP
  - name: admin
    port: 9901
    targetPort: 9901
    protocol: TCP
  sessionAffinity: None
  externalTrafficPolicy: Local

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: banking-envoy-gateway
  namespace: banking
  labels:
    app: banking-envoy-gateway
    compliance: fapi-2.0
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: banking-envoy-gateway
  labels:
    app: banking-envoy-gateway
    compliance: fapi-2.0
rules:
- apiGroups: [""]
  resources: ["endpoints", "services", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: banking-envoy-gateway
  labels:
    app: banking-envoy-gateway
    compliance: fapi-2.0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: banking-envoy-gateway
subjects:
- kind: ServiceAccount
  name: banking-envoy-gateway
  namespace: banking

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: banking-envoy-config
  namespace: banking
  labels:
    app: banking-envoy-gateway
    compliance: fapi-2.0
data:
  envoy.yaml: |
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9901

    static_resources:
      listeners:
      # HTTPS Banking API Listener
      - name: banking_https_listener
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 8443
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: banking_gateway_https
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
                  format: |
                    [%START_TIME%] "GATEWAY %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                    %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% 
                    client_ip="%REQ(X-FORWARDED-FOR)%" user_agent="%REQ(USER-AGENT)%"
                    request_id="%REQ(X-REQUEST-ID)%" authority="%REQ(:AUTHORITY)%"
                    upstream="%UPSTREAM_HOST%" cluster="%UPSTREAM_CLUSTER%"
                    fapi_interaction="%REQ(x-fapi-interaction-id)%"
                    customer_id="%REQ(x-customer-id)%" compliance_level="%REQ(x-compliance-level)%"
              codec_type: AUTO
              route_config:
                name: banking_gateway_routes
                virtual_hosts:
                - name: banking_apis
                  domains: ["api.enterprisebank.com", "*.enterprisebank.com", "*"]
                  routes:
                  # Open Banking APIs (FAPI Compliant)
                  - match:
                      prefix: "/open-banking/v3.1/aisp"
                    route:
                      cluster: account_information_cluster
                      timeout: 30s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure,refused-stream"
                        num_retries: 3
                        per_try_timeout: 10s
                    request_headers_to_add:
                    - header:
                        key: x-banking-api-type
                        value: open-banking-aisp
                      append: false
                    - header:
                        key: x-fapi-customer-last-logged-time
                        value: "%REQ(x-fapi-auth-date)%"
                      append: false
                  - match:
                      prefix: "/open-banking/v3.1/pisp"
                    route:
                      cluster: payment_initiation_cluster
                      timeout: 45s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure,refused-stream"
                        num_retries: 2
                        per_try_timeout: 15s
                    request_headers_to_add:
                    - header:
                        key: x-banking-api-type
                        value: open-banking-pisp
                      append: false
                  # Core Banking APIs
                  - match:
                      prefix: "/api/v1/loans"
                    route:
                      cluster: loan_management_cluster
                      timeout: 60s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure,refused-stream"
                        num_retries: 2
                        per_try_timeout: 20s
                    request_headers_to_add:
                    - header:
                        key: x-banking-service
                        value: loan-management
                      append: false
                  - match:
                      prefix: "/api/v1/customers"
                    route:
                      cluster: customer_management_cluster
                      timeout: 30s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 3
                        per_try_timeout: 10s
                    request_headers_to_add:
                    - header:
                        key: x-banking-service
                        value: customer-management
                      append: false
                  - match:
                      prefix: "/api/v1/payments"
                    route:
                      cluster: payment_processing_cluster
                      timeout: 90s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 2
                        per_try_timeout: 30s
                    request_headers_to_add:
                    - header:
                        key: x-banking-service
                        value: payment-processing
                      append: false
                  - match:
                      prefix: "/api/v1/ai"
                    route:
                      cluster: ai_banking_cluster
                      timeout: 180s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 1
                        per_try_timeout: 90s
                    request_headers_to_add:
                    - header:
                        key: x-banking-service
                        value: ai-banking
                      append: false
                  # Health and Monitoring
                  - match:
                      prefix: "/health"
                    direct_response:
                      status: 200
                      body:
                        inline_string: |
                          {
                            "status": "UP",
                            "service": "banking-envoy-gateway",
                            "timestamp": "${START_TIME}",
                            "compliance": "FAPI-2.0",
                            "version": "v1.0"
                          }
                    response_headers_to_add:
                    - header:
                        key: content-type
                        value: application/json
                      append: false
                  # Default route
                  - match:
                      prefix: "/"
                    route:
                      cluster: default_backend_cluster
                      timeout: 30s
              http_filters:
              # FAPI Security and Banking Headers
              - name: envoy.filters.http.lua
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  inline_code: |
                    function envoy_on_request(request_handle)
                      -- Generate FAPI Interaction ID if missing
                      local interaction_id = request_handle:headers():get("x-fapi-interaction-id")
                      if not interaction_id then
                        interaction_id = "ebg-" .. os.time() .. "-" .. math.random(10000, 99999)
                        request_handle:headers():add("x-fapi-interaction-id", interaction_id)
                      end
                      
                      -- Banking Gateway Headers
                      request_handle:headers():add("x-banking-gateway", "envoy-v1.0")
                      request_handle:headers():add("x-banking-timestamp", os.date("!%Y-%m-%dT%H:%M:%SZ"))
                      request_handle:headers():add("x-gateway-request-id", interaction_id)
                      
                      -- Compliance tracking
                      local path = request_handle:headers():get(":path")
                      if path and string.match(path, "^/open%-banking/") then
                        request_handle:headers():add("x-compliance-level", "FAPI-2.0")
                        request_handle:headers():add("x-api-standard", "Open-Banking-v3.1")
                      else
                        request_handle:headers():add("x-compliance-level", "BANKING-INTERNAL")
                      end
                      
                      -- Rate limiting context
                      local client_ip = request_handle:headers():get("x-forwarded-for") or 
                                       request_handle:headers():get("x-real-ip")
                      if client_ip then
                        request_handle:headers():add("x-client-ip-hash", 
                          string.format("%08x", string.len(client_ip) * 31))
                      end
                    end
                    
                    function envoy_on_response(response_handle)
                      -- FAPI Required Response Headers
                      local interaction_id = response_handle:headers():get("x-fapi-interaction-id")
                      if interaction_id then
                        response_handle:headers():add("x-fapi-interaction-id", interaction_id)
                      end
                      
                      -- Banking Security Headers
                      response_handle:headers():add("cache-control", "no-store, no-cache, must-revalidate")
                      response_handle:headers():add("pragma", "no-cache")
                      response_handle:headers():add("x-content-type-options", "nosniff")
                      response_handle:headers():add("x-frame-options", "DENY")
                      response_handle:headers():add("x-xss-protection", "1; mode=block")
                      response_handle:headers():add("strict-transport-security", 
                        "max-age=31536000; includeSubDomains; preload")
                      response_handle:headers():add("referrer-policy", "strict-origin-when-cross-origin")
                      response_handle:headers():add("content-security-policy", 
                        "default-src 'self'; script-src 'none'; style-src 'unsafe-inline'")
                      
                      -- Banking Compliance Headers
                      response_handle:headers():add("x-banking-compliance", "FAPI-2.0")
                      response_handle:headers():add("x-banking-gateway-processed", "true")
                    end
              # Rate Limiting (FAPI Compliant)
              - name: envoy.filters.http.local_ratelimit
                typed_config:
                  "@type": type.googleapis.com/udpa.type.v1.TypedStruct
                  type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                  value:
                    stat_prefix: banking_gateway_rate_limit
                    token_bucket:
                      max_tokens: 10000
                      tokens_per_fill: 1000
                      fill_interval: 60s
                    filter_enabled:
                      runtime_key: banking_rate_limit_enabled
                      default_value:
                        numerator: 100
                        denominator: HUNDRED
                    filter_enforced:
                      runtime_key: banking_rate_limit_enforced
                      default_value:
                        numerator: 100
                        denominator: HUNDRED
                    response_headers_to_add:
                    - append: false
                      header:
                        key: x-ratelimit-limit
                        value: "10000"
                    - append: false
                      header:
                        key: x-ratelimit-remaining
                        value: "%DYNAMIC_METADATA(envoy.common:tokens_remaining)%"
              # JWT Authentication (FAPI Compliant)
              - name: envoy.filters.http.jwt_authn
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
                    banking_keycloak:
                      issuer: https://keycloak.enterprisebank.com/realms/banking
                      audiences:
                      - banking-api
                      - open-banking-api
                      - enterprise-banking
                      remote_jwks:
                        http_uri:
                          uri: https://keycloak.enterprisebank.com/realms/banking/protocol/openid_connect/certs
                          cluster: keycloak_cluster
                          timeout: 10s
                        cache_duration: 600s
                        async_fetch:
                          fast_listener: true
                      forward: true
                      forward_payload_header: x-jwt-payload
                      claim_to_headers:
                      - header_name: x-customer-id
                        claim_name: sub
                      - header_name: x-banking-scope
                        claim_name: scope
                      - header_name: x-client-id
                        claim_name: client_id
                      - header_name: x-banking-roles
                        claim_name: realm_access.roles
                  rules:
                  - match:
                      prefix: "/open-banking/"
                    requires:
                      provider_name: banking_keycloak
                  - match:
                      prefix: "/api/v1/"
                    requires:
                      provider_name: banking_keycloak
                  - match:
                      prefix: "/health"
                    requires: {}
              # CORS (Banking Compliant)
              - name: envoy.filters.http.cors
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  allow_credentials: false
                  allow_methods: "GET,POST,PUT,DELETE,OPTIONS"
                  allow_headers: "authorization,content-type,x-fapi-interaction-id,x-fapi-auth-date,x-fapi-customer-ip-address,x-customer-id,x-idempotency-key,x-jws-signature"
                  expose_headers: "x-fapi-interaction-id,x-ratelimit-limit,x-ratelimit-remaining,x-banking-compliance"
                  max_age: "86400"
              # Request Size Limits
              - name: envoy.filters.http.buffer
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer
                  max_request_bytes: 5242880  # 5MB for banking APIs
              # Router Filter (Must be last)
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain:
                    filename: "/etc/ssl/certs/banking-gateway.crt"
                  private_key:
                    filename: "/etc/ssl/private/banking-gateway.key"
                validation_context:
                  trusted_ca:
                    filename: "/etc/ssl/certs/ca-certificates.crt"
                alpn_protocols: ["h2", "http/1.1"]
              require_client_certificate: false

      # HTTP Redirect Listener
      - name: banking_http_listener
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 8080
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: banking_gateway_http_redirect
              route_config:
                name: redirect_routes
                virtual_hosts:
                - name: https_redirect
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    redirect:
                      https_redirect: true
                      port_redirect: 8443
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
      # Banking Service Clusters
      - name: loan_management_cluster
        connect_timeout: 10s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 3
            keepalive_time: 30
            keepalive_interval: 5
        load_assignment:
          cluster_name: loan_management_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: loan-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 5s
          interval: 15s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 200
            max_pending_requests: 200
            max_requests: 2000
            max_retries: 3

      - name: customer_management_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: customer_management_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: customer-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 3s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 150
            max_pending_requests: 150
            max_requests: 1500
            max_retries: 3

      - name: payment_processing_cluster
        connect_timeout: 10s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: payment_processing_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: payment-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 5s
          interval: 15s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 100
            max_pending_requests: 100
            max_requests: 1000
            max_retries: 2

      - name: account_information_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: account_information_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: account-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 3s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"

      - name: payment_initiation_cluster
        connect_timeout: 10s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: payment_initiation_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: payment-initiation-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 5s
          interval: 15s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"

      - name: ai_banking_cluster
        connect_timeout: 15s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: ai_banking_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ai-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 10s
          interval: 30s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 50
            max_pending_requests: 50
            max_requests: 200
            max_retries: 1

      - name: keycloak_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: keycloak_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: keycloak.security.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 3s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/health"

      - name: default_backend_cluster
        connect_timeout: 5s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: default_backend_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 9901

    # Runtime Configuration
    runtime:
      symlink_root: /srv/runtime_data
      subdirectory: banking_gateway
      override_subdirectory: banking_gateway_override

    # Stats Configuration
    stats_config:
      stats_tags:
      - tag_name: banking_cluster
        regex: "^cluster\\.(([^.]+)\\.)"
      - tag_name: banking_method
        regex: "^http\\..*?\\.downstream_rq_(\\w+)"
      - tag_name: banking_response_code
        regex: "^http\\..*?\\.downstream_rq_(\\d{3})"
      - tag_name: banking_api_type
        regex: "^http\\..*?\\.x-banking-api-type_(.*?)\\."