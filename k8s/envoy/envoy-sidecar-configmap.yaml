apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-sidecar-config
  namespace: banking
  labels:
    app: banking-envoy-sidecar
    version: v1.0
    compliance: fapi-2.0
data:
  envoy.yaml: |
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 9901

    static_resources:
      listeners:
      - name: inbound_listener
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 15006
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: inbound_http
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
                  format: |
                    [%START_TIME%] "INBOUND %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                    %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                    "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                    pod="%REQ(x-pod-name)%" service="%REQ(x-service-name)%" 
                    fapi_interaction="%REQ(x-fapi-interaction-id)%"
              codec_type: AUTO
              route_config:
                name: inbound_route
                virtual_hosts:
                - name: inbound_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
                      timeout: 30s
              http_filters:
              # Banking Security Headers
              - name: envoy.filters.http.lua
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  inline_code: |
                    function envoy_on_request(request_handle)
                      -- Add banking security context
                      local pod_name = os.getenv("POD_NAME") or "unknown"
                      local service_name = os.getenv("SERVICE_NAME") or "unknown"
                      
                      request_handle:headers():add("x-pod-name", pod_name)
                      request_handle:headers():add("x-service-name", service_name)
                      request_handle:headers():add("x-sidecar-version", "banking-v1.0")
                      
                      -- Banking audit trail
                      local request_id = request_handle:headers():get("x-request-id")
                      if request_id then
                        request_handle:headers():add("x-banking-trace-id", request_id)
                      end
                      
                      -- FAPI compliance tracking
                      local interaction_id = request_handle:headers():get("x-fapi-interaction-id")
                      if interaction_id then
                        request_handle:headers():add("x-banking-fapi-interaction", interaction_id)
                      end
                    end
                    
                    function envoy_on_response(response_handle)
                      -- Banking response security headers
                      response_handle:headers():add("x-banking-processed-by", "envoy-sidecar")
                      response_handle:headers():add("x-content-type-options", "nosniff")
                      response_handle:headers():add("x-frame-options", "DENY")
                      response_handle:headers():add("referrer-policy", "strict-origin-when-cross-origin")
                      
                      -- FAPI required headers
                      local interaction_id = response_handle:headers():get("x-fapi-interaction-id")
                      if interaction_id then
                        response_handle:headers():add("x-fapi-interaction-id", interaction_id)
                      end
                    end
              # Request Size Limits (Banking Compliance)
              - name: envoy.filters.http.buffer
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer
                  max_request_bytes: 1048576  # 1MB max for banking APIs
              # WASM Filter for Banking Audit
              - name: envoy.filters.http.wasm
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                  config:
                    name: "banking_audit_filter"
                    root_id: "banking_audit"
                    vm_config:
                      vm_id: "banking_audit_vm"
                      runtime: "envoy.wasm.runtime.null"
                      code:
                        local:
                          inline_string: |
                            const AUDIT_HEADER = "x-banking-audit";
                            const COMPLIANCE_HEADER = "x-banking-compliance";
                            
                            class BankingAuditFilter {
                              onRequestHeaders() {
                                const method = this.getRequestHeader(":method");
                                const path = this.getRequestHeader(":path");
                                const timestamp = new Date().toISOString();
                                
                                // Add audit information
                                this.addRequestHeader(AUDIT_HEADER, `method=${method};path=${path};timestamp=${timestamp}`);
                                this.addRequestHeader(COMPLIANCE_HEADER, "FAPI-2.0");
                                
                                return FilterHeadersStatus.Continue;
                              }
                              
                              onResponseHeaders() {
                                const statusCode = this.getResponseHeader(":status");
                                const auditInfo = this.getRequestHeader(AUDIT_HEADER);
                                
                                if (auditInfo) {
                                  this.addResponseHeader("x-banking-audit-response", 
                                    `${auditInfo};response=${statusCode}`);
                                }
                                
                                return FilterHeadersStatus.Continue;
                              }
                            }
                            
                            registerRootContext(() => new BankingAuditFilter(), "banking_audit");
              # Router Filter
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      - name: outbound_listener
        address:
          socket_address:
            protocol: TCP
            address: 0.0.0.0
            port_value: 15001
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: outbound_http
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
                  format: |
                    [%START_TIME%] "OUTBOUND %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
                    %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
                    "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
                    outbound_service="%UPSTREAM_CLUSTER%"
              codec_type: AUTO
              route_config:
                name: outbound_route
                virtual_hosts:
                - name: outbound_services
                  domains: ["*"]
                  routes:
                  # Customer Service Routes
                  - match:
                      prefix: "/api/v1/customers"
                    route:
                      cluster: customer_service_cluster
                      timeout: 30s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 3
                        per_try_timeout: 10s
                        retry_back_off:
                          base_interval: 0.1s
                          max_interval: 1s
                  # Payment Service Routes
                  - match:
                      prefix: "/api/v1/payments"
                    route:
                      cluster: payment_service_cluster
                      timeout: 60s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 2
                        per_try_timeout: 20s
                  # AI Service Routes
                  - match:
                      prefix: "/api/v1/ai"
                    route:
                      cluster: ai_service_cluster
                      timeout: 120s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 1
                        per_try_timeout: 60s
                  # External API Routes (Open Banking)
                  - match:
                      prefix: "/open-banking/"
                    route:
                      cluster: external_banking_apis
                      timeout: 45s
                      retry_policy:
                        retry_on: "5xx,reset,connect-failure"
                        num_retries: 2
                        per_try_timeout: 15s
                  # Default route
                  - match:
                      prefix: "/"
                    route:
                      cluster: default_service_cluster
                      timeout: 30s
              http_filters:
              # Outbound Request Enhancement
              - name: envoy.filters.http.lua
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                  inline_code: |
                    function envoy_on_request(request_handle)
                      -- Add outbound request context
                      local source_service = os.getenv("SERVICE_NAME") or "unknown"
                      local source_pod = os.getenv("POD_NAME") or "unknown"
                      
                      request_handle:headers():add("x-source-service", source_service)
                      request_handle:headers():add("x-source-pod", source_pod)
                      request_handle:headers():add("x-outbound-timestamp", 
                        os.date("!%Y-%m-%dT%H:%M:%SZ"))
                      
                      -- Banking correlation ID
                      local correlation_id = request_handle:headers():get("x-correlation-id")
                      if not correlation_id then
                        correlation_id = source_service .. "-" .. os.time()
                        request_handle:headers():add("x-correlation-id", correlation_id)
                      end
                      
                      -- FAPI compliance for external calls
                      local path = request_handle:headers():get(":path")
                      if path and string.match(path, "^/open%-banking/") then
                        request_handle:headers():add("x-fapi-financial-id", "enterprise-bank")
                        local interaction_id = request_handle:headers():get("x-fapi-interaction-id")
                        if not interaction_id then
                          interaction_id = "eb-" .. os.time() .. "-" .. math.random(1000, 9999)
                          request_handle:headers():add("x-fapi-interaction-id", interaction_id)
                        end
                      end
                    end
              # Circuit Breaker for Banking Services
              - name: envoy.filters.http.fault
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
                  abort:
                    percentage:
                      numerator: 0
                      denominator: MILLION
                    http_status: 503
                  delay:
                    percentage:
                      numerator: 0
                      denominator: MILLION
                    fixed_delay: 0.1s
              # Router Filter
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
      # Local Service Cluster (Current Pod)
      - name: local_service
        connect_timeout: 5s
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: local_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8080

      # Banking Service Clusters
      - name: customer_service_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 3
            keepalive_time: 30
            keepalive_interval: 5
        load_assignment:
          cluster_name: customer_service_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: customer-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 3s
          interval: 10s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 100
            max_pending_requests: 100
            max_requests: 1000
            max_retries: 3

      - name: payment_service_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 3
            keepalive_time: 30
            keepalive_interval: 5
        load_assignment:
          cluster_name: payment_service_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: payment-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 5s
          interval: 15s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 50
            max_pending_requests: 50
            max_requests: 500
            max_retries: 2

      - name: ai_service_cluster
        connect_timeout: 10s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 3
            keepalive_time: 60
            keepalive_interval: 10
        load_assignment:
          cluster_name: ai_service_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ai-service.banking.svc.cluster.local
                    port_value: 8080
        health_checks:
        - timeout: 5s
          interval: 20s
          unhealthy_threshold: 3
          healthy_threshold: 2
          http_health_check:
            path: "/actuator/health"
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 25
            max_pending_requests: 25
            max_requests: 100
            max_retries: 1

      - name: external_banking_apis
        connect_timeout: 10s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: "/etc/ssl/certs/ca-certificates.crt"
        load_assignment:
          cluster_name: external_banking_apis
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: external-api-gateway.banking.svc.cluster.local
                    port_value: 443
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 10
            max_pending_requests: 10
            max_requests: 50
            max_retries: 1

      - name: default_service_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: default_service_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: api-gateway.banking.svc.cluster.local
                    port_value: 8080

    # Runtime Configuration for Banking Sidecar
    runtime:
      symlink_root: /srv/runtime_data
      subdirectory: envoy_sidecar
      override_subdirectory: envoy_sidecar_override

    # Stats Configuration for Banking Observability
    stats_config:
      stats_tags:
      - tag_name: banking_direction
        regex: "^(inbound|outbound)_.*"
      - tag_name: banking_service_cluster
        regex: "^cluster\\.(([^.]+)\\.)"
      - tag_name: banking_response_code
        regex: "^http\\..*?\\.downstream_rq_(\\d{3})"
      - tag_name: banking_method
        regex: "^http\\..*?\\.downstream_rq_(\\w+)"
      stats_sinks:
      - name: envoy.stat_sinks.metrics_service
        typed_config:
          "@type": type.googleapis.com/envoy.config.core.v3.GrpcService
          envoy_grpc:
            cluster_name: metrics_service_cluster
          transport_api_version: V3

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-bootstrap-config
  namespace: banking
  labels:
    app: banking-envoy-bootstrap
    version: v1.0
data:
  bootstrap.yaml: |
    node:
      cluster: banking-sidecar-cluster
      id: "${POD_NAME}.${POD_NAMESPACE}"
      metadata:
        banking_service: "${SERVICE_NAME}"
        banking_version: "${SERVICE_VERSION}"
        banking_compliance: "FAPI-2.0"

    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 9901

    dynamic_resources:
      lds_config:
        resource_api_version: V3
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
          set_node_on_first_message_only: true
      cds_config:
        resource_api_version: V3
        api_config_source:
          api_type: GRPC
          transport_api_version: V3
          grpc_services:
          - envoy_grpc:
              cluster_name: xds_cluster
          set_node_on_first_message_only: true

    static_resources:
      clusters:
      - name: xds_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        upstream_connection_options:
          tcp_keepalive:
            keepalive_probes: 3
            keepalive_time: 30
            keepalive_interval: 5
        load_assignment:
          cluster_name: xds_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: istiod.istio-system.svc.cluster.local
                    port_value: 15010
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            common_tls_context:
              validation_context:
                trusted_ca:
                  filename: "/var/run/secrets/istio/root-cert.pem"
              tls_certificates:
              - certificate_chain:
                  filename: "/var/run/secrets/istio/cert-chain.pem"
                private_key:
                  filename: "/var/run/secrets/istio/key.pem"

      - name: metrics_service_cluster
        connect_timeout: 5s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: metrics_service_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: prometheus.monitoring.svc.cluster.local
                    port_value: 9090

    runtime:
      symlink_root: /srv/runtime_data
      subdirectory: envoy_bootstrap
      override_subdirectory: envoy_bootstrap_override

    stats_config:
      stats_tags:
      - tag_name: banking_pod
        fixed_value: "${POD_NAME}"
      - tag_name: banking_namespace
        fixed_value: "${POD_NAMESPACE}"
      - tag_name: banking_service
        fixed_value: "${SERVICE_NAME}"