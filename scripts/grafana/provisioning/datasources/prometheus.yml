# Enterprise Loan Management System - Grafana Datasource Configuration

apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    basicAuth: false
    withCredentials: false
    editable: true
    jsonData:
      httpMethod: POST
      prometheusType: Prometheus
      prometheusVersion: 2.45.0
      cacheLevel: 'High'
      disableMetricsLookup: false
      customQueryParameters: ''
      timeInterval: 15s
      queryTimeout: 60s
      defaultRegion: us-east-1
      profile: default
      assumeRoleArn: ''
      externalId: ''
      database: ''
      basicAuthUser: ''
      withCredentials: false
      tlsAuth: false
      tlsAuthWithCACert: false
      tlsSkipVerify: false
      serverName: ''
      sigV4Auth: false
      sigV4AuthType: ''
      sigV4Region: ''
      sigV4AssumeRoleArn: ''
      sigV4ExternalId: ''
      sigV4Profile: ''
      azureAuth: false
      azureCloud: ''
      tenantId: ''
      clientId: ''
      clientSecret: ''
      subscriptionId: ''
      exemplarTraceIdDestinations: []
      manageAlerts: false
      alertmanagerUid: ''
      httpHeaderName1: 'X-Custom-Header'
      httpHeaderValue1: 'banking-system'
      httpHeaderName2: 'X-Environment'
      httpHeaderValue2: 'development'
      httpHeaderName3: 'X-Compliance'
      httpHeaderValue3: 'pci-dss,fapi-2.0'
    secureJsonData:
      basicAuthPassword: ''
      tlsCACert: ''
      tlsClientCert: ''
      tlsClientKey: ''
      password: ''
      user: ''
      accessKey: ''
      secretKey: ''
      sigV4AccessKey: ''
      sigV4SecretKey: ''
      azureClientSecret: ''
      httpHeaderValue1: 'banking-system'
      httpHeaderValue2: 'development'
      httpHeaderValue3: 'pci-dss,fapi-2.0'
    version: 1
    uid: prometheus-banking

  - name: Prometheus-AlertManager
    type: alertmanager
    access: proxy
    url: http://alertmanager:9093
    isDefault: false
    basicAuth: false
    withCredentials: false
    editable: true
    jsonData:
      implementation: prometheus
      handleGrafanaManagedAlerts: false
      httpMethod: GET
      timeout: 40
      concurrency: 5
      maxIdleConns: 100
      maxIdleConnsPerHost: 100
      maxConnsPerHost: 0
      idleConnTimeout: 90
      keepAliveSecs: 30
      tlsHandshakeTimeout: 10
      expectContinueTimeout: 1
      maxRedirects: 10
      maxResponseHeaderBytes: 0
      dialTimeout: 30
      responseHeaderTimeout: 0
      tlsConfig: {}
      proxyURL: ''
      noProxy: ''
      customHeaders: {}
      basicAuthUser: ''
      withCredentials: false
      tlsAuth: false
      tlsAuthWithCACert: false
      tlsSkipVerify: false
      serverName: ''
      sigV4Auth: false
      sigV4AuthType: ''
      sigV4Region: ''
      sigV4AssumeRoleArn: ''
      sigV4ExternalId: ''
      sigV4Profile: ''
      azureAuth: false
      azureCloud: ''
      tenantId: ''
      clientId: ''
      clientSecret: ''
      subscriptionId: ''
    secureJsonData:
      basicAuthPassword: ''
      tlsCACert: ''
      tlsClientCert: ''
      tlsClientKey: ''
      password: ''
      user: ''
      accessKey: ''
      secretKey: ''
      sigV4AccessKey: ''
      sigV4SecretKey: ''
      azureClientSecret: ''
    version: 1
    uid: alertmanager-banking

  - name: Elasticsearch
    type: elasticsearch
    access: proxy
    url: http://elasticsearch:9200
    isDefault: false
    basicAuth: false
    withCredentials: false
    editable: true
    database: logstash-*
    jsonData:
      esVersion: 8.11.0
      includeFrozen: false
      logLevelField: 'level'
      logMessageField: 'message'
      maxConcurrentShardRequests: 5
      timeField: '@timestamp'
      interval: Daily
      timeInterval: 10s
      queryTimeout: 60s
      minTimeInterval: 10s
      discoveryType: 'elasticsearch'
      basicAuthUser: ''
      withCredentials: false
      tlsAuth: false
      tlsAuthWithCACert: false
      tlsSkipVerify: false
      serverName: ''
      sigV4Auth: false
      sigV4AuthType: ''
      sigV4Region: ''
      sigV4AssumeRoleArn: ''
      sigV4ExternalId: ''
      sigV4Profile: ''
      azureAuth: false
      azureCloud: ''
      tenantId: ''
      clientId: ''
      clientSecret: ''
      subscriptionId: ''
      customHeaders: {}
      httpHeaderName1: 'X-Custom-Header'
      httpHeaderValue1: 'banking-logs'
      httpHeaderName2: 'X-Environment'
      httpHeaderValue2: 'development'
    secureJsonData:
      basicAuthPassword: ''
      tlsCACert: ''
      tlsClientCert: ''
      tlsClientKey: ''
      password: ''
      user: ''
      accessKey: ''
      secretKey: ''
      sigV4AccessKey: ''
      sigV4SecretKey: ''
      azureClientSecret: ''
      httpHeaderValue1: 'banking-logs'
      httpHeaderValue2: 'development'
    version: 1
    uid: elasticsearch-banking

  - name: Jaeger
    type: jaeger
    access: proxy
    url: http://jaeger:16686
    isDefault: false
    basicAuth: false
    withCredentials: false
    editable: true
    jsonData:
      tracesToLogs:
        datasourceUid: 'elasticsearch-banking'
        tags: ['job', 'instance', 'pod', 'namespace']
        mappedTags: [
          { key: 'service.name', value: 'service' },
          { key: 'service.namespace', value: 'namespace' }
        ]
        mapTagNamesEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
        filterByTraceID: false
        filterBySpanID: false
        lokiSearch: true
      tracesToMetrics:
        datasourceUid: 'prometheus-banking'
        tags: [
          { key: 'service.name', value: 'service' },
          { key: 'job' }
        ]
        queries: [
          {
            name: 'Sample query',
            query: 'sum(rate(tempo_spanmetrics_latency_bucket{$$__tags}[5m]))'
          }
        ]
        spanStartTimeShift: '1h'
        spanEndTimeShift: '1h'
      nodeGraph:
        enabled: true
      search:
        hide: false
      spanBar:
        type: 'Tag'
        tag: 'http.path'
      customHeaders: {}
      httpHeaderName1: 'X-Custom-Header'
      httpHeaderValue1: 'banking-traces'
      httpHeaderName2: 'X-Environment'
      httpHeaderValue2: 'development'
    secureJsonData:
      httpHeaderValue1: 'banking-traces'
      httpHeaderValue2: 'development'
    version: 1
    uid: jaeger-banking

  - name: TestData
    type: testdata
    access: proxy
    isDefault: false
    basicAuth: false
    withCredentials: false
    editable: true
    jsonData: {}
    secureJsonData: {}
    version: 1
    uid: testdata-banking