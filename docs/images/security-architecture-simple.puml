@startuml Enhanced Enterprise Banking Security Architecture
!theme plain

title Enhanced Enterprise Banking System - Security Architecture\nFAPI-Compliant OAuth2.1 with Service Mesh and AI Integration

package "External Clients" {
  [Mobile Banking App] as Mobile
  [Web Banking Portal] as Web
  [Third Party Providers] as TPP
  [Partner APIs] as Partners
}

package "API Gateway & Security Layer" {
  [API Gateway] as APIGw
  [FAPI OAuth2.1 Server] as OAuth
  [Token Management Service] as TokenMgmt
  [DPoP Token Binding] as DPoP
  [Rate Limiting] as RateLimit
  [Circuit Breaker] as CircuitBreaker
}

package "Service Mesh (Istio)" {
  [Envoy Proxy] as Envoy
  [mTLS Certificate Manager] as mTLS
  [Service Discovery] as ServiceDiscovery
  [Load Balancer] as LoadBalancer
}

package "Core Banking Services" {
  [Loan Management Service] as LoanSvc
  [Customer Management Service] as CustomerSvc
  [Payment Processing Service] as PaymentSvc
  [AI Risk Assessment Service] as AISvc
  [Compliance Service] as ComplianceSvc
  [Fraud Detection Service] as FraudSvc
}

package "Data & Infrastructure" {
  [PostgreSQL Cluster] as PgCluster
  [Redis Token Store] as Redis
  [Kafka Event Streaming] as Kafka
  [Vector Database (Qdrant)] as VectorDB
  [Audit Logging] as AuditLog
}

package "Monitoring & Observability" {
  [Prometheus] as Prometheus
  [Grafana] as Grafana
  [Jaeger Tracing] as Jaeger
  [ELK Stack] as ELK
}

' External connections
Mobile --> APIGw : HTTPS/TLS 1.3
Web --> APIGw : HTTPS/TLS 1.3
TPP --> APIGw : FAPI-Compliant\nOAuth2.1
Partners --> APIGw : mTLS

' Security Layer
APIGw --> OAuth : Token Validation
APIGw --> TokenMgmt : DPoP Binding
APIGw --> RateLimit : Adaptive Limiting
APIGw --> CircuitBreaker : Resilience

OAuth --> DPoP : Token Binding
OAuth --> Redis : Token Storage
TokenMgmt --> Redis : Distributed Cache

' Service Mesh
APIGw --> Envoy : Secure Routing
Envoy --> ServiceDiscovery : Service Location
Envoy --> mTLS : Certificate Validation
Envoy --> LoadBalancer : Traffic Distribution

' Core Services
Envoy --> LoanSvc : mTLS
Envoy --> CustomerSvc : mTLS
Envoy --> PaymentSvc : mTLS
Envoy --> AISvc : mTLS
Envoy --> ComplianceSvc : mTLS
Envoy --> FraudSvc : mTLS

' Data Access
LoanSvc --> PgCluster : Encrypted Connection
CustomerSvc --> PgCluster : Encrypted Connection
PaymentSvc --> PgCluster : Encrypted Connection
AISvc --> VectorDB : Vector Embeddings
ComplianceSvc --> PgCluster : Compliance Data
FraudSvc --> Redis : Real-time Cache

' Event Streaming
LoanSvc --> Kafka : Domain Events
CustomerSvc --> Kafka : Customer Events
PaymentSvc --> Kafka : Payment Events
AISvc --> Kafka : AI Insights
ComplianceSvc --> Kafka : Compliance Events
FraudSvc --> Kafka : Fraud Alerts

' Monitoring
LoanSvc --> Prometheus : Metrics
CustomerSvc --> Prometheus : Metrics
PaymentSvc --> Prometheus : Metrics
AISvc --> Prometheus : Metrics
ComplianceSvc --> Prometheus : Metrics
FraudSvc --> Prometheus : Metrics

Prometheus --> Grafana : Visualization
LoanSvc --> Jaeger : Distributed Tracing
CustomerSvc --> Jaeger : Distributed Tracing
PaymentSvc --> Jaeger : Distributed Tracing

LoanSvc --> AuditLog : Audit Trail
CustomerSvc --> AuditLog : Audit Trail
PaymentSvc --> AuditLog : Audit Trail
ComplianceSvc --> AuditLog : Compliance Audit
FraudSvc --> AuditLog : Security Audit

' Security Features
note right of OAuth : FAPI 1.0 Advanced Profile\nOAuth2.1 with PKCE\nDPoP Token Binding\nJWT with PS256\nStrict Security Headers

note right of mTLS : Zero-Trust Architecture\nEnd-to-End Encryption\nCertificate Rotation\nService Identity Validation

note right of Redis : Distributed Token Store\nRedis Cluster\nEncryption at Rest\nTTL-based Expiration\nConsistent Hashing

note right of Kafka : Event-Driven Architecture\nEnd-to-End Encryption\nSchema Registry\nImpotency Guarantees\nExactly-Once Delivery

@enduml