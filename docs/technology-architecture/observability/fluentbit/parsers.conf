# Custom Parsers for Banking Application Logs
# PCI-DSS Compliant Log Parsing with Security Enhancements

[PARSER]
    Name         spring_boot_json
    Format       json
    Time_Key     timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On
    Decode_Field_As escaped_utf8 message do_next
    Decode_Field_As json message

[PARSER]
    Name         spring_boot
    Format       regex
    Regex        ^(?<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+(?<level>\w+)\s+(?<pid>\d+)\s+---\s+\[(?<thread>.*?)\]\s+(?<logger>\S+)\s*:\s+(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%d %H:%M:%S.%L
    Time_Keep    On

[PARSER]
    Name         banking_audit
    Format       json
    Time_Key     audit_timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On
    Decode_Field_As escaped_utf8 audit_event do_next
    Decode_Field_As json audit_event

[PARSER]
    Name         transaction_log
    Format       json
    Time_Key     transaction_timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On
    Decode_Field_As escaped_utf8 transaction_data do_next
    Decode_Field_As json transaction_data

[PARSER]
    Name         security_event
    Format       json
    Time_Key     event_timestamp
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On
    Decode_Field_As escaped_utf8 security_data do_next
    Decode_Field_As json security_data

[PARSER]
    Name         nginx_access
    Format       regex
    Regex        ^(?<remote_addr>[^\s]+)\s+-\s+(?<remote_user>[^\s]+)\s+\[(?<time_local>[^\]]+)\]\s+"(?<request>[^"]+)"\s+(?<status>\d+)\s+(?<body_bytes_sent>\d+)\s+"(?<http_referer>[^"]*)"\s+"(?<http_user_agent>[^"]*)".*$
    Time_Key     time_local
    Time_Format  %d/%b/%Y:%H:%M:%S %z
    Time_Keep    On

[PARSER]
    Name         postgres_log
    Format       regex
    Regex        ^(?<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+(?<timezone>\w+)\s+\[(?<pid>\d+)\]\s+(?<level>\w+):\s+(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%d %H:%M:%S.%L
    Time_Keep    On

[PARSER]
    Name         redis_log
    Format       regex
    Regex        ^(?<pid>\d+):(?<role>\w+)\s+(?<timestamp>\d{2}\s+\w{3}\s+\d{4}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+(?<level>[*#-])\s+(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %d %b %Y %H:%M:%S.%L
    Time_Keep    On

[PARSER]
    Name         kafka_log
    Format       regex
    Regex        ^\[(?<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2},\d{3})\]\s+(?<level>\w+)\s+(?<message>.*)\s+\((?<class>.*)\)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%d %H:%M:%S,%L
    Time_Keep    On

[PARSER]
    Name         docker_json
    Format       json
    Time_Key     time
    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep    On

[PARSER]
    Name         syslog_rfc3164
    Format       regex
    Regex        ^\<(?<pri>\d+)\>(?<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2})\s+(?<host>\S+)\s+(?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)?\s*(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %b %d %H:%M:%S
    Time_Keep    On

[PARSER]
    Name         multiline_spring_boot
    Format       regex
    Regex        ^(?<timestamp>\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})\s+(?<level>\w+)\s+(?<pid>\d+)\s+---\s+\[(?<thread>.*?)\]\s+(?<logger>\S+)\s*:\s+(?<message>.*)$
    Time_Key     timestamp
    Time_Format  %Y-%m-%d %H:%M:%S.%L
    Time_Keep    On

[MULTILINE_PARSER]
    name          spring_boot
    type          regex
    flush_timeout 1000
    #
    # rules |   state name  | regex pattern                         | next state
    # ------|---------------|---------------------------------------|----------------------------
    rule      "start_state"   "^(\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})"  "cont"
    rule      "cont"          "^(?!\d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d{3})"  "cont"