apiVersion: v1
kind: Service
metadata:
  name: loan-management-service
  namespace: loan-management-system
  labels:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: banking-platform
    app.kubernetes.io/managed-by: kubectl
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/actuator/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8080"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "HTTP"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: application
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: management
    port: 8080
    targetPort: management
    protocol: TCP
  sessionAffinity: None

---
# Headless service for StatefulSet (if needed for direct pod access)
apiVersion: v1
kind: Service
metadata:
  name: loan-management-headless
  namespace: loan-management-system
  labels:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: headless-service
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: application
  ports:
  - name: http
    port: 8000
    targetPort: http
    protocol: TCP

---
# External service for public access (if needed)
apiVersion: v1
kind: Service
metadata:
  name: loan-management-external
  namespace: loan-management-system
  labels:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: external-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/actuator/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "8080"
    external-dns.alpha.kubernetes.io/hostname: "api.loanmanagement.example.com"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: application
  ports:
  - name: https
    port: 443
    targetPort: http
    protocol: TCP
  - name: http
    port: 80
    targetPort: http
    protocol: TCP

---
# Service Monitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: loan-management-metrics
  namespace: loan-management-system
  labels:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: service-monitor
    monitoring: "true"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: loan-management-system
      app.kubernetes.io/component: service
  endpoints:
  - port: management
    path: /actuator/prometheus
    interval: 30s
    scrapeTimeout: 10s
    honorLabels: true
    metricRelabelings:
    - sourceLabels: [__name__]
      regex: '^(http_server_requests_seconds|jvm_memory_used_bytes|jvm_gc_pause_seconds|system_cpu_usage|process_cpu_usage|hikaricp_connections_active|kafka_consumer_lag_max).*'
      action: keep

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: loan-management-ingress
  namespace: loan-management-system
  labels:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    external-dns.alpha.kubernetes.io/hostname: "api.loanmanagement.example.com"
spec:
  tls:
  - hosts:
    - api.loanmanagement.example.com
    secretName: loan-management-tls
  rules:
  - host: api.loanmanagement.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: loan-management-service
            port:
              number: 80
      - path: /actuator
        pathType: Prefix
        backend:
          service:
            name: loan-management-service
            port:
              number: 8080

---
# Network Policy for service communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: loan-management-service-policy
  namespace: loan-management-system
  labels:
    app.kubernetes.io/name: loan-management-system
    app.kubernetes.io/component: network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: loan-management-system
      app.kubernetes.io/component: application
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow traffic from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  
  # Allow inter-pod communication
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: loan-management-system
  
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow database access
  - to: []
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow Redis access
  - to: []
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow Kafka access
  - to: []
    ports:
    - protocol: TCP
      port: 9092
  
  # Allow HTTPS for external APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
