@startuml Database Isolation Architecture
!theme plain

skinparam backgroundColor #FAFAFA
skinparam database {
    BackgroundColor #E8F4FD
    BorderColor #1976D2
}
skinparam rectangle {
    BackgroundColor #F5F5F5
    BorderColor #666666
}

title Microservices Database Isolation Architecture
!define SUBTITLE Independent Database Schemas for High Availability

package "Microservice Database Isolation" {
    
    database "Customer Database" as CUSTOMER_DB #E8F5E8
    note right of CUSTOMER_DB : Schema: customer_db\nPort: 5432\nPool: 15 max, 3 min\n\nTables:\n• customers\n• credit_reservations\n• account_status_history\n• audit_logs\n\nIsolation Level: READ_COMMITTED\n\nBackup Strategy:\nPoint-in-time recovery\nDaily automated backups
    
    database "Loan Database" as LOAN_DB #FFE8E8
    note right of LOAN_DB : Schema: loan_db\nPort: 5432\nPool: 15 max, 3 min\n\nTables:\n• loans\n• loan_installments\n• loan_applications\n• business_rules_cache\n\nIsolation Level: READ_COMMITTED\n\nBackup Strategy:\nTransactional consistency\nHourly incremental backups
    
    database "Payment Database" as PAYMENT_DB #E8F8E8
    note right of PAYMENT_DB : Schema: payment_db\nPort: 5432\nPool: 15 max, 3 min\n\nTables:\n• payments\n• payment_installments\n• payment_history\n• discount_penalty_log\n\nIsolation Level: READ_COMMITTED\n\nBackup Strategy:\nFinancial compliance\nReal-time replication
    
    database "Gateway Database" as GATEWAY_DB #F0F0F0
    note right of GATEWAY_DB : Schema: banking_gateway\nPort: 5432\nPool: 20 max, 5 min\n\nTables:\n• saga_states\n• audit_events\n• session_data\n• api_rate_limits\n\nIsolation Level: SERIALIZABLE\n\nBackup Strategy:\nSAGA state preservation\nContinuous archival
}

package "Service-Database Mapping" {
    
    rectangle "Customer Service" as CUSTOMER_SVC #C8E6C9
    note right of CUSTOMER_SVC : Port: 8081\n\nEndpoints:\n• POST /customers\n• GET /customers/{id}\n• POST /credit/reserve\n• POST /credit/release\n\nDatabase Operations:\n• Customer CRUD\n• Credit management\n• Account validation
    
    rectangle "Loan Service" as LOAN_SVC #FFCDD2
    note right of LOAN_SVC : Port: 8082\n\nEndpoints:\n• POST /loans\n• GET /loans/{id}\n• GET /loans/customer/{id}\n• GET /installments/{loanId}\n\nDatabase Operations:\n• Loan lifecycle management\n• Installment calculations\n• Business rule validation
    
    rectangle "Payment Service" as PAYMENT_SVC #DCEDC8
    note right of PAYMENT_SVC : Port: 8083\n\nEndpoints:\n• POST /payments/{loanId}\n• GET /payments/{paymentId}\n• GET /payments/customer/{id}\n• GET /payments/loan/{loanId}\n\nDatabase Operations:\n• Payment processing\n• Discount/penalty calculation\n• Transaction history
    
    rectangle "API Gateway" as GATEWAY_SVC #E1F5FE
    note right of GATEWAY_SVC : Port: 8080\n\nEndpoints:\n• Circuit breaker status\n• Rate limiting metrics\n• Token validation\n• SAGA orchestration\n\nDatabase Operations:\n• SAGA state management\n• Security audit logging\n• Session management
}

package "Connection Pool Configuration" {
    
    rectangle "Customer Pool Config" as CUSTOMER_POOL #C8E6C9
    note right of CUSTOMER_POOL : HikariCP Settings:\nmaximum-pool-size: 15\nminimum-idle: 3\nidle-timeout: 300000ms\nconnection-timeout: 20000ms\nleak-detection-threshold: 60000ms\n\nIsolation Strategy:\n• Dedicated connection pool\n• Independent transaction boundaries\n• No cross-service queries
    
    rectangle "Loan Pool Config" as LOAN_POOL #FFCDD2
    note right of LOAN_POOL : HikariCP Settings:\nmaximum-pool-size: 15\nminimum-idle: 3\nidle-timeout: 300000ms\nconnection-timeout: 20000ms\nleak-detection-threshold: 60000ms\n\nIsolation Strategy:\n• Separate pool configuration\n• Loan-specific optimizations\n• Read/write separation ready
    
    rectangle "Payment Pool Config" as PAYMENT_POOL #DCEDC8
    note right of PAYMENT_POOL : HikariCP Settings:\nmaximum-pool-size: 15\nminimum-idle: 3\nidle-timeout: 300000ms\nconnection-timeout: 20000ms\nleak-detection-threshold: 60000ms\n\nIsolation Strategy:\n• Financial transaction tuning\n• ACID compliance guarantees\n• Performance monitoring
    
    rectangle "Gateway Pool Config" as GATEWAY_POOL #E1F5FE
    note right of GATEWAY_POOL : HikariCP Settings:\nmaximum-pool-size: 20\nminimum-idle: 5\nidle-timeout: 300000ms\nconnection-timeout: 20000ms\nleak-detection-threshold: 60000ms\n\nIsolation Strategy:\n• Higher concurrency support\n• SAGA state reliability\n• Audit log performance
}

' Service to Database connections
CUSTOMER_SVC --> CUSTOMER_DB : Exclusive Access
LOAN_SVC --> LOAN_DB : Exclusive Access
PAYMENT_SVC --> PAYMENT_DB : Exclusive Access
GATEWAY_SVC --> GATEWAY_DB : Exclusive Access

' Pool configurations
CUSTOMER_SVC --> CUSTOMER_POOL : Uses
LOAN_SVC --> LOAN_POOL : Uses
PAYMENT_SVC --> PAYMENT_POOL : Uses
GATEWAY_SVC --> GATEWAY_POOL : Uses

note top of CUSTOMER_DB
**Data Isolation Benefits:**
• Independent scaling per service
• Fault isolation - service failures don't cascade
• Technology diversity - different databases per need
• Security boundaries - service-level data access
• Performance tuning - optimized per workload
end note

note bottom of PAYMENT_DB
**Financial Compliance:**
• ACID transaction guarantees
• Point-in-time recovery
• Audit trail maintenance
• Regulatory reporting support
• Real-time fraud detection
end note

note right of GATEWAY_DB
**SAGA State Management:**
• Distributed transaction coordination
• Compensation workflow tracking
• Event sourcing for audit
• Timeout detection and handling
• Cross-service transaction integrity
end note

package "Cross-Service Communication" {
    rectangle "Event-Driven Integration" as EVENTS #FFF3E0
    note right of EVENTS : Kafka Topics:\n• customer-events\n• loan-events\n• payment-events\n• credit-events\n• saga-events\n\nBenefits:\n• Loose coupling between services\n• Eventual consistency\n• Scalable message processing\n• Fault tolerance
    
    rectangle "SAGA Orchestration" as SAGA #FFE0B2
    note right of SAGA : Distributed Transactions:\n• Cross-service coordination\n• Automatic compensation\n• State persistence in gateway DB\n• Timeout handling\n• Audit trail maintenance\n\nIsolation Maintained:\n• No direct database access\n• Event-based communication only\n• Service autonomy preserved
}

EVENTS --> CUSTOMER_SVC : Event Consumption
EVENTS --> LOAN_SVC : Event Consumption  
EVENTS --> PAYMENT_SVC : Event Consumption
SAGA --> GATEWAY_DB : State Persistence

@enduml