# SIT Environment Integration Test Suite
# Enterprise Loan Management System - System Integration Testing
# Environment: SIT (System Integration Testing)
# Base URL: http://localhost:8080

### 1. Health Check - Verify SIT Environment is Running
GET http://localhost:8080/health
Accept: application/json

### 2. System Information - Validate SIT Configuration
GET http://localhost:8080/
Accept: application/json

### 3. Customer Management Tests

### 3.1 Get All Customers - Verify Customer Service Integration
GET http://localhost:8080/api/customers
Accept: application/json

### 3.2 Customer Credit Information - Test Business Logic Integration
GET http://localhost:8080/api/customers/1/credit-info
Accept: application/json

### 4. Loan Origination Tests

### 4.1 Get All Loans - Verify Loan Service Integration
GET http://localhost:8080/api/loans
Accept: application/json

### 4.2 Get Loans by Customer - Test Cross-Service Integration
GET http://localhost:8080/api/loans/customers/1
Accept: application/json

### 4.3 Loan Details with Installments - Validate Complex Business Logic
GET http://localhost:8080/api/loans/LOAN2001
Accept: application/json

### 4.4 Get Loan Installments - Test Payment Schedule Integration
GET http://localhost:8080/api/loans/LOAN2001/installments
Accept: application/json

### 5. Payment Processing Tests

### 5.1 Get All Payments - Verify Payment Service Integration
GET http://localhost:8080/api/payments
Accept: application/json

### 5.2 Payment History by Loan - Test Transaction Integration
GET http://localhost:8080/api/loans/LOAN2001/payments
Accept: application/json

### 5.3 Customer Payment History - Cross-Service Data Integration
GET http://localhost:8080/payments/customer/1
Accept: application/json

### 6. Database Integration Tests

### 6.1 Database Connectivity Test - Verify SIT Database Connection
GET http://localhost:8080/api/database/test
Accept: application/json

### 7. Compliance and Security Tests

### 7.1 FAPI Compliance Report - Test Security Integration
GET http://localhost:8080/api/v1/fapi/compliance-report
Accept: application/json

### 7.2 FAPI Security Assessment - Validate Security Standards
GET http://localhost:8080/api/v1/fapi/security-assessment
Accept: application/json

### 7.3 TDD Coverage Report - Test Quality Metrics Integration
GET http://localhost:8080/api/v1/tdd/coverage-report
Accept: application/json

### 8. Monitoring and Observability Tests

### 8.1 Compliance Monitoring Metrics - Prometheus Format
GET http://localhost:8080/api/v1/monitoring/compliance
Accept: text/plain

### 8.2 Security Monitoring Metrics - Security Event Tracking
GET http://localhost:8080/api/v1/monitoring/security
Accept: text/plain

### 8.3 Actuator Prometheus Metrics - System Performance
GET http://localhost:8080/actuator/prometheus
Accept: text/plain

### 9. Cache Integration Tests

### 9.1 Cache Metrics - Redis Performance in SIT
GET http://localhost:8080/api/v1/cache/metrics
Accept: application/json

### 9.2 Cache Health Check - Verify Redis Integration
GET http://localhost:8080/api/v1/cache/health
Accept: application/json

### 9.3 Cache Invalidation Test - Test Cache Management
POST http://localhost:8080/api/v1/cache/invalidate
Content-Type: application/json

{
  "pattern": "customer",
  "reason": "SIT integration test cache invalidation"
}

### 10. Dashboard and Analytics Tests

### 10.1 Dashboard Overview - Business Intelligence Integration
GET http://localhost:8080/api/dashboard/overview
Accept: application/json

### 10.2 Portfolio Performance - Financial Analytics
GET http://localhost:8080/api/dashboard/portfolio-performance
Accept: application/json

### 10.3 Dashboard Alerts - Risk Management Integration
GET http://localhost:8080/api/dashboard/alerts
Accept: application/json

### 10.4 AI Insights - Machine Learning Integration
GET http://localhost:8080/api/dashboard/ai-insights
Accept: application/json

### 11. Load Testing Scenarios for SIT

### 11.1 Concurrent Customer Requests - Test Thread Safety
GET http://localhost:8080/api/customers
Accept: application/json

### 11.2 Rapid Loan Queries - Test Caching Performance
GET http://localhost:8080/api/loans
Accept: application/json

### 11.3 Multiple Payment Requests - Test Transaction Handling
GET http://localhost:8080/api/payments
Accept: application/json

### 12. Error Handling and Edge Cases

### 12.1 Non-existent Customer - Test Error Handling
GET http://localhost:8080/api/customers/999
Accept: application/json

### 12.2 Invalid Loan ID - Test Input Validation
GET http://localhost:8080/api/loans/INVALID_LOAN_ID
Accept: application/json

### 12.3 Malformed Request - Test Security Filters
GET http://localhost:8080/api/customers/../admin
Accept: application/json

### 13. Business Rule Validation

### 13.1 Interest Rate Validation - Test Business Logic
# This would normally be a POST request, but we'll test the validation via system info
GET http://localhost:8080/
Accept: application/json

### 13.2 Loan Amount Limits - Test Configuration Integration
GET http://localhost:8080/
Accept: application/json

### 14. Cross-Cutting Concerns

### 14.1 Request ID Tracking - Test Correlation
GET http://localhost:8080/health
X-Request-ID: SIT-TEST-12345
Accept: application/json

### 14.2 Security Headers - Test FAPI Compliance
GET http://localhost:8080/health
X-FAPI-Interaction-ID: sit-fapi-test-001
Accept: application/json

### 15. Integration Chain Tests

### 15.1 Customer -> Loan -> Payment Chain
# Step 1: Get customer
GET http://localhost:8080/api/customers/1

### 15.2 Continue Chain
# Step 2: Get customer's loans  
GET http://localhost:8080/api/loans/customers/1

### 15.3 Complete Chain
# Step 3: Get loan payments
GET http://localhost:8080/api/loans/LOAN2001/payments

### Expected Results Summary for SIT:
# - All endpoints should return 200 OK status
# - Response times should be < 1000ms (SIT performance target)
# - Cache hit ratio should be > 90%
# - No 5xx errors should occur
# - Security headers should be present
# - Business rules should be validated correctly
# - Database connectivity should be confirmed
# - Redis cache should be operational
# - Compliance metrics should meet banking standards
# - AI insights should provide meaningful data