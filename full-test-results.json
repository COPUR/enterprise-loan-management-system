{
  "collection": {
    "item": [
      {
        "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
        "name": "üîê Authentication & Security",
        "item": [
          {
            "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
            "name": "Get FAPI-Compliant Access Token",
            "request": {
              "url": {
                "path": [
                  "realms",
                  "banking-enterprise",
                  "protocol",
                  "openid_connect",
                  "token"
                ],
                "host": [
                  "{{keycloak_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "grant_type",
                    "value": "client_credentials"
                  },
                  {
                    "key": "client_id",
                    "value": "{{client_id}}"
                  },
                  {
                    "key": "client_secret",
                    "value": "{{client_secret}}"
                  },
                  {
                    "key": "scope",
                    "value": "banking-api:read banking-api:write"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Token request successful', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains access token', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.access_token).to.not.be.undefined;",
                    "    pm.globals.set('access_token', response.access_token);",
                    "});",
                    "",
                    "pm.test('Token type is DPoP', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.token_type).to.equal('DPoP');",
                    "});"
                  ],
                  "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                }
              }
            ]
          },
          {
            "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
            "name": "Validate Token Introspection",
            "request": {
              "url": {
                "path": [
                  "realms",
                  "banking-enterprise",
                  "protocol",
                  "openid_connect",
                  "token",
                  "introspect"
                ],
                "host": [
                  "{{keycloak_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "token",
                    "value": "{{access_token}}"
                  }
                ]
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
        "name": "üë§ Customer Management",
        "item": [
          {
            "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
            "name": "Create Customer",
            "request": {
              "url": {
                "path": [
                  "customers"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Customer created successfully', function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Response contains customer ID', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.customerId).to.not.be.undefined;",
                    "    pm.globals.set('test_customer_id', response.customerId);",
                    "});",
                    "",
                    "pm.test('Islamic banking preference preserved', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                }
              }
            ]
          },
          {
            "id": "55818663-c804-4af5-a133-f37f3558649a",
            "name": "Get Customer Details",
            "request": {
              "url": {
                "path": [
                  "customers",
                  "{{test_customer_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                },
                {
                  "key": "Accept-Language",
                  "value": "ar-AE"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
        "name": "üí∞ Loan Management",
        "item": [
          {
            "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
            "name": "Submit Loan Application (Murabaha)",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Loan application submitted successfully', function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Response contains loan ID and application reference', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.loanId).to.not.be.undefined;",
                    "    pm.expect(response.applicationReference).to.not.be.undefined;",
                    "    pm.globals.set('test_loan_id', response.loanId);",
                    "});",
                    "",
                    "pm.test('AI assessment will be performed', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                    "});"
                  ],
                  "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                }
              }
            ]
          },
          {
            "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
            "name": "Submit Personal Loan Application",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
            "name": "Get Loan Details",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "includeAI",
                    "value": "true"
                  },
                  {
                    "key": "includeCompliance",
                    "value": "true"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
            "name": "Approve Loan",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "approve"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
            "name": "Get Customer Loans",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "customerId",
                    "value": "{{test_customer_id}}"
                  },
                  {
                    "key": "status",
                    "value": "ACTIVE"
                  },
                  {
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "key": "size",
                    "value": "10"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
        "name": "üí≥ Payment Processing",
        "item": [
          {
            "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
            "name": "Process Loan Payment",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "payments"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Payment processed successfully', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Payment result contains transaction reference', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.transactionReference).to.not.be.undefined;",
                    "});",
                    "",
                    "pm.test('Fraud check was performed', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                    "});"
                  ],
                  "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                }
              }
            ]
          },
          {
            "id": "339eef93-219f-47f0-841b-e3260cc033d8",
            "name": "Get Payment History",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "payments"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "key": "size",
                    "value": "20"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
            "name": "Calculate Early Payment Options",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "early-payment"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
        "name": "ü§ñ AI Services",
        "item": [
          {
            "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
            "name": "Perform Fraud Detection",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "fraud",
                  "analyze"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Fraud analysis completed', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Risk score provided', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.riskScore).to.be.a('number');",
                    "    pm.expect(response.riskScore).to.be.at.least(0);",
                    "    pm.expect(response.riskScore).to.be.at.most(100);",
                    "});",
                    "",
                    "pm.test('AI model information included', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.modelUsed).to.not.be.undefined;",
                    "    pm.expect(response.confidence).to.be.a('number');",
                    "});"
                  ],
                  "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                }
              }
            ]
          },
          {
            "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
            "name": "Generate Loan Recommendations",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "recommendations",
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "customerId",
                    "value": "{{test_customer_id}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "c8ebf528-d468-4934-846d-100e8a643068",
            "name": "RAG Query - Banking Knowledge",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "rag",
                  "query"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                },
                {
                  "key": "Accept-Language",
                  "value": "ar-AE"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
            "name": "AI Health Check",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
        "name": "‚öñÔ∏è Compliance & Validation",
        "item": [
          {
            "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
            "name": "Validate Berlin Group Account Structure",
            "request": {
              "url": {
                "path": [
                  "accounts",
                  "validate-berlin-group"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
            "name": "Validate BIAN Service Domain",
            "request": {
              "url": {
                "path": [
                  "bian",
                  "validate-service-domain"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "9da27df6-3f62-490f-918e-8475e63753aa",
        "name": "üìä Monitoring & Health",
        "item": [
          {
            "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
            "name": "Application Health Check",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
            "name": "Prometheus Metrics",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "prometheus"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
            "name": "Circuit Breaker Status",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "circuitbreakers"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
            "name": "Rate Limiting Status",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "ratelimit"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "c5df5083-e69e-4588-8432-404c007e3d53",
        "name": "üß™ Load Testing & Performance",
        "item": [
          {
            "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
            "name": "Concurrent Loan Applications",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "load-test-{{$timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
            "name": "Rate Limit Test - Rapid Requests",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "customerId",
                    "value": "{{test_customer_id}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "rate-limit-test-{{$timestamp}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
        "name": "üåê Multi-Language Support",
        "item": [
          {
            "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
            "name": "Arabic Error Messages",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "invalid-loan-id"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept-Language",
                  "value": "ar-AE"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
            "name": "French Error Messages",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "invalid-loan-id"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept-Language",
                  "value": "fr-FR"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "auth": {
      "type": "oauth2",
      "oauth2": [
        {
          "type": "string",
          "value": "Banking Token",
          "key": "tokenName"
        },
        {
          "type": "string",
          "value": "{{keycloak_url}}/realms/banking-enterprise/protocol/openid_connect/token",
          "key": "accessTokenUrl"
        },
        {
          "type": "string",
          "value": "{{keycloak_url}}/realms/banking-enterprise/protocol/openid_connect/auth",
          "key": "authUrl"
        },
        {
          "type": "string",
          "value": "{{client_id}}",
          "key": "clientId"
        },
        {
          "type": "string",
          "value": "{{client_secret}}",
          "key": "clientSecret"
        },
        {
          "type": "string",
          "value": "openid profile email banking-api",
          "key": "scope"
        },
        {
          "type": "string",
          "value": "authorization_code",
          "key": "grant_type"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "15626f87-73ea-426f-b2f6-08a2ad1a5744",
          "type": "text/javascript",
          "exec": [
            "// Generate correlation ID for request tracing",
            "pm.globals.set('correlation_id', pm.variables.replaceIn('{{$guid}}'));",
            "",
            "// Set request timestamp",
            "pm.globals.set('request_timestamp', new Date().toISOString());",
            "",
            "// Generate DPoP token for FAPI compliance",
            "const dpopHeader = {",
            "  alg: 'RS256',",
            "  typ: 'dpop+jwt',",
            "  jwk: {",
            "    kty: 'RSA',",
            "    n: 'example-key-n',",
            "    e: 'AQAB'",
            "  }",
            "};",
            "",
            "pm.globals.set('dpop_header', JSON.stringify(dpopHeader));"
          ],
          "_lastExecutionId": "103eac81-7bce-451d-90c1-e28970d15006"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "type": "text/javascript",
          "exec": [
            "// Global test validations",
            "pm.test('Response time is acceptable', function () {",
            "    pm.expect(pm.response.responseTime).to.be.below(5000);",
            "});",
            "",
            "pm.test('Response has correlation ID', function () {",
            "    pm.expect(pm.response.headers.get('X-Correlation-ID')).to.not.be.null;",
            "});",
            "",
            "// Log response for debugging",
            "console.log('Response Status:', pm.response.status);",
            "console.log('Response Time:', pm.response.responseTime + 'ms');",
            "console.log('Correlation ID:', pm.response.headers.get('X-Correlation-ID'));"
          ],
          "_lastExecutionId": "332cceb6-d62b-4f4c-b480-836eff4acbe9"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:8080/api/v1",
        "key": "base_url"
      },
      {
        "type": "string",
        "value": "http://localhost:8090",
        "key": "keycloak_url"
      },
      {
        "type": "string",
        "value": "banking-client",
        "key": "client_id"
      },
      {
        "type": "string",
        "value": "banking-client-secret",
        "key": "client_secret"
      },
      {
        "type": "string",
        "value": "cust-12345-test",
        "key": "test_customer_id"
      },
      {
        "type": "string",
        "value": "",
        "key": "test_loan_id"
      }
    ],
    "info": {
      "_postman_id": "7ed1183b-7648-4414-bf9f-1c4f2e8125d1",
      "name": "Enhanced Enterprise Banking System - Complete API Collection",
      "version": {
        "raw": "2.0.0",
        "major": 2,
        "minor": 0,
        "patch": 0,
        "prerelease": [],
        "build": [],
        "string": "2.0.0"
      },
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Comprehensive API testing collection for the enhanced enterprise banking system with AI, FAPI compliance, and event-driven architecture",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment"
    },
    "id": "enhanced-enterprise-banking-env",
    "name": "Enhanced Enterprise Banking Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:8080/api/v1",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "http://localhost:8090",
        "key": "keycloak_url"
      },
      {
        "type": "any",
        "value": "banking-client",
        "key": "client_id"
      },
      {
        "type": "any",
        "value": "banking-client-secret",
        "key": "client_secret"
      },
      {
        "type": "any",
        "value": "",
        "key": "access_token"
      },
      {
        "type": "any",
        "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature",
        "key": "dpop_token"
      },
      {
        "type": "any",
        "value": "cust-demo-12345",
        "key": "test_customer_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "test_loan_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "correlation_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "request_timestamp"
      },
      {
        "type": "any",
        "value": "http://localhost:3000",
        "key": "grafana_url"
      },
      {
        "type": "any",
        "value": "http://localhost:9090",
        "key": "prometheus_url"
      },
      {
        "type": "any",
        "value": "http://localhost:16686",
        "key": "jaeger_url"
      },
      {
        "type": "any",
        "value": "http://localhost:8082",
        "key": "kafka_ui_url"
      },
      {
        "type": "any",
        "value": "http://localhost:8001",
        "key": "redis_insight_url"
      }
    ]
  },
  "globals": {
    "id": "f5ac858e-235d-4c32-8298-f3804110848f",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 57,
        "pending": 0,
        "failed": 26
      },
      "prerequests": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 26,
        "pending": 0,
        "failed": 26
      },
      "tests": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 67,
        "pending": 0,
        "failed": 41
      },
      "testScripts": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 26,
        "pending": 0,
        "failed": 26
      }
    },
    "timings": {
      "responseAverage": 0,
      "started": 1750947104066,
      "completed": 1750947104742
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "httpRequestId": "351eb430-4776-4646-ab30-9a13959e38ce"
        },
        "item": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "dc21057f-5aa4-46f5-a730-468dee72b52a",
              "timestamp": 1750947104091,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8090",
            "path": [
              "realms",
              "banking-enterprise",
              "protocol",
              "openid_connect",
              "token"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "client_id",
                "value": "banking-client"
              },
              {
                "key": "client_secret",
                "value": "banking-client-secret"
              },
              {
                "key": "scope",
                "value": "banking-api:read banking-api:write"
              }
            ]
          }
        },
        "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Token request successful",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Token request successful",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response contains access token",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response contains access token",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)"
            }
          },
          {
            "assertion": "Token type is DPoP",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Token type is DPoP",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cd306983-e47d-4ad7-abb2-ef9a917198b9",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff0c9334-d7be-4ecc-ac4b-88f834a6ae52"
        },
        "item": {
          "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "d30e6d80-ba09-4ea4-bca4-a862982b201f",
              "timestamp": 1750947104225,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8090",
            "path": [
              "realms",
              "banking-enterprise",
              "protocol",
              "openid_connect",
              "token",
              "introspect"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "token",
                "value": ""
              }
            ]
          }
        },
        "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27401837-b13a-4e6b-a913-03a155600241"
        },
        "item": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "9febcd86-d7f1-4f60-acdf-680b69bb1351",
              "timestamp": 1750947104262,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "customers"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
          }
        },
        "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Customer created successfully",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Customer created successfully",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response contains customer ID",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response contains customer ID",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:3)"
            }
          },
          {
            "assertion": "Islamic banking preference preserved",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Islamic banking preference preserved",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "992f4e23-4f41-4945-8f67-734b691498a6",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "584633b0-7640-4840-a4b9-686b45e09335"
        },
        "item": {
          "id": "55818663-c804-4af5-a133-f37f3558649a",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "a667de37-d04e-429d-a705-4c483099aa59",
              "timestamp": 1750947104293,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "customers",
              "cust-demo-12345"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            },
            {
              "key": "Accept-Language",
              "value": "ar-AE"
            }
          ],
          "method": "GET"
        },
        "id": "55818663-c804-4af5-a133-f37f3558649a",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc9f3be-40d0-4e4b-9c84-0fe7f51f3873"
        },
        "item": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "33c2ba72-d9bc-442b-a586-f3c19e007c76",
              "timestamp": 1750947104324,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerId\": \"cust-demo-12345\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
          }
        },
        "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Loan application submitted successfully",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Loan application submitted successfully",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response contains loan ID and application reference",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response contains loan ID and application reference",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:5)"
            }
          },
          {
            "assertion": "AI assessment will be performed",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "AI assessment will be performed",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "3f6f8490-2268-4601-a2b2-b00e4f6bcb3b",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a5f63a05-0b80-4fba-8c61-3f171f4fd3cd"
        },
        "item": {
          "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "470e9ecc-bb0c-4913-bddb-a9f42ab0badc",
              "timestamp": 1750947104370,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerId\": \"cust-demo-12345\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
          }
        },
        "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "65e0cdf1-1817-4a53-9c8b-d9339e310f65",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88f60ef4-d2fe-40dc-80fd-0018ad4115bb"
        },
        "item": {
          "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "851c6f6c-f39c-4c18-8302-fa10a81567b3",
              "timestamp": 1750947104391,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "includeAI",
                "value": "true"
              },
              {
                "key": "includeCompliance",
                "value": "true"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "668be7c5-0aef-4df4-ac3c-63d33de9e504",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3d0b575-ecce-499f-90fb-0e1a9a467416"
        },
        "item": {
          "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "09d65914-bf75-43f7-b13d-ac351289e716",
              "timestamp": 1750947104412,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "approve"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
          }
        },
        "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "2ec40549-1084-49c4-a8e5-8feadc2bb2c4",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13d5545c-f471-4dc6-9b55-4af70fc1bb97"
        },
        "item": {
          "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "325e4a4d-5168-45c7-bed2-0d4cdd60491f",
              "timestamp": 1750947104430,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "customerId",
                "value": "cust-demo-12345"
              },
              {
                "key": "status",
                "value": "ACTIVE"
              },
              {
                "key": "page",
                "value": "0"
              },
              {
                "key": "size",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1169ee11-d98d-491c-ae95-7167b3705c56"
        },
        "item": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "b5d4382d-20cb-465e-8641-663deb53ecb9",
              "timestamp": 1750947104454,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "payments"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-1750947104\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
          }
        },
        "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Payment processed successfully",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Payment processed successfully",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Payment result contains transaction reference",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Payment result contains transaction reference",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:10)"
            }
          },
          {
            "assertion": "Fraud check was performed",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Fraud check was performed",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "dff43584-3f5c-437c-a568-758ded8d7039",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "38a2cf9e-a2da-40d8-ba6c-adf255f58c17"
        },
        "item": {
          "id": "339eef93-219f-47f0-841b-e3260cc033d8",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "3f9b9502-8b30-4655-bbda-adde2955947e",
              "timestamp": 1750947104487,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "payments"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "page",
                "value": "0"
              },
              {
                "key": "size",
                "value": "20"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "339eef93-219f-47f0-841b-e3260cc033d8",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "6f144bee-d06c-4d14-a1ed-ee7680ab0c97",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5fa7f0d-49ea-4171-ace4-073ac9532c80"
        },
        "item": {
          "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "538b412b-1e4a-4e81-b8bd-923e01dc96c7",
              "timestamp": 1750947104504,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "early-payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST"
        },
        "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6913e5c7-d33b-4995-84a7-b1440009c81b"
        },
        "item": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "8537bf54-e34e-4fc1-be18-0b235ae82def",
              "timestamp": 1750947104522,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "fraud",
              "analyze"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"transactionId\": \"TXN-1750947105\",\n  \"customerId\": \"cust-demo-12345\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-1750947105\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
          }
        },
        "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Fraud analysis completed",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Fraud analysis completed",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:13)"
            }
          },
          {
            "assertion": "Risk score provided",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Risk score provided",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:13)"
            }
          },
          {
            "assertion": "AI model information included",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "AI model information included",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:13)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5c2921c2-6c8d-458f-b5a3-fff345b33f0a",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "04cac286-6f1b-401d-87d1-c7f5a20b5768"
        },
        "item": {
          "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "d52354d3-957a-462f-9bd7-0578398e8494",
              "timestamp": 1750947104547,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "recommendations",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "customerId",
                "value": "cust-demo-12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:14)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "beff805c-46c5-4315-9469-9425010f98c3",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8d8bc1f5-9256-4aa9-ad9f-ff9a0f5cb5ef"
        },
        "item": {
          "id": "c8ebf528-d468-4934-846d-100e8a643068",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "cccf7eaa-1b62-4c55-ab70-6f35de060083",
              "timestamp": 1750947104565,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "rag",
              "query"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            },
            {
              "key": "Accept-Language",
              "value": "ar-AE"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"cust-demo-12345\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
          }
        },
        "id": "c8ebf528-d468-4934-846d-100e8a643068",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "90fc485f-c761-47b6-8e2b-a563749307a0",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc596c4c-284c-4e79-a768-515e02e590fe"
        },
        "item": {
          "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "90255b4e-ff58-4e04-aa3e-67763767abda",
              "timestamp": 1750947104584,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "604de696-805b-4f8f-8a69-cdd954af0eb6",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e9458a40-6332-4e02-b804-ea4a57d8f3a2"
        },
        "item": {
          "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "091f3412-843e-45f4-8f79-321c8a91832a",
              "timestamp": 1750947104600,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "accounts",
              "validate-berlin-group"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
          }
        },
        "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "c51a7991-edf9-4608-a9c5-5443bb778e86",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c8c786f5-1735-4052-b18b-486526758c31"
        },
        "item": {
          "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "0fabb4e6-cb2c-4414-8f75-67107f26af7e",
              "timestamp": 1750947104615,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "bian",
              "validate-service-domain"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"cust-demo-12345\"\n}"
          }
        },
        "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:18)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "f7f84306-9bdc-4076-9c8c-078a0ab2bacc",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0e142085-7768-4415-9601-811cfc307860"
        },
        "item": {
          "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "1ff28eca-03a5-49ee-8523-479798982e7c",
              "timestamp": 1750947104631,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:19)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "2a6b6357-647a-4126-bc59-b0e60a8395ac",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ddaeda1-2602-4486-872e-0996643173fd"
        },
        "item": {
          "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "8bd96b57-4fcf-486a-8eaf-e7008a014799",
              "timestamp": 1750947104646,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "prometheus"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "40986f6a-0fe6-4c61-b459-b772c35fa219",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a7b8039a-05fc-409c-b1e4-0a97f864058c"
        },
        "item": {
          "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "5b2cabe9-c284-4f42-98fe-c56dcc2f9425",
              "timestamp": 1750947104660,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "circuitbreakers"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "a3f35882-c72e-4f24-9aa2-9ff528410443",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "178e9d7c-2342-4c24-9068-a5007a72d345"
        },
        "item": {
          "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "6e7afbf4-8d50-4950-a739-0ae93e0f9b9a",
              "timestamp": 1750947104675,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "ratelimit"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "f985eab0-df62-423f-8351-9ade881453d4",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f80b132-a238-4ad0-affc-0e5bdad39405"
        },
        "item": {
          "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "a80f1633-3b29-4e52-b093-cedf30454e81",
              "timestamp": 1750947104690,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": "load-test-1750947105"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerId\": \"load-test-customer-308\",\n  \"amount\": 909,\n  \"termInMonths\": 35,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
          }
        },
        "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "d9e37f8e-ebb8-4106-8962-79ea028439f3",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2e33d65e-7597-4c28-83c2-4646ebe553f7"
        },
        "item": {
          "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "28682d3a-354a-47cc-84b8-8c0c56a4a9e9",
              "timestamp": 1750947104703,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "customerId",
                "value": "cust-demo-12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": "rate-limit-test-1750947105"
            }
          ],
          "method": "GET"
        },
        "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "ca98e761-f513-4ec5-8926-c992c8e848fd",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ffc04eb1-2f26-492b-bc34-b92269e0f37e"
        },
        "item": {
          "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "4fef4231-dc55-469c-9d5c-fac147815ced",
              "timestamp": 1750947104718,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "invalid-loan-id"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept-Language",
              "value": "ar-AE"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:25)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "adbbd3c0-0198-44bb-acae-3cd6621c48c1",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f1cca5a9-1d05-42bd-8154-243dc2bc8d38"
        },
        "item": {
          "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "31207ccf-6978-42c5-b6a0-d19d63a1cb6d",
              "timestamp": 1750947104731,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "invalid-loan-id"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept-Language",
              "value": "fr-FR"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:26)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "dc21057f-5aa4-46f5-a730-468dee72b52a",
          "timestamp": 1750947104091,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:143:13\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:632:28)\n    at Socket.emit (node:events:518:28)\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1621:10)",
          "checksum": "9d2f9b1ade50d74980c472eb2c3ab395",
          "id": "0ef6a52a-df60-4020-a948-508a79151739",
          "timestamp": 1750947104155,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 143,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 632,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:net",
              "lineNumber": 1621,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "httpRequestId": "351eb430-4776-4646-ab30-9a13959e38ce"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "ba415ef149f1a9685ac9a8d4c8bc7e58",
          "id": "99f9eecc-2afe-485f-82d1-7f010a26816c",
          "timestamp": 1750947104185,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "httpRequestId": "351eb430-4776-4646-ab30-9a13959e38ce",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "17aefdcc-399f-452b-8318-2490a8d740cd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Token request successful",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "6c7ff4bb57fd56e5b7165cf8381d0c6e",
          "id": "9a16803f-c96b-441a-b938-bd4d20e62c1c",
          "timestamp": 1750947104204,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "httpRequestId": "351eb430-4776-4646-ab30-9a13959e38ce",
          "scriptId": "e925bb67-cbbd-4ace-b760-5709f275a19a",
          "execution": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response contains access token",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "60238057877df895e67f607960b405f1",
          "id": "3042e056-1d9d-4c1c-ab94-de0f8db76b9a",
          "timestamp": 1750947104206,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "httpRequestId": "351eb430-4776-4646-ab30-9a13959e38ce",
          "scriptId": "e925bb67-cbbd-4ace-b760-5709f275a19a",
          "execution": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Token type is DPoP",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "3aa703b2840736d32a82db83ff7d57ba",
          "id": "05c32eed-e0dd-4dbc-9658-0d32415726ec",
          "timestamp": 1750947104207,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
              }
            }
          ]
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "424dd725-5642-48b7-97fc-84eb6df4d09c",
          "httpRequestId": "351eb430-4776-4646-ab30-9a13959e38ce",
          "scriptId": "e925bb67-cbbd-4ace-b760-5709f275a19a",
          "execution": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "d30e6d80-ba09-4ea4-bca4-a862982b201f",
          "timestamp": 1750947104225,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cd306983-e47d-4ad7-abb2-ef9a917198b9",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:143:13\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:632:28)\n    at Socket.emit (node:events:518:28)\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1621:10)",
          "checksum": "9d2f9b1ade50d74980c472eb2c3ab395",
          "id": "26e0b791-aea5-4fa4-a38c-c79bb633a6b5",
          "timestamp": 1750947104242,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 143,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 632,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:net",
              "lineNumber": 1621,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cd306983-e47d-4ad7-abb2-ef9a917198b9",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff0c9334-d7be-4ecc-ac4b-88f834a6ae52"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "1da7a89aad1d0ac10f56edc217db8fd8",
          "id": "e85bf446-30c8-4f9a-82a3-9d29c4ee1265",
          "timestamp": 1750947104248,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "754f235e-51fd-4a92-8440-03ce87935fd2",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "6797cff4-f14c-4f9b-8a5b-bc4908a2770b",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e925bb67-cbbd-4ace-b760-5709f275a19a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "2c487734-5fa0-4482-8be6-3e11c2b7e86e"
                  }
                }
              ]
            },
            {
              "id": "fe9c2252-8a86-4bea-8a8c-7f2d16991dfa",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cd306983-e47d-4ad7-abb2-ef9a917198b9",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff0c9334-d7be-4ecc-ac4b-88f834a6ae52",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "8e2ee2db-7294-4d91-810d-0cbbbe663065"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "9febcd86-d7f1-4f60-acdf-680b69bb1351",
          "timestamp": 1750947104262,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "80590679-58cf-4c65-b5bb-003e81dfc7b2",
          "timestamp": 1750947104272,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27401837-b13a-4e6b-a913-03a155600241"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "f9c7c60f2bc1eb9f15fb0c9fe21a1794",
          "id": "837a2a6b-7a6a-4287-92a8-2ffdf568643c",
          "timestamp": 1750947104275,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27401837-b13a-4e6b-a913-03a155600241",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "011d6551-13d8-4ab9-a76d-1482362fbbec"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Customer created successfully",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "107e91eada188856000ce032d4c3477f",
          "id": "0e066eab-e50f-47a2-873a-22f80652a049",
          "timestamp": 1750947104283,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27401837-b13a-4e6b-a913-03a155600241",
          "scriptId": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
          "execution": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response contains customer ID",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "773b6071911bbb501d03eb94154c5983",
          "id": "de0d6c04-4759-4d3a-8fd2-d5dae82ef568",
          "timestamp": 1750947104284,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27401837-b13a-4e6b-a913-03a155600241",
          "scriptId": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
          "execution": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Islamic banking preference preserved",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "6b3de55a2f7d84eb7e586e9dfc876da3",
          "id": "c2bea3fe-53f8-4855-8ff2-5dac4fe35202",
          "timestamp": 1750947104284,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
              }
            }
          ]
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dcc152fa-83eb-49d5-846e-41ffbb6ae3f1",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27401837-b13a-4e6b-a913-03a155600241",
          "scriptId": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
          "execution": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "a667de37-d04e-429d-a705-4c483099aa59",
          "timestamp": 1750947104293,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "55818663-c804-4af5-a133-f37f3558649a",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "992f4e23-4f41-4945-8f67-734b691498a6",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "221daf6f-3743-48c7-95b3-1abf80045854",
          "timestamp": 1750947104302,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "55818663-c804-4af5-a133-f37f3558649a",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "992f4e23-4f41-4945-8f67-734b691498a6",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "584633b0-7640-4840-a4b9-686b45e09335"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "420f6280b9fd731a056780e891306803",
          "id": "2edf1a77-09e9-4886-a121-875882c653aa",
          "timestamp": 1750947104312,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "55818663-c804-4af5-a133-f37f3558649a",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "4a446ef3-3660-42fc-8c49-aac4be436cc0",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "48e01884-52ab-4099-a5b7-1f865141fc74",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "df278e6d-bbe2-4508-9d0e-2606f9c2b6ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "f4a08d65-4f2f-4e30-906b-cf61f21f9da2"
                  }
                }
              ]
            },
            {
              "id": "55818663-c804-4af5-a133-f37f3558649a",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "992f4e23-4f41-4945-8f67-734b691498a6",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "584633b0-7640-4840-a4b9-686b45e09335",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "804bd47e-6733-47e0-98e2-ea7c47e512af"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "33c2ba72-d9bc-442b-a586-f3c19e007c76",
          "timestamp": 1750947104324,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "4b2be995-0aa1-47ef-a419-d77af9ffd3e2",
          "timestamp": 1750947104335,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc9f3be-40d0-4e4b-9c84-0fe7f51f3873"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "28cf1e95a816fdec8d8ffad4c6a94b64",
          "id": "08f41e3a-837d-4a62-bd52-2e88b92f8821",
          "timestamp": 1750947104339,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc9f3be-40d0-4e4b-9c84-0fe7f51f3873",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "fd6e37ec-98a1-499c-9dc2-e380c572739e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Loan application submitted successfully",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "11acb1df1639fe9dd037c3b6bb71ddb5",
          "id": "dfc6d7a4-9be0-4aa2-b555-f141c984bcdc",
          "timestamp": 1750947104357,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc9f3be-40d0-4e4b-9c84-0fe7f51f3873",
          "scriptId": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
          "execution": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response contains loan ID and application reference",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "d5b6b5f1bd474437bcc9e8a643af799f",
          "id": "517daef5-b39f-463d-983d-4e0382d58715",
          "timestamp": 1750947104358,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc9f3be-40d0-4e4b-9c84-0fe7f51f3873",
          "scriptId": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
          "execution": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "AI assessment will be performed",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:5)",
          "checksum": "151f6c65cae2973b6fc71fd1da59ddc0",
          "id": "45d0ea55-a7b1-4e45-934f-2f0b5c2270cb",
          "timestamp": 1750947104359,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
              }
            }
          ]
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c4f73d7a-364f-4932-aa60-2954951bae15",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc9f3be-40d0-4e4b-9c84-0fe7f51f3873",
          "scriptId": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
          "execution": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "470e9ecc-bb0c-4913-bddb-a9f42ab0badc",
          "timestamp": 1750947104370,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3f6f8490-2268-4601-a2b2-b00e4f6bcb3b",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "a69add96-b9e0-4ab3-aff0-a215a756f9c1",
          "timestamp": 1750947104378,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3f6f8490-2268-4601-a2b2-b00e4f6bcb3b",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a5f63a05-0b80-4fba-8c61-3f171f4fd3cd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "34f6e298ac526c6273b7444f5e752ab3",
          "id": "9f32350e-da00-4d73-9c26-6f606f82b2f5",
          "timestamp": 1750947104382,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3f6f8490-2268-4601-a2b2-b00e4f6bcb3b",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a5f63a05-0b80-4fba-8c61-3f171f4fd3cd",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "644f1036-2ede-4b69-a4a8-8fd1c24446ae"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "851c6f6c-f39c-4c18-8302-fa10a81567b3",
          "timestamp": 1750947104391,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "65e0cdf1-1817-4a53-9c8b-d9339e310f65",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "3ea7d3e9-f5d2-4ec0-bb0f-21a5d152550c",
          "timestamp": 1750947104397,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "65e0cdf1-1817-4a53-9c8b-d9339e310f65",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88f60ef4-d2fe-40dc-80fd-0018ad4115bb"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "8bf2f9305ff4221b5be22bb2ab735748",
          "id": "b75b4591-7093-42e1-83cb-1f5a900ed444",
          "timestamp": 1750947104401,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "65e0cdf1-1817-4a53-9c8b-d9339e310f65",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88f60ef4-d2fe-40dc-80fd-0018ad4115bb",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "34ec43e6-d31f-4916-9d96-c22b62ce3d51"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "09d65914-bf75-43f7-b13d-ac351289e716",
          "timestamp": 1750947104412,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "668be7c5-0aef-4df4-ac3c-63d33de9e504",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "c8d67888-2854-4389-99d6-8339b61e96fe",
          "timestamp": 1750947104419,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "668be7c5-0aef-4df4-ac3c-63d33de9e504",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3d0b575-ecce-499f-90fb-0e1a9a467416"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "11f57c1c029b30bdda4327cd87066909",
          "id": "086a9528-1139-4c6f-b0a1-fa618a34016d",
          "timestamp": 1750947104423,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "668be7c5-0aef-4df4-ac3c-63d33de9e504",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a3d0b575-ecce-499f-90fb-0e1a9a467416",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "914b16be-e78b-418b-b3e7-a15f8a761db3"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "325e4a4d-5168-45c7-bed2-0d4cdd60491f",
          "timestamp": 1750947104430,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2ec40549-1084-49c4-a8e5-8feadc2bb2c4",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "2e024c3a-675f-410c-a25d-ac54b749d9ed",
          "timestamp": 1750947104441,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2ec40549-1084-49c4-a8e5-8feadc2bb2c4",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13d5545c-f471-4dc6-9b55-4af70fc1bb97"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "cd1ff77716ecd096656cd2187fb4a84b",
          "id": "b009e157-0361-4df0-8106-c0447687a392",
          "timestamp": 1750947104444,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "0711787a-ea29-461b-a750-d2edad80ce1e",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "bbee002b-ba53-4dfa-8938-d9b2ac06ce76",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ef9269c-5155-47cd-a688-d331ab6ab90e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "e95c7a72-6c5d-4812-951a-5ca202fa365c"
                  }
                }
              ]
            },
            {
              "id": "8c7be80e-dd5a-46a8-b170-6c8a4058d4bf",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "aaa89ef8-c279-446b-a5f4-72dbafeae5c2",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "649b1fc5-fc15-4c0c-b0c1-1d26dd84921a",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "ce5415ec-2d6f-4e59-a3fe-9832b90b8022",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2ec40549-1084-49c4-a8e5-8feadc2bb2c4",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13d5545c-f471-4dc6-9b55-4af70fc1bb97",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "8b440ff9-c42d-4a30-b4cf-50a8729378a8"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "b5d4382d-20cb-465e-8641-663deb53ecb9",
          "timestamp": 1750947104454,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "8fb12b30-8628-4b1d-b2d2-10da10ba592e",
          "timestamp": 1750947104467,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1169ee11-d98d-491c-ae95-7167b3705c56"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "663f3b5587d89fe7e648be2b6837242b",
          "id": "b7231550-acbf-4f69-8d7d-a90697d719b0",
          "timestamp": 1750947104471,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1169ee11-d98d-491c-ae95-7167b3705c56",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "547b2332-15a2-4e31-a7c7-049a18f00b05"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Payment processed successfully",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "fe9c18d8cc2484eaa122d90a06afa141",
          "id": "78e54892-26bf-4e2f-889f-2f528e71742a",
          "timestamp": 1750947104479,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1169ee11-d98d-491c-ae95-7167b3705c56",
          "scriptId": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
          "execution": "a9529980-cf20-429f-b98f-ce180a7fed1b"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Payment result contains transaction reference",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "f3f550e0e1571a4aa38f642ac6368b59",
          "id": "18dd5c38-8e42-4d2c-946d-4187ed003896",
          "timestamp": 1750947104480,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1169ee11-d98d-491c-ae95-7167b3705c56",
          "scriptId": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
          "execution": "a9529980-cf20-429f-b98f-ce180a7fed1b"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Fraud check was performed",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:10)",
          "checksum": "9e6a65a6ffc6930a14aff97327df086e",
          "id": "0a942fa3-8476-41b4-801b-ee023941760e",
          "timestamp": 1750947104480,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
              }
            }
          ]
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c240203-4ec3-4155-8895-aa0c7884617d",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1169ee11-d98d-491c-ae95-7167b3705c56",
          "scriptId": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
          "execution": "a9529980-cf20-429f-b98f-ce180a7fed1b"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "3f9b9502-8b30-4655-bbda-adde2955947e",
          "timestamp": 1750947104487,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "339eef93-219f-47f0-841b-e3260cc033d8",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dff43584-3f5c-437c-a568-758ded8d7039",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "46357ab9-2e2a-4fea-8188-91eed47cd2e8",
          "timestamp": 1750947104493,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "339eef93-219f-47f0-841b-e3260cc033d8",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dff43584-3f5c-437c-a568-758ded8d7039",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "38a2cf9e-a2da-40d8-ba6c-adf255f58c17"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "87396de6893e5f332aa46e3643f83d69",
          "id": "3f326376-0cd3-4706-81ab-bfb5842027dc",
          "timestamp": 1750947104496,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "339eef93-219f-47f0-841b-e3260cc033d8",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dff43584-3f5c-437c-a568-758ded8d7039",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "38a2cf9e-a2da-40d8-ba6c-adf255f58c17",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "64de85f1-45e0-400d-97d1-b54b2288cd90"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "538b412b-1e4a-4e81-b8bd-923e01dc96c7",
          "timestamp": 1750947104504,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6f144bee-d06c-4d14-a1ed-ee7680ab0c97",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "c3b808c4-54dc-4ab1-98ca-08fdb7d26759",
          "timestamp": 1750947104510,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6f144bee-d06c-4d14-a1ed-ee7680ab0c97",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5fa7f0d-49ea-4171-ace4-073ac9532c80"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "98d72950dec0a5c7a3bb0b99ca26db30",
          "id": "036b17b3-a239-48c6-a05b-76d5dd4fe2bc",
          "timestamp": 1750947104514,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fdb5351f-432f-4ee4-ad76-b48e36ee2f2a",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "f360876e-89be-4e87-ac57-dddb4d43b170",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "581e3c76-41b8-456f-a2e5-3d6fc7f528a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "a9529980-cf20-429f-b98f-ce180a7fed1b"
                  }
                }
              ]
            },
            {
              "id": "339eef93-219f-47f0-841b-e3260cc033d8",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "d6136cd3-7519-49f4-aea7-5da659b7199c",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6f144bee-d06c-4d14-a1ed-ee7680ab0c97",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a5fa7f0d-49ea-4171-ace4-073ac9532c80",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "67110b68-ef9d-4bdc-8e6c-784b228bb9bb"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "8537bf54-e34e-4fc1-be18-0b235ae82def",
          "timestamp": 1750947104522,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "7b74aec9-7f5a-4523-8c94-3e2623d71778",
          "timestamp": 1750947104527,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6913e5c7-d33b-4995-84a7-b1440009c81b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "f5f648abade1d95151c53ff3f836badc",
          "id": "4a1d8824-5b2e-4f5e-bda7-a38ae4e979ac",
          "timestamp": 1750947104530,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6913e5c7-d33b-4995-84a7-b1440009c81b",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "bd619f08-ea7f-4a62-9d3d-219e618f4a74"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Fraud analysis completed",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "0e305c9945de62671b639f9bcf1e3ae6",
          "id": "4a6c1ddd-5b20-43e3-97e3-709b1205f7d6",
          "timestamp": 1750947104539,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6913e5c7-d33b-4995-84a7-b1440009c81b",
          "scriptId": "37f16535-4349-4880-99e9-472d431f1fe1",
          "execution": "71c42446-f574-4173-a6e9-e5e24df804ce"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Risk score provided",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:13)",
          "checksum": "2adaee530f7b7d8e1e02d61aa34a2d6d",
          "id": "d10eab82-eba0-454b-9ce5-780f4e457121",
          "timestamp": 1750947104540,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6913e5c7-d33b-4995-84a7-b1440009c81b",
          "scriptId": "37f16535-4349-4880-99e9-472d431f1fe1",
          "execution": "71c42446-f574-4173-a6e9-e5e24df804ce"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "AI model information included",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:13)",
          "checksum": "0d7483586a47742d24651442cd2e938f",
          "id": "db190ef5-8e5f-403b-83d1-cd0ad25c2659",
          "timestamp": 1750947104540,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
              }
            }
          ]
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "60ea2793-03b1-4d59-8087-7bf3cf5ba352",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6913e5c7-d33b-4995-84a7-b1440009c81b",
          "scriptId": "37f16535-4349-4880-99e9-472d431f1fe1",
          "execution": "71c42446-f574-4173-a6e9-e5e24df804ce"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "d52354d3-957a-462f-9bd7-0578398e8494",
          "timestamp": 1750947104547,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5c2921c2-6c8d-458f-b5a3-fff345b33f0a",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "476d411d-a32a-4a18-a952-d31a63f78d4a",
          "timestamp": 1750947104552,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5c2921c2-6c8d-458f-b5a3-fff345b33f0a",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "04cac286-6f1b-401d-87d1-c7f5a20b5768"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:14)",
          "checksum": "796eb771b2ee1140e92b81fc5e3a6fef",
          "id": "322a8faa-df6e-4efe-b3d6-495fdbb403b9",
          "timestamp": 1750947104554,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5c2921c2-6c8d-458f-b5a3-fff345b33f0a",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "04cac286-6f1b-401d-87d1-c7f5a20b5768",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "02de22de-7f4e-46df-b17b-1497ac7f738e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "cccf7eaa-1b62-4c55-ab70-6f35de060083",
          "timestamp": 1750947104565,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "c8ebf528-d468-4934-846d-100e8a643068",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "beff805c-46c5-4315-9469-9425010f98c3",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "b281d3ba-7f8d-4a0b-bc19-7f7f98dd56ef",
          "timestamp": 1750947104572,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c8ebf528-d468-4934-846d-100e8a643068",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "beff805c-46c5-4315-9469-9425010f98c3",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8d8bc1f5-9256-4aa9-ad9f-ff9a0f5cb5ef"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:15)",
          "checksum": "031eececd5abb418e943ba05878af314",
          "id": "9fd50be6-7b38-4f95-99ef-113e475ccea3",
          "timestamp": 1750947104576,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c8ebf528-d468-4934-846d-100e8a643068",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "beff805c-46c5-4315-9469-9425010f98c3",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8d8bc1f5-9256-4aa9-ad9f-ff9a0f5cb5ef",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "88a09f1c-a3fd-4b49-b05a-5f37bbae9f39"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "90255b4e-ff58-4e04-aa3e-67763767abda",
          "timestamp": 1750947104584,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "90fc485f-c761-47b6-8e2b-a563749307a0",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "712e8389-dfac-4e41-bbd9-46f433a53f7f",
          "timestamp": 1750947104589,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "90fc485f-c761-47b6-8e2b-a563749307a0",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc596c4c-284c-4e79-a768-515e02e590fe"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "0746b63b9e3bb57f522d06a9b0b420a2",
          "id": "88811799-39ed-4b38-a890-0117878d2887",
          "timestamp": 1750947104592,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "a0cfb68f-59ec-4e12-880e-6472ce4c9dbc",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "8803f31a-ad54-4c8b-9f3d-5e69e5d9f2c7",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f16535-4349-4880-99e9-472d431f1fe1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "71c42446-f574-4173-a6e9-e5e24df804ce"
                  }
                }
              ]
            },
            {
              "id": "3466db3a-be77-415c-b2b6-d9682a6a7d4c",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "c8ebf528-d468-4934-846d-100e8a643068",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3dbdba17-c627-4e21-abe4-7ce700852fbb",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "90fc485f-c761-47b6-8e2b-a563749307a0",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cc596c4c-284c-4e79-a768-515e02e590fe",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "8d6f2829-0515-4fb7-a4c9-3ccfa978a184"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "091f3412-843e-45f4-8f79-321c8a91832a",
          "timestamp": 1750947104600,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "604de696-805b-4f8f-8a69-cdd954af0eb6",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "e0a49f52-edc3-41c1-945c-61683f107ea0",
          "timestamp": 1750947104605,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "604de696-805b-4f8f-8a69-cdd954af0eb6",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e9458a40-6332-4e02-b804-ea4a57d8f3a2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "86027090360beb090c90fb943346e183",
          "id": "b4274113-c944-4f93-8583-044718c52dea",
          "timestamp": 1750947104607,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "604de696-805b-4f8f-8a69-cdd954af0eb6",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e9458a40-6332-4e02-b804-ea4a57d8f3a2",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "687d5392-913b-4f69-80ad-80fac8ab6749"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "0fabb4e6-cb2c-4414-8f75-67107f26af7e",
          "timestamp": 1750947104615,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c51a7991-edf9-4608-a9c5-5443bb778e86",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "0358343b-86c3-4042-82cb-83d2bdb82f9f",
          "timestamp": 1750947104620,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c51a7991-edf9-4608-a9c5-5443bb778e86",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c8c786f5-1735-4052-b18b-486526758c31"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "3371355cc28f5b3387978dc950e51fd7",
          "id": "620dd08c-d244-481c-a0bc-e9b84046bfa2",
          "timestamp": 1750947104624,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b7931855-c2b1-41d2-ae0f-fa84dd8e7efb",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "bb6e057c-0cc8-4423-9878-8a504c2cd10e",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "b9bf5d0a-72f6-4f1a-a2da-219852c63603",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c51a7991-edf9-4608-a9c5-5443bb778e86",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c8c786f5-1735-4052-b18b-486526758c31",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "1e31ec63-bf8c-4c85-ba17-63da6d204ea0"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "1ff28eca-03a5-49ee-8523-479798982e7c",
          "timestamp": 1750947104631,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f7f84306-9bdc-4076-9c8c-078a0ab2bacc",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "1231bc45-b243-4036-9f8c-e96a433c2ba3",
          "timestamp": 1750947104637,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f7f84306-9bdc-4076-9c8c-078a0ab2bacc",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0e142085-7768-4415-9601-811cfc307860"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "909410dc0bb719c75b3b3cdc96e23548",
          "id": "960b2eb9-bb3d-4123-8762-a17e3e0d2d19",
          "timestamp": 1750947104640,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f7f84306-9bdc-4076-9c8c-078a0ab2bacc",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0e142085-7768-4415-9601-811cfc307860",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "5c94ef45-f8bc-4f43-ac26-b635f530cc05"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "8bd96b57-4fcf-486a-8eaf-e7008a014799",
          "timestamp": 1750947104646,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2a6b6357-647a-4126-bc59-b0e60a8395ac",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "462ad950-e640-4ffd-b762-1e5c88f57e15",
          "timestamp": 1750947104651,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2a6b6357-647a-4126-bc59-b0e60a8395ac",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ddaeda1-2602-4486-872e-0996643173fd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "00acb12c3bdcf6f72b8e98d073f17d4f",
          "id": "ddc7f294-60d1-4c93-81b5-34ad10ab4595",
          "timestamp": 1750947104654,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2a6b6357-647a-4126-bc59-b0e60a8395ac",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ddaeda1-2602-4486-872e-0996643173fd",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "b14bfb3a-4ca0-424d-bfdd-ca3608ddfd3e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "5b2cabe9-c284-4f42-98fe-c56dcc2f9425",
          "timestamp": 1750947104660,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "40986f6a-0fe6-4c61-b459-b772c35fa219",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "f838ce4e-d6e7-4a5c-ab66-edafd5f8f3ff",
          "timestamp": 1750947104665,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "40986f6a-0fe6-4c61-b459-b772c35fa219",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a7b8039a-05fc-409c-b1e4-0a97f864058c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:21)",
          "checksum": "35f02c091395476dbc24dc60929ad860",
          "id": "335845ac-48a9-450d-a907-75203d4cf397",
          "timestamp": 1750947104669,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "40986f6a-0fe6-4c61-b459-b772c35fa219",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a7b8039a-05fc-409c-b1e4-0a97f864058c",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "dca9755d-0f51-4b15-b6c3-bfd5eb044420"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "6e7afbf4-8d50-4950-a739-0ae93e0f9b9a",
          "timestamp": 1750947104675,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a3f35882-c72e-4f24-9aa2-9ff528410443",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "48901575-59a7-4703-9afc-2c46a05aca33",
          "timestamp": 1750947104679,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a3f35882-c72e-4f24-9aa2-9ff528410443",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "178e9d7c-2342-4c24-9068-a5007a72d345"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:22)",
          "checksum": "fbd9daff0534265451763c25cdcbe68a",
          "id": "3ee39749-0d5b-4ecf-9d6e-be836ff6272c",
          "timestamp": 1750947104682,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 22,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "9da27df6-3f62-490f-918e-8475e63753aa",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "62c4d9e3-c5cb-4d0d-938d-33e47f9a1b47",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "14b71636-c512-44a8-93e4-db7a9b7c0e28",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b46f1c30-8e5a-44e3-859b-b246ae3cb2d3",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "b226a71e-2b00-43f8-a37a-50953b7ba7f6",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a3f35882-c72e-4f24-9aa2-9ff528410443",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "178e9d7c-2342-4c24-9068-a5007a72d345",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "adf1584e-faef-4b5c-ae8c-17a7bbb44c64"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "a80f1633-3b29-4e52-b093-cedf30454e81",
          "timestamp": 1750947104690,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "c5df5083-e69e-4588-8432-404c007e3d53",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f985eab0-df62-423f-8351-9ade881453d4",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "b01e5ad4-8e91-49ce-a8d1-7e8bf11d1468",
          "timestamp": 1750947104695,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "c5df5083-e69e-4588-8432-404c007e3d53",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f985eab0-df62-423f-8351-9ade881453d4",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f80b132-a238-4ad0-affc-0e5bdad39405"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:23)",
          "checksum": "65d426a75506919c33a802f64ae01371",
          "id": "4081e814-e23c-4680-9623-80c20707f998",
          "timestamp": 1750947104697,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 23,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "c5df5083-e69e-4588-8432-404c007e3d53",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f985eab0-df62-423f-8351-9ade881453d4",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f80b132-a238-4ad0-affc-0e5bdad39405",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "69cbf602-1635-4c6c-9a51-baa62e2c7cdb"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "28682d3a-354a-47cc-84b8-8c0c56a4a9e9",
          "timestamp": 1750947104703,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "c5df5083-e69e-4588-8432-404c007e3d53",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d9e37f8e-ebb8-4106-8962-79ea028439f3",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "9560f362-a855-4424-845d-655b0f9e64a6",
          "timestamp": 1750947104707,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "c5df5083-e69e-4588-8432-404c007e3d53",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d9e37f8e-ebb8-4106-8962-79ea028439f3",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2e33d65e-7597-4c28-83c2-4646ebe553f7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:24)",
          "checksum": "c6fa0635e964349296d3a07fbefdb564",
          "id": "4a7fec11-bd3d-461f-a4d4-29eba4c4fda9",
          "timestamp": 1750947104710,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 24,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "c5df5083-e69e-4588-8432-404c007e3d53",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "d6b89ec4-7708-48db-9e71-03d5eaf49ca4",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "e41039fc-dba0-4d81-b3b5-6340939ebd4a",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d9e37f8e-ebb8-4106-8962-79ea028439f3",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2e33d65e-7597-4c28-83c2-4646ebe553f7",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "3a2f1a13-8800-4ff8-81c8-74e5fd14c549"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "4fef4231-dc55-469c-9d5c-fac147815ced",
          "timestamp": 1750947104718,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ca98e761-f513-4ec5-8926-c992c8e848fd",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "19b6bd46-b18c-4e4e-a2b7-312164742b2b",
          "timestamp": 1750947104722,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ca98e761-f513-4ec5-8926-c992c8e848fd",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ffc04eb1-2f26-492b-bc34-b92269e0f37e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:25)",
          "checksum": "027842f5771f4c69bb0ff67797d08121",
          "id": "b7010070-a845-4595-b0bd-72acd21785a3",
          "timestamp": 1750947104724,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ca98e761-f513-4ec5-8926-c992c8e848fd",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ffc04eb1-2f26-492b-bc34-b92269e0f37e",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "29aec2b4-784a-4506-8540-e6162d3a7905"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "31207ccf-6978-42c5-b6a0-d19d63a1cb6d",
          "timestamp": 1750947104731,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "adbbd3c0-0198-44bb-acae-3cd6621c48c1",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "scriptId": "15626f87-73ea-426f-b2f6-08a2ad1a5744"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "5d894a08-da68-45c9-9902-d25a5702ff1b",
          "timestamp": 1750947104735,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "adbbd3c0-0198-44bb-acae-3cd6621c48c1",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f1cca5a9-1d05-42bd-8154-243dc2bc8d38"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:26)",
          "checksum": "d0e4e3a6e503766c57f82d03550d9b12",
          "id": "05fb2f7f-cc3f-49f9-bf19-cc248d8a0618",
          "timestamp": 1750947104738,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "6edde869-0d6c-446f-bcf3-3fab8601dcca",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "6cd10166-ad3d-480d-99e3-9aca3ffe4087",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "6e9fcb8f-dc6c-4076-8173-444101b43b6c",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "adbbd3c0-0198-44bb-acae-3cd6621c48c1",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f1cca5a9-1d05-42bd-8154-243dc2bc8d38",
          "scriptId": "647c715a-901c-466e-b521-31c9fe6ebff6",
          "execution": "332cceb6-d62b-4f4c-b480-836eff4acbe9"
        }
      }
    ],
    "error": null
  }
}