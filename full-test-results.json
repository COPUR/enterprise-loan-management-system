{
  "collection": {
    "item": [
      {
        "id": "8c99183f-7439-4362-8288-b02450064d36",
        "name": "üîê Authentication & Security",
        "item": [
          {
            "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
            "name": "Get FAPI-Compliant Access Token",
            "request": {
              "url": {
                "path": [
                  "realms",
                  "banking-enterprise",
                  "protocol",
                  "openid_connect",
                  "token"
                ],
                "host": [
                  "{{keycloak_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "grant_type",
                    "value": "client_credentials"
                  },
                  {
                    "key": "client_id",
                    "value": "{{client_id}}"
                  },
                  {
                    "key": "client_secret",
                    "value": "{{client_secret}}"
                  },
                  {
                    "key": "scope",
                    "value": "banking-api:read banking-api:write"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Token request successful', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Response contains access token', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.access_token).to.not.be.undefined;",
                    "    pm.globals.set('access_token', response.access_token);",
                    "});",
                    "",
                    "pm.test('Token type is DPoP', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.token_type).to.equal('DPoP');",
                    "});"
                  ],
                  "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                }
              }
            ]
          },
          {
            "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
            "name": "Validate Token Introspection",
            "request": {
              "url": {
                "path": [
                  "realms",
                  "banking-enterprise",
                  "protocol",
                  "openid_connect",
                  "token",
                  "introspect"
                ],
                "host": [
                  "{{keycloak_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/x-www-form-urlencoded"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer {{access_token}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "token",
                    "value": "{{access_token}}"
                  }
                ]
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
        "name": "üë§ Customer Management",
        "item": [
          {
            "id": "f4c70f2b-8af7-46af-be13-617443926a40",
            "name": "Create Customer",
            "request": {
              "url": {
                "path": [
                  "customers"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Customer created successfully', function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Response contains customer ID', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.customerId).to.not.be.undefined;",
                    "    pm.globals.set('test_customer_id', response.customerId);",
                    "});",
                    "",
                    "pm.test('Islamic banking preference preserved', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                    "});"
                  ],
                  "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                }
              }
            ]
          },
          {
            "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
            "name": "Get Customer Details",
            "request": {
              "url": {
                "path": [
                  "customers",
                  "{{test_customer_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                },
                {
                  "key": "Accept-Language",
                  "value": "ar-AE"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
        "name": "üí∞ Loan Management",
        "item": [
          {
            "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
            "name": "Submit Loan Application (Murabaha)",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Loan application submitted successfully', function () {",
                    "    pm.response.to.have.status(201);",
                    "});",
                    "",
                    "pm.test('Response contains loan ID and application reference', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.loanId).to.not.be.undefined;",
                    "    pm.expect(response.applicationReference).to.not.be.undefined;",
                    "    pm.globals.set('test_loan_id', response.loanId);",
                    "});",
                    "",
                    "pm.test('AI assessment will be performed', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                    "});"
                  ],
                  "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                }
              }
            ]
          },
          {
            "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
            "name": "Submit Personal Loan Application",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "43f456e5-6617-4075-8da3-84b010a83631",
            "name": "Get Loan Details",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "includeAI",
                    "value": "true"
                  },
                  {
                    "key": "includeCompliance",
                    "value": "true"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "1dbbd979-6952-4334-858d-460f0c875bef",
            "name": "Approve Loan",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "approve"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
            "name": "Get Customer Loans",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "customerId",
                    "value": "{{test_customer_id}}"
                  },
                  {
                    "key": "status",
                    "value": "ACTIVE"
                  },
                  {
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "key": "size",
                    "value": "10"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
        "name": "üí≥ Payment Processing",
        "item": [
          {
            "id": "9375b665-ff74-4414-9b28-84befdc37ade",
            "name": "Process Loan Payment",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "payments"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Payment processed successfully', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Payment result contains transaction reference', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.transactionReference).to.not.be.undefined;",
                    "});",
                    "",
                    "pm.test('Fraud check was performed', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                    "});"
                  ],
                  "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                }
              }
            ]
          },
          {
            "id": "975418cb-3138-4e33-8c88-256e87a03665",
            "name": "Get Payment History",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "payments"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "page",
                    "value": "0"
                  },
                  {
                    "key": "size",
                    "value": "20"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
            "name": "Calculate Early Payment Options",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "{{test_loan_id}}",
                  "early-payment"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
        "name": "ü§ñ AI Services",
        "item": [
          {
            "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
            "name": "Perform Fraud Detection",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "fraud",
                  "analyze"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('Fraud analysis completed', function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('Risk score provided', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.riskScore).to.be.a('number');",
                    "    pm.expect(response.riskScore).to.be.at.least(0);",
                    "    pm.expect(response.riskScore).to.be.at.most(100);",
                    "});",
                    "",
                    "pm.test('AI model information included', function () {",
                    "    const response = pm.response.json();",
                    "    pm.expect(response.modelUsed).to.not.be.undefined;",
                    "    pm.expect(response.confidence).to.be.a('number');",
                    "});"
                  ],
                  "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                }
              }
            ]
          },
          {
            "id": "c91cd447-227c-4ce5-921e-968a46557b75",
            "name": "Generate Loan Recommendations",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "recommendations",
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "customerId",
                    "value": "{{test_customer_id}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "011099cd-e503-4cf8-9811-a0688e172656",
            "name": "RAG Query - Banking Knowledge",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "rag",
                  "query"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "DPoP",
                  "value": "{{dpop_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                },
                {
                  "key": "Accept-Language",
                  "value": "ar-AE"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
            "name": "AI Health Check",
            "request": {
              "url": {
                "path": [
                  "ai",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
        "name": "‚öñÔ∏è Compliance & Validation",
        "item": [
          {
            "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
            "name": "Validate Berlin Group Account Structure",
            "request": {
              "url": {
                "path": [
                  "accounts",
                  "validate-berlin-group"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
            "name": "Validate BIAN Service Domain",
            "request": {
              "url": {
                "path": [
                  "bian",
                  "validate-service-domain"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
              }
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
        "name": "üìä Monitoring & Health",
        "item": [
          {
            "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
            "name": "Application Health Check",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "health"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
            "name": "Prometheus Metrics",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "prometheus"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
            "name": "Circuit Breaker Status",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "circuitbreakers"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
            "name": "Rate Limiting Status",
            "request": {
              "url": {
                "path": [
                  "actuator",
                  "ratelimit"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
        "name": "üß™ Load Testing & Performance",
        "item": [
          {
            "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
            "name": "Concurrent Loan Applications",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "load-test-{{$timestamp}}"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
              }
            },
            "response": [],
            "event": []
          },
          {
            "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
            "name": "Rate Limit Test - Rapid Requests",
            "request": {
              "url": {
                "path": [
                  "loans"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [
                  {
                    "key": "customerId",
                    "value": "{{test_customer_id}}"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "rate-limit-test-{{$timestamp}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
        "name": "üåê Multi-Language Support",
        "item": [
          {
            "id": "728957d2-d998-40d4-987f-7067b83b63f6",
            "name": "Arabic Error Messages",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "invalid-loan-id"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept-Language",
                  "value": "ar-AE"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          },
          {
            "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
            "name": "French Error Messages",
            "request": {
              "url": {
                "path": [
                  "loans",
                  "invalid-loan-id"
                ],
                "host": [
                  "{{base_url}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Accept-Language",
                  "value": "fr-FR"
                },
                {
                  "key": "Authorization",
                  "value": "DPoP {{access_token}}"
                },
                {
                  "key": "X-Correlation-ID",
                  "value": "{{correlation_id}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "auth": {
      "type": "oauth2",
      "oauth2": [
        {
          "type": "string",
          "value": "Banking Token",
          "key": "tokenName"
        },
        {
          "type": "string",
          "value": "{{keycloak_url}}/realms/banking-enterprise/protocol/openid_connect/token",
          "key": "accessTokenUrl"
        },
        {
          "type": "string",
          "value": "{{keycloak_url}}/realms/banking-enterprise/protocol/openid_connect/auth",
          "key": "authUrl"
        },
        {
          "type": "string",
          "value": "{{client_id}}",
          "key": "clientId"
        },
        {
          "type": "string",
          "value": "{{client_secret}}",
          "key": "clientSecret"
        },
        {
          "type": "string",
          "value": "openid profile email banking-api",
          "key": "scope"
        },
        {
          "type": "string",
          "value": "authorization_code",
          "key": "grant_type"
        }
      ]
    },
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8",
          "type": "text/javascript",
          "exec": [
            "// Generate correlation ID for request tracing",
            "pm.globals.set('correlation_id', pm.variables.replaceIn('{{$guid}}'));",
            "",
            "// Set request timestamp",
            "pm.globals.set('request_timestamp', new Date().toISOString());",
            "",
            "// Generate DPoP token for FAPI compliance",
            "const dpopHeader = {",
            "  alg: 'RS256',",
            "  typ: 'dpop+jwt',",
            "  jwk: {",
            "    kty: 'RSA',",
            "    n: 'example-key-n',",
            "    e: 'AQAB'",
            "  }",
            "};",
            "",
            "pm.globals.set('dpop_header', JSON.stringify(dpopHeader));"
          ],
          "_lastExecutionId": "7f8eb804-d57f-4b99-a149-1be807582672"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "5e61f146-0e84-4af9-915a-be677b69951d",
          "type": "text/javascript",
          "exec": [
            "// Global test validations",
            "pm.test('Response time is acceptable', function () {",
            "    pm.expect(pm.response.responseTime).to.be.below(5000);",
            "});",
            "",
            "pm.test('Response has correlation ID', function () {",
            "    pm.expect(pm.response.headers.get('X-Correlation-ID')).to.not.be.null;",
            "});",
            "",
            "// Log response for debugging",
            "console.log('Response Status:', pm.response.status);",
            "console.log('Response Time:', pm.response.responseTime + 'ms');",
            "console.log('Correlation ID:', pm.response.headers.get('X-Correlation-ID'));"
          ],
          "_lastExecutionId": "0ffcdc00-62b4-4c51-8a36-778c6e957439"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "http://localhost:8080/api/v1",
        "key": "base_url"
      },
      {
        "type": "string",
        "value": "http://localhost:8090",
        "key": "keycloak_url"
      },
      {
        "type": "string",
        "value": "banking-client",
        "key": "client_id"
      },
      {
        "type": "string",
        "value": "banking-client-secret",
        "key": "client_secret"
      },
      {
        "type": "string",
        "value": "cust-12345-test",
        "key": "test_customer_id"
      },
      {
        "type": "string",
        "value": "",
        "key": "test_loan_id"
      }
    ],
    "info": {
      "_postman_id": "8934525b-9534-46af-a23d-bfdfee8421eb",
      "name": "Enhanced Enterprise Banking System - Complete API Collection",
      "version": {
        "raw": "2.0.0",
        "major": 2,
        "minor": 0,
        "patch": 0,
        "prerelease": [],
        "build": [],
        "string": "2.0.0"
      },
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Comprehensive API testing collection for the enhanced enterprise banking system with AI, FAPI compliance, and event-driven architecture",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment"
    },
    "id": "enhanced-enterprise-banking-env",
    "name": "Enhanced Enterprise Banking Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:8080/api/v1",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "http://localhost:8090",
        "key": "keycloak_url"
      },
      {
        "type": "any",
        "value": "banking-client",
        "key": "client_id"
      },
      {
        "type": "any",
        "value": "banking-client-secret",
        "key": "client_secret"
      },
      {
        "type": "any",
        "value": "",
        "key": "access_token"
      },
      {
        "type": "any",
        "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature",
        "key": "dpop_token"
      },
      {
        "type": "any",
        "value": "cust-demo-12345",
        "key": "test_customer_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "test_loan_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "correlation_id"
      },
      {
        "type": "any",
        "value": "",
        "key": "request_timestamp"
      },
      {
        "type": "any",
        "value": "http://localhost:3000",
        "key": "grafana_url"
      },
      {
        "type": "any",
        "value": "http://localhost:9090",
        "key": "prometheus_url"
      },
      {
        "type": "any",
        "value": "http://localhost:16686",
        "key": "jaeger_url"
      },
      {
        "type": "any",
        "value": "http://localhost:8082",
        "key": "kafka_ui_url"
      },
      {
        "type": "any",
        "value": "http://localhost:8001",
        "key": "redis_insight_url"
      }
    ]
  },
  "globals": {
    "id": "c8865bb5-b210-4306-88d4-5f08bdac5708",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 57,
        "pending": 0,
        "failed": 26
      },
      "prerequests": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 26,
        "pending": 0,
        "failed": 26
      },
      "tests": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 67,
        "pending": 0,
        "failed": 41
      },
      "testScripts": {
        "total": 31,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 26,
        "pending": 0,
        "failed": 26
      }
    },
    "timings": {
      "responseAverage": 0,
      "started": 1750962188142,
      "completed": 1750962191570
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "httpRequestId": "32b4f148-faae-4ded-bf77-6223d5c6f45b"
        },
        "item": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "3c361e41-40ad-4f39-8e71-d6d6a7b6232f",
              "timestamp": 1750962188271,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8090",
            "path": [
              "realms",
              "banking-enterprise",
              "protocol",
              "openid_connect",
              "token"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "grant_type",
                "value": "client_credentials"
              },
              {
                "key": "client_id",
                "value": "banking-client"
              },
              {
                "key": "client_secret",
                "value": "banking-client-secret"
              },
              {
                "key": "scope",
                "value": "banking-api:read banking-api:write"
              }
            ]
          }
        },
        "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Token request successful",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Token request successful",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response contains access token",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response contains access token",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)"
            }
          },
          {
            "assertion": "Token type is DPoP",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Token type is DPoP",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "c20ae9b2-b592-4f7a-9c03-6c7dd1815a0a",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f8f7994-19ba-4321-82a3-b5d6c90da1f9"
        },
        "item": {
          "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "904ab7a0-b1e9-4025-a092-97058bd934e9",
              "timestamp": 1750962188527,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8090",
            "path": [
              "realms",
              "banking-enterprise",
              "protocol",
              "openid_connect",
              "token",
              "introspect"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "Authorization",
              "value": "Bearer "
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "token",
                "value": ""
              }
            ]
          }
        },
        "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "960cb461-9d1d-4e5e-ac49-9e3b82e55da4"
        },
        "item": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "6e460108-1e1a-4d1a-a302-e221f82593e9",
              "timestamp": 1750962188662,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "customers"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
          }
        },
        "id": "f4c70f2b-8af7-46af-be13-617443926a40",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Customer created successfully",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Customer created successfully",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Response contains customer ID",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response contains customer ID",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:3)"
            }
          },
          {
            "assertion": "Islamic banking preference preserved",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Islamic banking preference preserved",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "299a833c-2530-460b-ad5f-29e3a9bea678",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50e61abf-acd5-4fb5-b638-6b4155d927d7"
        },
        "item": {
          "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "0029bc32-ecc5-49c7-ba25-eaa1c68729c4",
              "timestamp": 1750962188798,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "customers",
              "cust-demo-12345"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            },
            {
              "key": "Accept-Language",
              "value": "ar-AE"
            }
          ],
          "method": "GET"
        },
        "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1e09715-8b8e-4c7f-98ce-7d128485633a"
        },
        "item": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "bc7d9daf-e5fa-4757-9a1f-80abb62c5bbd",
              "timestamp": 1750962188929,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerId\": \"cust-demo-12345\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
          }
        },
        "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Loan application submitted successfully",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Loan application submitted successfully",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Response contains loan ID and application reference",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Response contains loan ID and application reference",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:5)"
            }
          },
          {
            "assertion": "AI assessment will be performed",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "AI assessment will be performed",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "016b5f2c-0e96-4e0b-a82e-e58f4afcb15d",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d040bc6e-5a81-49b2-a82b-f7e0fe7eee46"
        },
        "item": {
          "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "5f145676-3592-4509-afc6-3c628bfd4c96",
              "timestamp": 1750962189073,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerId\": \"cust-demo-12345\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
          }
        },
        "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "8db2ebb2-0849-4399-82ff-43ae4d75f719",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "548dc6ae-6712-4e19-bd68-a8325fc64cd2"
        },
        "item": {
          "id": "43f456e5-6617-4075-8da3-84b010a83631",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "373b6482-b4a2-458a-98d2-cba7773a5fd0",
              "timestamp": 1750962189196,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "includeAI",
                "value": "true"
              },
              {
                "key": "includeCompliance",
                "value": "true"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "43f456e5-6617-4075-8da3-84b010a83631",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "a628e609-8b7e-4ba2-a8a8-453da464013d",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebaaaf9a-08fd-43d9-81b4-3965cc484bed"
        },
        "item": {
          "id": "1dbbd979-6952-4334-858d-460f0c875bef",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "29cc1955-72bc-456e-8df0-3c86d6af51f2",
              "timestamp": 1750962189318,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "approve"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
          }
        },
        "id": "1dbbd979-6952-4334-858d-460f0c875bef",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "582167f4-7937-4064-a741-3679c493acc2",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "749cd7a9-4364-46b0-a576-414cce577abd"
        },
        "item": {
          "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "d4661542-028e-40aa-bea1-546d444d8f0f",
              "timestamp": 1750962189441,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "customerId",
                "value": "cust-demo-12345"
              },
              {
                "key": "status",
                "value": "ACTIVE"
              },
              {
                "key": "page",
                "value": "0"
              },
              {
                "key": "size",
                "value": "10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f8766b5-00fe-462c-9d7e-0f7be0628cc7"
        },
        "item": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "cfe18aad-bd30-489f-b282-1b7cc075f716",
              "timestamp": 1750962189570,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "payments"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-1750962190\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
          }
        },
        "id": "9375b665-ff74-4414-9b28-84befdc37ade",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Payment processed successfully",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Payment processed successfully",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Payment result contains transaction reference",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Payment result contains transaction reference",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:10)"
            }
          },
          {
            "assertion": "Fraud check was performed",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "Fraud check was performed",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cde99328-ab3a-4250-b4fe-f4c63b481f30",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "685d8134-c4ed-40e7-920c-869a7c1d100e"
        },
        "item": {
          "id": "975418cb-3138-4e33-8c88-256e87a03665",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "220a49d9-ef77-46da-a145-b07f164c4064",
              "timestamp": 1750962189710,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "payments"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "page",
                "value": "0"
              },
              {
                "key": "size",
                "value": "20"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "975418cb-3138-4e33-8c88-256e87a03665",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "fe4e4ba3-36aa-49be-b7af-56371303e8b8",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "54748e62-28b6-46fa-9ad4-f458fdca7cc8"
        },
        "item": {
          "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "5d1017f0-b6d8-4643-988d-b079ee258268",
              "timestamp": 1750962189830,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "",
              "early-payment"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST"
        },
        "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fed573a5-a7d8-41af-a837-dd639f68b32b"
        },
        "item": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "42878a94-84e5-4cf2-a571-d9fe111bad3c",
              "timestamp": 1750962189948,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "fraud",
              "analyze"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"transactionId\": \"TXN-1750962190\",\n  \"customerId\": \"cust-demo-12345\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-1750962190\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
          }
        },
        "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          },
          {
            "assertion": "Fraud analysis completed",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Fraud analysis completed",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:13)"
            }
          },
          {
            "assertion": "Risk score provided",
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "Risk score provided",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:13)"
            }
          },
          {
            "assertion": "AI model information included",
            "error": {
              "name": "JSONError",
              "index": 2,
              "test": "AI model information included",
              "message": "\"undefined\" is not valid JSON",
              "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:13)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f5d5cf93-a32c-4606-97f1-c574fb6cad3e",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a2ae2702-ab34-47f9-976b-236f692a727f"
        },
        "item": {
          "id": "c91cd447-227c-4ce5-921e-968a46557b75",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "14951f79-b447-415c-990a-80544cac7383",
              "timestamp": 1750962190078,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "recommendations",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "customerId",
                "value": "cust-demo-12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "c91cd447-227c-4ce5-921e-968a46557b75",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:14)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "31912056-cddf-470f-845f-d8e9d0644090",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7bd6620-df32-4b0a-a362-3a374b914ff4"
        },
        "item": {
          "id": "011099cd-e503-4cf8-9811-a0688e172656",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "663d4d6f-fc03-4878-bbb6-56bea7727478",
              "timestamp": 1750962190204,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "rag",
              "query"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "DPoP",
              "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6ImRwb3Arand0IiwiandrIjp7Imt0eSI6IlJTQSIsIm4iOiJleGFtcGxlLWtleS1uIiwiZSI6IkFRQUIifX0.eyJqdGkiOiJkcG9wLXRva2VuLWV4YW1wbGUiLCJodG0iOiJQT1NUIiwiaHR1IjoiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MS9sb2FucyIsImlhdCI6MTcwNzY2NzIwMH0.example-signature"
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            },
            {
              "key": "Accept-Language",
              "value": "ar-AE"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"cust-demo-12345\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
          }
        },
        "id": "011099cd-e503-4cf8-9811-a0688e172656",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "20454d3e-74a7-49c9-af01-5b820e331c27",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d6c2a2d-6dd5-4539-9ed3-f367a3835647"
        },
        "item": {
          "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "cb24022a-6a1e-43cf-9098-f43ab87c4405",
              "timestamp": 1750962190331,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "ai",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "dc5b5ead-e0bc-4aed-a767-7870911a6466",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "85908808-9724-4923-a737-4c95cf6d5f44"
        },
        "item": {
          "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "b91fc3c2-1ecc-41e1-9102-a030e489e5eb",
              "timestamp": 1750962190453,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "accounts",
              "validate-berlin-group"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
          }
        },
        "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "7ef68121-b55d-47dd-93e7-61c4fca1d7b5",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3a08d1f-bc30-4ccd-98a1-943b218dd918"
        },
        "item": {
          "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "cc3e894e-1906-436d-a77c-9cbc5e2a6345",
              "timestamp": 1750962190575,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "bian",
              "validate-service-domain"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"cust-demo-12345\"\n}"
          }
        },
        "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:18)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "4a1e127f-8356-43fa-bcef-1de7c1579a9b",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d7b25dc-910f-437c-81ec-e0b76544dfa6"
        },
        "item": {
          "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "9d36d8ec-0487-41a4-ac5c-e5acf7435451",
              "timestamp": 1750962190696,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "health"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:19)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "7a32d7ec-14f3-4e7b-9006-1a6beb351325",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "015814d7-d08b-49a6-95de-6fcffa2faf6a"
        },
        "item": {
          "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "ecb28d44-2dda-4bd0-84c7-a369e26926ac",
              "timestamp": 1750962190820,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "prometheus"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "9bcd78e8-7994-4965-847f-5b2106fb90b7",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eedbd822-46bd-40d1-b1e7-3763a7a3de77"
        },
        "item": {
          "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "03d030c0-3046-4046-b8af-98cdd821cfc3",
              "timestamp": 1750962190945,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "circuitbreakers"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:21)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "ef6cd6d1-0891-4bbc-ba01-456ca9b75c93",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eda3973c-61fc-434d-918f-53daed318c8b"
        },
        "item": {
          "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "78eccc00-3812-4064-a734-9845806ce71c",
              "timestamp": 1750962191065,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "actuator",
              "ratelimit"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "c299175a-fd98-43e6-a41f-9693e62566d6",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aacd29e6-a2da-4093-b9e6-53846b034721"
        },
        "item": {
          "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "514622d4-529a-41ee-a060-8d9194d7a9c2",
              "timestamp": 1750962191185,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": "load-test-1750962191"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"customerId\": \"load-test-customer-235\",\n  \"amount\": 219,\n  \"termInMonths\": 511,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
          }
        },
        "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "09e112e6-383b-4cf5-a1d2-a4fb8825a2e9",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f89c4717-dc56-4d29-a9db-c00798aa7139"
        },
        "item": {
          "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "b45c1fd9-4e92-4a83-a9e6-2efef333d039",
              "timestamp": 1750962191307,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "customerId",
                "value": "cust-demo-12345"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": "rate-limit-test-1750962191"
            }
          ],
          "method": "GET"
        },
        "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "32a1303e-dd2d-42ab-92a0-5a3e2f6749dc",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7979915e-db22-412c-8853-08ab2ce82b22"
        },
        "item": {
          "id": "728957d2-d998-40d4-987f-7067b83b63f6",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "9a728515-3e50-44a2-9a50-0dd341f4934f",
              "timestamp": 1750962191431,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "invalid-loan-id"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept-Language",
              "value": "ar-AE"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "728957d2-d998-40d4-987f-7067b83b63f6",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:25)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      },
      {
        "cursor": {
          "ref": "8476de41-1700-4a21-97fc-58663847eb06",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b0bdf97-4b6b-4ed5-a9d4-a4f38e83b6ea"
        },
        "item": {
          "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "prerequestScript": [
          {
            "error": {
              "type": "Error",
              "name": "TypeError",
              "message": "pm.variables.replaceIn is not a function",
              "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
              "id": "28d266cd-2c83-4ea0-a5b4-06a144da8b7d",
              "timestamp": 1750962191555,
              "stacktrace": []
            }
          }
        ],
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "loans",
              "invalid-loan-id"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept-Language",
              "value": "fr-FR"
            },
            {
              "key": "Authorization",
              "value": "DPoP "
            },
            {
              "key": "X-Correlation-ID",
              "value": ""
            }
          ],
          "method": "GET"
        },
        "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
        "requestError": {
          "code": "ERR_INVALID_IP_ADDRESS"
        },
        "assertions": [
          {
            "assertion": "Response time is acceptable",
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is acceptable",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:26)"
            }
          },
          {
            "assertion": "Response has correlation ID"
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "3c361e41-40ad-4f39-8e71-d6d6a7b6232f",
          "timestamp": 1750962188271,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:143:13\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:632:28)\n    at Socket.emit (node:events:518:28)\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1621:10)",
          "checksum": "9d2f9b1ade50d74980c472eb2c3ab395",
          "id": "685d0911-725a-4b17-bf0b-69b3060978e2",
          "timestamp": 1750962188352,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 143,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 632,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:net",
              "lineNumber": 1621,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "httpRequestId": "32b4f148-faae-4ded-bf77-6223d5c6f45b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "ba415ef149f1a9685ac9a8d4c8bc7e58",
          "id": "2401e2c7-d590-4ee0-9136-16399e0e8f78",
          "timestamp": 1750962188389,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "httpRequestId": "32b4f148-faae-4ded-bf77-6223d5c6f45b",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "8c1b64ad-3829-4dc8-a1a2-2fb6e41d4201"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Token request successful",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "6c7ff4bb57fd56e5b7165cf8381d0c6e",
          "id": "1a300ca0-f3cf-41d6-b410-daed7f74c9cf",
          "timestamp": 1750962188409,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "httpRequestId": "32b4f148-faae-4ded-bf77-6223d5c6f45b",
          "scriptId": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
          "execution": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response contains access token",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "60238057877df895e67f607960b405f1",
          "id": "b1a2a9ee-28b8-479d-a745-1fa43f55fa0c",
          "timestamp": 1750962188411,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "httpRequestId": "32b4f148-faae-4ded-bf77-6223d5c6f45b",
          "scriptId": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
          "execution": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Token type is DPoP",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "3aa703b2840736d32a82db83ff7d57ba",
          "id": "5688f5f8-b3a4-400d-b179-ab5ea5254814",
          "timestamp": 1750962188411,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
          "name": "Get FAPI-Compliant Access Token",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "client_credentials"
                },
                {
                  "key": "client_id",
                  "value": "{{client_id}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{client_secret}}"
                },
                {
                  "key": "scope",
                  "value": "banking-api:read banking-api:write"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Token request successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains access token', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.access_token).to.not.be.undefined;",
                  "    pm.globals.set('access_token', response.access_token);",
                  "});",
                  "",
                  "pm.test('Token type is DPoP', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.token_type).to.equal('DPoP');",
                  "});"
                ],
                "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
              }
            }
          ]
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 26,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f99f0e45-7ce2-4db0-969e-2f80bd5ca05d",
          "httpRequestId": "32b4f148-faae-4ded-bf77-6223d5c6f45b",
          "scriptId": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
          "execution": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "904ab7a0-b1e9-4025-a092-97058bd934e9",
          "timestamp": 1750962188527,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c20ae9b2-b592-4f7a-9c03-6c7dd1815a0a",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:143:13\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:632:28)\n    at Socket.emit (node:events:518:28)\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1621:10)",
          "checksum": "9d2f9b1ade50d74980c472eb2c3ab395",
          "id": "03936c7f-8d92-49b7-b887-6d3359864cae",
          "timestamp": 1750962188541,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 143,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 13,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 632,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:net",
              "lineNumber": 1621,
              "functionName": "TCPConnectWrap.afterConnect [as oncomplete]",
              "typeName": "TCPConnectWrap",
              "methodName": "afterConnect [as oncomplete]",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c20ae9b2-b592-4f7a-9c03-6c7dd1815a0a",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f8f7994-19ba-4321-82a3-b5d6c90da1f9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "1da7a89aad1d0ac10f56edc217db8fd8",
          "id": "bfebe796-dbfb-4012-848f-3947f3212f0a",
          "timestamp": 1750962188546,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
          "name": "Validate Token Introspection",
          "request": {
            "url": {
              "path": [
                "realms",
                "banking-enterprise",
                "protocol",
                "openid_connect",
                "token",
                "introspect"
              ],
              "host": [
                "{{keycloak_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}"
                }
              ]
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8c99183f-7439-4362-8288-b02450064d36",
          "name": "üîê Authentication & Security",
          "item": [
            {
              "id": "77d1d21a-561d-4810-a6d9-0b7356a8472e",
              "name": "Get FAPI-Compliant Access Token",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "grant_type",
                      "value": "client_credentials"
                    },
                    {
                      "key": "client_id",
                      "value": "{{client_id}}"
                    },
                    {
                      "key": "client_secret",
                      "value": "{{client_secret}}"
                    },
                    {
                      "key": "scope",
                      "value": "banking-api:read banking-api:write"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3cbe331c-5aeb-4280-8909-6ff9367dc089",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Token request successful', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response contains access token', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.access_token).to.not.be.undefined;",
                      "    pm.globals.set('access_token', response.access_token);",
                      "});",
                      "",
                      "pm.test('Token type is DPoP', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.token_type).to.equal('DPoP');",
                      "});"
                    ],
                    "_lastExecutionId": "75190d8f-d11e-4ad8-b490-26ed335f6ebe"
                  }
                }
              ]
            },
            {
              "id": "a5a7ab9a-7e72-420a-a8a7-b6d561497ed6",
              "name": "Validate Token Introspection",
              "request": {
                "url": {
                  "path": [
                    "realms",
                    "banking-enterprise",
                    "protocol",
                    "openid_connect",
                    "token",
                    "introspect"
                  ],
                  "host": [
                    "{{keycloak_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "token",
                      "value": "{{access_token}}"
                    }
                  ]
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c20ae9b2-b592-4f7a-9c03-6c7dd1815a0a",
          "length": 26,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1f8f7994-19ba-4321-82a3-b5d6c90da1f9",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "706345ae-bf23-4536-ac37-3aeb4657a166"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "6e460108-1e1a-4d1a-a302-e221f82593e9",
          "timestamp": 1750962188662,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "4dcb743e-b22c-43db-a40b-4d3c7472deaa",
          "timestamp": 1750962188675,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "960cb461-9d1d-4e5e-ac49-9e3b82e55da4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "f9c7c60f2bc1eb9f15fb0c9fe21a1794",
          "id": "ac76aa68-54b2-4503-8a4e-4a5c163e0e97",
          "timestamp": 1750962188679,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "960cb461-9d1d-4e5e-ac49-9e3b82e55da4",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "c4843ba0-1912-4ee1-b58b-86229489c16d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Customer created successfully",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "107e91eada188856000ce032d4c3477f",
          "id": "c44b7edc-193b-4924-8ea0-7be25a0318f3",
          "timestamp": 1750962188686,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "960cb461-9d1d-4e5e-ac49-9e3b82e55da4",
          "scriptId": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
          "execution": "8197785e-5913-4718-b31a-d8b08c8a3401"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response contains customer ID",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "773b6071911bbb501d03eb94154c5983",
          "id": "5f5b8fae-bd1d-4399-afbb-ba333bd86abd",
          "timestamp": 1750962188687,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "960cb461-9d1d-4e5e-ac49-9e3b82e55da4",
          "scriptId": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
          "execution": "8197785e-5913-4718-b31a-d8b08c8a3401"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Islamic banking preference preserved",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:3)",
          "checksum": "6b3de55a2f7d84eb7e586e9dfc876da3",
          "id": "75426cf6-3f7e-4e73-83af-f4e086c5fc23",
          "timestamp": 1750962188687,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "f4c70f2b-8af7-46af-be13-617443926a40",
          "name": "Create Customer",
          "request": {
            "url": {
              "path": [
                "customers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Customer created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains customer ID', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.customerId).to.not.be.undefined;",
                  "    pm.globals.set('test_customer_id', response.customerId);",
                  "});",
                  "",
                  "pm.test('Islamic banking preference preserved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                  "});"
                ],
                "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
              }
            }
          ]
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "df5d29c1-03f2-4283-a7d9-db7c5a378066",
          "length": 26,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "960cb461-9d1d-4e5e-ac49-9e3b82e55da4",
          "scriptId": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
          "execution": "8197785e-5913-4718-b31a-d8b08c8a3401"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "0029bc32-ecc5-49c7-ba25-eaa1c68729c4",
          "timestamp": 1750962188798,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "299a833c-2530-460b-ad5f-29e3a9bea678",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "9430ab38-4b79-4d83-9a9a-dc2a5b4995e8",
          "timestamp": 1750962188807,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "299a833c-2530-460b-ad5f-29e3a9bea678",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50e61abf-acd5-4fb5-b638-6b4155d927d7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "420f6280b9fd731a056780e891306803",
          "id": "487712e5-2ea5-4944-b8a5-98d4af9b7174",
          "timestamp": 1750962188815,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
          "name": "Get Customer Details",
          "request": {
            "url": {
              "path": [
                "customers",
                "{{test_customer_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "f0ff0b5c-14a5-4430-bbfa-7bc16af5083a",
          "name": "üë§ Customer Management",
          "item": [
            {
              "id": "f4c70f2b-8af7-46af-be13-617443926a40",
              "name": "Create Customer",
              "request": {
                "url": {
                  "path": [
                    "customers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerType\": \"INDIVIDUAL\",\n  \"personalInfo\": {\n    \"firstName\": \"Ahmed\",\n    \"lastName\": \"Al-Mansouri\",\n    \"dateOfBirth\": \"1985-03-15\",\n    \"nationalId\": \"784-1985-1234567-8\",\n    \"nationality\": \"AE\"\n  },\n  \"contactInfo\": {\n    \"email\": \"ahmed.almansouri@example.com\",\n    \"phoneNumber\": \"+971-50-123-4567\",\n    \"address\": {\n      \"street\": \"Sheikh Zayed Road\",\n      \"city\": \"Dubai\",\n      \"emirate\": \"Dubai\",\n      \"postalCode\": \"12345\",\n      \"country\": \"AE\"\n    }\n  },\n  \"financialInfo\": {\n    \"monthlyIncome\": 15000,\n    \"employmentStatus\": \"EMPLOYED\",\n    \"employer\": \"Emirates NBD\",\n    \"currency\": \"AED\"\n  },\n  \"preferences\": {\n    \"language\": \"ar\",\n    \"communicationChannel\": \"EMAIL\",\n    \"islamicBanking\": true\n  },\n  \"kycDocuments\": [\n    {\n      \"type\": \"EMIRATES_ID\",\n      \"documentNumber\": \"784-1985-1234567-8\",\n      \"expiryDate\": \"2025-03-15\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "40893353-64a5-46e9-98f9-240e0bc4d2ea",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Customer created successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains customer ID', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.customerId).to.not.be.undefined;",
                      "    pm.globals.set('test_customer_id', response.customerId);",
                      "});",
                      "",
                      "pm.test('Islamic banking preference preserved', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.preferences.islamicBanking).to.be.true;",
                      "});"
                    ],
                    "_lastExecutionId": "8197785e-5913-4718-b31a-d8b08c8a3401"
                  }
                }
              ]
            },
            {
              "id": "d2ca940d-c3b1-4e13-82ac-1adc9dcc0bbb",
              "name": "Get Customer Details",
              "request": {
                "url": {
                  "path": [
                    "customers",
                    "{{test_customer_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "299a833c-2530-460b-ad5f-29e3a9bea678",
          "length": 26,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "50e61abf-acd5-4fb5-b638-6b4155d927d7",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "11986be1-3ff0-42c4-9ef0-5599f29b90b6"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "bc7d9daf-e5fa-4757-9a1f-80abb62c5bbd",
          "timestamp": 1750962188929,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "999eb813-a70f-4e20-9253-0b36555a7589",
          "timestamp": 1750962188940,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1e09715-8b8e-4c7f-98ce-7d128485633a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "28cf1e95a816fdec8d8ffad4c6a94b64",
          "id": "dc3a3ed6-e841-4b3b-8dda-c457e92ded5d",
          "timestamp": 1750962188943,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1e09715-8b8e-4c7f-98ce-7d128485633a",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "edb065b4-e377-4431-9cc7-c4eb63ceec19"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Loan application submitted successfully",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "11acb1df1639fe9dd037c3b6bb71ddb5",
          "id": "341125fa-c337-4059-8a8c-f11a3d70fbe1",
          "timestamp": 1750962188956,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1e09715-8b8e-4c7f-98ce-7d128485633a",
          "scriptId": "5e0ca04c-6813-4214-84c2-f93501949b55",
          "execution": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Response contains loan ID and application reference",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "d5b6b5f1bd474437bcc9e8a643af799f",
          "id": "07c9c1f6-87f1-44e7-b3ea-a7f04f1d0ea4",
          "timestamp": 1750962188956,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1e09715-8b8e-4c7f-98ce-7d128485633a",
          "scriptId": "5e0ca04c-6813-4214-84c2-f93501949b55",
          "execution": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "AI assessment will be performed",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:5)",
          "checksum": "151f6c65cae2973b6fc71fd1da59ddc0",
          "id": "a341418d-7b82-4d6e-b8d9-e1279835c4ea",
          "timestamp": 1750962188957,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
          "name": "Submit Loan Application (Murabaha)",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Loan application submitted successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains loan ID and application reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.loanId).to.not.be.undefined;",
                  "    pm.expect(response.applicationReference).to.not.be.undefined;",
                  "    pm.globals.set('test_loan_id', response.loanId);",
                  "});",
                  "",
                  "pm.test('AI assessment will be performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                  "});"
                ],
                "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
              }
            }
          ]
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f51f860f-980f-4a38-94ae-3c3a9e736b3f",
          "length": 26,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e1e09715-8b8e-4c7f-98ce-7d128485633a",
          "scriptId": "5e0ca04c-6813-4214-84c2-f93501949b55",
          "execution": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "5f145676-3592-4509-afc6-3c628bfd4c96",
          "timestamp": 1750962189073,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "016b5f2c-0e96-4e0b-a82e-e58f4afcb15d",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "cbed9a58-a14b-4e12-b165-262abf0f9ce9",
          "timestamp": 1750962189081,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "016b5f2c-0e96-4e0b-a82e-e58f4afcb15d",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d040bc6e-5a81-49b2-a82b-f7e0fe7eee46"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "34f6e298ac526c6273b7444f5e752ab3",
          "id": "7b0f2775-8c21-4583-9e15-da5e351c3b65",
          "timestamp": 1750962189084,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
          "name": "Submit Personal Loan Application",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "016b5f2c-0e96-4e0b-a82e-e58f4afcb15d",
          "length": 26,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d040bc6e-5a81-49b2-a82b-f7e0fe7eee46",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "c68b9aa6-ecb6-4c65-8865-1f5c0eadb5b8"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "373b6482-b4a2-458a-98d2-cba7773a5fd0",
          "timestamp": 1750962189196,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "43f456e5-6617-4075-8da3-84b010a83631",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8db2ebb2-0849-4399-82ff-43ae4d75f719",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "ad44b420-893d-4845-9d5e-5c8ef1ba4be1",
          "timestamp": 1750962189202,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "43f456e5-6617-4075-8da3-84b010a83631",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8db2ebb2-0849-4399-82ff-43ae4d75f719",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "548dc6ae-6712-4e19-bd68-a8325fc64cd2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "8bf2f9305ff4221b5be22bb2ab735748",
          "id": "30c1a8ea-5e73-4110-8990-4b130327feab",
          "timestamp": 1750962189206,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "43f456e5-6617-4075-8da3-84b010a83631",
          "name": "Get Loan Details",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "includeAI",
                  "value": "true"
                },
                {
                  "key": "includeCompliance",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8db2ebb2-0849-4399-82ff-43ae4d75f719",
          "length": 26,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "548dc6ae-6712-4e19-bd68-a8325fc64cd2",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "a53f696d-29c4-4856-8c15-f78d8a97e549"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "29cc1955-72bc-456e-8df0-3c86d6af51f2",
          "timestamp": 1750962189318,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "1dbbd979-6952-4334-858d-460f0c875bef",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a628e609-8b7e-4ba2-a8a8-453da464013d",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "d012a227-97d9-4633-b1bb-7586463da470",
          "timestamp": 1750962189325,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1dbbd979-6952-4334-858d-460f0c875bef",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a628e609-8b7e-4ba2-a8a8-453da464013d",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebaaaf9a-08fd-43d9-81b4-3965cc484bed"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "11f57c1c029b30bdda4327cd87066909",
          "id": "80468d3a-64b6-4d3e-843a-90fc075fe8fc",
          "timestamp": 1750962189330,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1dbbd979-6952-4334-858d-460f0c875bef",
          "name": "Approve Loan",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "approve"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a628e609-8b7e-4ba2-a8a8-453da464013d",
          "length": 26,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ebaaaf9a-08fd-43d9-81b4-3965cc484bed",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "be3adbcc-4a5a-4a6a-9824-d629f2f0b1b1"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "d4661542-028e-40aa-bea1-546d444d8f0f",
          "timestamp": 1750962189441,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "582167f4-7937-4064-a741-3679c493acc2",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "fc9255e7-a5e4-4812-8eb5-82e6b276c8e1",
          "timestamp": 1750962189454,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "582167f4-7937-4064-a741-3679c493acc2",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "749cd7a9-4364-46b0-a576-414cce577abd"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "cd1ff77716ecd096656cd2187fb4a84b",
          "id": "23b43d1a-93d7-4f52-8863-48923a8a9199",
          "timestamp": 1750962189457,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
          "name": "Get Customer Loans",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                },
                {
                  "key": "status",
                  "value": "ACTIVE"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "fb084d27-e226-46d0-a819-0f95ab8c2501",
          "name": "üí∞ Loan Management",
          "item": [
            {
              "id": "5c46ebce-88ef-4e4a-9974-a350e3b2c15f",
              "name": "Submit Loan Application (Murabaha)",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 250000,\n  \"termInMonths\": 36,\n  \"loanType\": \"MURABAHA\",\n  \"purpose\": \"HOME_PURCHASE\",\n  \"collateralType\": \"REAL_ESTATE\",\n  \"additionalData\": {\n    \"propertyValue\": 500000,\n    \"downPayment\": 125000,\n    \"propertyLocation\": \"Dubai Marina\",\n    \"shariahCompliance\": true,\n    \"preferredCurrency\": \"AED\",\n    \"islamicBankingProduct\": \"MURABAHA_HOME_FINANCE\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e0ca04c-6813-4214-84c2-f93501949b55",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Loan application submitted successfully', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Response contains loan ID and application reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.loanId).to.not.be.undefined;",
                      "    pm.expect(response.applicationReference).to.not.be.undefined;",
                      "    pm.globals.set('test_loan_id', response.loanId);",
                      "});",
                      "",
                      "pm.test('AI assessment will be performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.nextSteps).to.include('AI risk assessment will be performed');",
                      "});"
                    ],
                    "_lastExecutionId": "a7cd4846-c37d-4308-bf4c-5c4865fa08ef"
                  }
                }
              ]
            },
            {
              "id": "5277f2a1-dbca-4e54-a392-62a2d47cc6d0",
              "name": "Submit Personal Loan Application",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 50000,\n  \"termInMonths\": 24,\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\",\n  \"additionalData\": {\n    \"monthlyIncome\": 15000,\n    \"existingDebts\": 5000,\n    \"educationInstitution\": \"American University of Dubai\",\n    \"courseType\": \"MBA\"\n  }\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "43f456e5-6617-4075-8da3-84b010a83631",
              "name": "Get Loan Details",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "includeAI",
                      "value": "true"
                    },
                    {
                      "key": "includeCompliance",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "1dbbd979-6952-4334-858d-460f0c875bef",
              "name": "Approve Loan",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "approve"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvedInterestRate\": 4.25,\n  \"approvedAmount\": 250000,\n  \"conditions\": [\n    \"Property insurance required\",\n    \"Monthly income verification\",\n    \"Shariah compliance certification\"\n  ],\n  \"approvalNotes\": \"Approved based on excellent credit score and sufficient income. Islamic banking product approved by Shariah board.\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3932fd6d-6f79-421f-8e54-f61a224f895c",
              "name": "Get Customer Loans",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "582167f4-7937-4064-a741-3679c493acc2",
          "length": 26,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "749cd7a9-4364-46b0-a576-414cce577abd",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "f2383d45-c248-4650-a9ad-55fee7e99fc9"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "cfe18aad-bd30-489f-b282-1b7cc075f716",
          "timestamp": 1750962189570,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "89fb9a8b-36cc-4795-a1c8-97e65f9fd70f",
          "timestamp": 1750962189586,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f8766b5-00fe-462c-9d7e-0f7be0628cc7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "663f3b5587d89fe7e648be2b6837242b",
          "id": "e1600673-247b-466c-92d7-f14d3d41380b",
          "timestamp": 1750962189591,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f8766b5-00fe-462c-9d7e-0f7be0628cc7",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "743f1aef-0a81-4b97-8f2e-8fd674e0a9ab"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Payment processed successfully",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "fe9c18d8cc2484eaa122d90a06afa141",
          "id": "cd47ba39-baa5-488a-b9fc-a9ae6c43edd3",
          "timestamp": 1750962189599,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f8766b5-00fe-462c-9d7e-0f7be0628cc7",
          "scriptId": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
          "execution": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Payment result contains transaction reference",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "f3f550e0e1571a4aa38f642ac6368b59",
          "id": "7d3cd369-8969-458d-ba6b-72b37156a369",
          "timestamp": 1750962189600,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f8766b5-00fe-462c-9d7e-0f7be0628cc7",
          "scriptId": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
          "execution": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "Fraud check was performed",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:10)",
          "checksum": "9e6a65a6ffc6930a14aff97327df086e",
          "id": "e5a8e32e-b023-4682-8208-92bbee3d1ef5",
          "timestamp": 1750962189600,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "9375b665-ff74-4414-9b28-84befdc37ade",
          "name": "Process Loan Payment",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Payment processed successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment result contains transaction reference', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.transactionReference).to.not.be.undefined;",
                  "});",
                  "",
                  "pm.test('Fraud check was performed', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                  "});"
                ],
                "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
              }
            }
          ]
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "2936d3d0-2a45-40e3-ae40-bd3e38d0448b",
          "length": 26,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1f8766b5-00fe-462c-9d7e-0f7be0628cc7",
          "scriptId": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
          "execution": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "220a49d9-ef77-46da-a145-b07f164c4064",
          "timestamp": 1750962189710,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "975418cb-3138-4e33-8c88-256e87a03665",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cde99328-ab3a-4250-b4fe-f4c63b481f30",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "c8bbea30-8d9c-4f3c-ad79-029bb6d07c5d",
          "timestamp": 1750962189716,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "975418cb-3138-4e33-8c88-256e87a03665",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cde99328-ab3a-4250-b4fe-f4c63b481f30",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "685d8134-c4ed-40e7-920c-869a7c1d100e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "87396de6893e5f332aa46e3643f83d69",
          "id": "c16a2d7d-a089-42eb-9ad1-059189d6cba2",
          "timestamp": 1750962189719,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "975418cb-3138-4e33-8c88-256e87a03665",
          "name": "Get Payment History",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "payments"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "20"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cde99328-ab3a-4250-b4fe-f4c63b481f30",
          "length": 26,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "685d8134-c4ed-40e7-920c-869a7c1d100e",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "91bc4018-1289-49e2-be92-1bece4085093"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "5d1017f0-b6d8-4643-988d-b079ee258268",
          "timestamp": 1750962189830,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fe4e4ba3-36aa-49be-b7af-56371303e8b8",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "c4de191a-64d0-4b2e-8d59-89c78b6acdba",
          "timestamp": 1750962189836,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fe4e4ba3-36aa-49be-b7af-56371303e8b8",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "54748e62-28b6-46fa-9ad4-f458fdca7cc8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "98d72950dec0a5c7a3bb0b99ca26db30",
          "id": "ae266b21-90e7-4962-a861-46e9a50fb3a3",
          "timestamp": 1750962189840,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
          "name": "Calculate Early Payment Options",
          "request": {
            "url": {
              "path": [
                "loans",
                "{{test_loan_id}}",
                "early-payment"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "3d118812-ad0e-41d3-a6a9-a2f015735817",
          "name": "üí≥ Payment Processing",
          "item": [
            {
              "id": "9375b665-ff74-4414-9b28-84befdc37ade",
              "name": "Process Loan Payment",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 8500,\n  \"paymentMethod\": \"BANK_TRANSFER\",\n  \"paymentReference\": \"PAY-{{$timestamp}}\",\n  \"paymentChannel\": \"MOBILE_APP\",\n  \"paymentDetails\": {\n    \"bankAccount\": \"AE07 0331 2345 6789 0123 456\",\n    \"beneficiaryName\": \"Ahmed Al-Mansouri\",\n    \"currency\": \"AED\",\n    \"description\": \"Monthly installment payment\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "11118664-0c25-4fbd-b30b-eb8e8ea3c53d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Payment processed successfully', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Payment result contains transaction reference', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.transactionReference).to.not.be.undefined;",
                      "});",
                      "",
                      "pm.test('Fraud check was performed', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.fraudCheckResult).to.not.be.undefined;",
                      "});"
                    ],
                    "_lastExecutionId": "d9659fc7-4686-4045-a689-0f9aeefecb0a"
                  }
                }
              ]
            },
            {
              "id": "975418cb-3138-4e33-8c88-256e87a03665",
              "name": "Get Payment History",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "payments"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "20"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "950470fa-a4ca-4e51-a4c6-f966076dbc1d",
              "name": "Calculate Early Payment Options",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "{{test_loan_id}}",
                    "early-payment"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fe4e4ba3-36aa-49be-b7af-56371303e8b8",
          "length": 26,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "54748e62-28b6-46fa-9ad4-f458fdca7cc8",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "8e7afd75-e39f-4244-be3a-c095ce018592"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "42878a94-84e5-4cf2-a571-d9fe111bad3c",
          "timestamp": 1750962189948,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "fa19c689-2a7b-4e3e-9cd7-63d71b839e45",
          "timestamp": 1750962189953,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fed573a5-a7d8-41af-a837-dd639f68b32b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "f5f648abade1d95151c53ff3f836badc",
          "id": "201907fa-fb35-448a-bb45-9fb0b3cde7ec",
          "timestamp": 1750962189957,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fed573a5-a7d8-41af-a837-dd639f68b32b",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "18f1568f-75b2-44bb-94b1-4ab81e3e9997"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Fraud analysis completed",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:13)",
          "checksum": "0e305c9945de62671b639f9bcf1e3ae6",
          "id": "75dd5c69-9eeb-4cc9-840d-fb42bae84b14",
          "timestamp": 1750962189967,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fed573a5-a7d8-41af-a837-dd639f68b32b",
          "scriptId": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
          "execution": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 1,
          "test": "Risk score provided",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:2:13)",
          "checksum": "2adaee530f7b7d8e1e02d61aa34a2d6d",
          "id": "d84f82da-cb87-4494-b9cb-a5f8fa7b5e39",
          "timestamp": 1750962189968,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fed573a5-a7d8-41af-a837-dd639f68b32b",
          "scriptId": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
          "execution": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
        }
      },
      {
        "error": {
          "name": "JSONError",
          "index": 2,
          "test": "AI model information included",
          "message": "\"undefined\" is not valid JSON",
          "stack": "JSONError: \"undefined\" is not valid JSON\n   at Object.eval sandbox-script.js:3:13)",
          "checksum": "0d7483586a47742d24651442cd2e938f",
          "id": "3bcb4d1e-cc99-4ec3-ba57-f220edfb654a",
          "timestamp": 1750962189968,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
          "name": "Perform Fraud Detection",
          "request": {
            "url": {
              "path": [
                "ai",
                "fraud",
                "analyze"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Fraud analysis completed', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Risk score provided', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.riskScore).to.be.a('number');",
                  "    pm.expect(response.riskScore).to.be.at.least(0);",
                  "    pm.expect(response.riskScore).to.be.at.most(100);",
                  "});",
                  "",
                  "pm.test('AI model information included', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.modelUsed).to.not.be.undefined;",
                  "    pm.expect(response.confidence).to.be.a('number');",
                  "});"
                ],
                "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
              }
            }
          ]
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e4b47ccd-4431-4711-a224-a0bd16bf3a69",
          "length": 26,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fed573a5-a7d8-41af-a837-dd639f68b32b",
          "scriptId": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
          "execution": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "14951f79-b447-415c-990a-80544cac7383",
          "timestamp": 1750962190078,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "c91cd447-227c-4ce5-921e-968a46557b75",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f5d5cf93-a32c-4606-97f1-c574fb6cad3e",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "23a7823c-2cf0-42fb-9842-60b09689486c",
          "timestamp": 1750962190084,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c91cd447-227c-4ce5-921e-968a46557b75",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f5d5cf93-a32c-4606-97f1-c574fb6cad3e",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a2ae2702-ab34-47f9-976b-236f692a727f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:14)",
          "checksum": "796eb771b2ee1140e92b81fc5e3a6fef",
          "id": "2bb7ec9c-b432-40af-aed6-fd572662889c",
          "timestamp": 1750962190087,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c91cd447-227c-4ce5-921e-968a46557b75",
          "name": "Generate Loan Recommendations",
          "request": {
            "url": {
              "path": [
                "ai",
                "recommendations",
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f5d5cf93-a32c-4606-97f1-c574fb6cad3e",
          "length": 26,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a2ae2702-ab34-47f9-976b-236f692a727f",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "e639c815-2148-427b-9ee3-612d32bd4dc4"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "663d4d6f-fc03-4878-bbb6-56bea7727478",
          "timestamp": 1750962190204,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "011099cd-e503-4cf8-9811-a0688e172656",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "31912056-cddf-470f-845f-d8e9d0644090",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "9614ac2f-c199-4a47-8290-11ed96d1ad1c",
          "timestamp": 1750962190215,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "011099cd-e503-4cf8-9811-a0688e172656",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "31912056-cddf-470f-845f-d8e9d0644090",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7bd6620-df32-4b0a-a362-3a374b914ff4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:15)",
          "checksum": "031eececd5abb418e943ba05878af314",
          "id": "2bbcd09a-bc02-419e-a172-eb4f4a6ade20",
          "timestamp": 1750962190219,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "011099cd-e503-4cf8-9811-a0688e172656",
          "name": "RAG Query - Banking Knowledge",
          "request": {
            "url": {
              "path": [
                "ai",
                "rag",
                "query"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "DPoP",
                "value": "{{dpop_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              },
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "31912056-cddf-470f-845f-d8e9d0644090",
          "length": 26,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d7bd6620-df32-4b0a-a362-3a374b914ff4",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "323db243-c34a-4614-a3dd-5b09b16ff201"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "cb24022a-6a1e-43cf-9098-f43ab87c4405",
          "timestamp": 1750962190331,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20454d3e-74a7-49c9-af01-5b820e331c27",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "291e8c37-e679-415e-a229-2b11d1ee2bbd",
          "timestamp": 1750962190337,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20454d3e-74a7-49c9-af01-5b820e331c27",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d6c2a2d-6dd5-4539-9ed3-f367a3835647"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "0746b63b9e3bb57f522d06a9b0b420a2",
          "id": "fd0a304c-08ad-412a-9848-cb3c7b8feca4",
          "timestamp": 1750962190340,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
          "name": "AI Health Check",
          "request": {
            "url": {
              "path": [
                "ai",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "8d8cb0ab-d735-44ff-92f1-d02b9b6c3fad",
          "name": "ü§ñ AI Services",
          "item": [
            {
              "id": "88b5f685-94b6-464f-ba92-590c77fdfc23",
              "name": "Perform Fraud Detection",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "fraud",
                    "analyze"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"transactionId\": \"TXN-{{$timestamp}}\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"amount\": 10000,\n  \"merchantId\": \"MERCHANT-001\",\n  \"location\": \"Dubai, UAE\",\n  \"timestamp\": \"{{request_timestamp}}\",\n  \"aiModel\": \"enhanced-fraud-detection\",\n  \"transactionDetails\": {\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"currency\": \"AED\",\n    \"deviceFingerprint\": \"device-{{$timestamp}}\",\n    \"ipAddress\": \"192.168.1.100\",\n    \"userAgent\": \"BankingApp/2.1.0 (iOS 16.0)\"\n  }\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4a6f9906-eb76-4d1c-af28-1dcd54fbb9eb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Fraud analysis completed', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Risk score provided', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.riskScore).to.be.a('number');",
                      "    pm.expect(response.riskScore).to.be.at.least(0);",
                      "    pm.expect(response.riskScore).to.be.at.most(100);",
                      "});",
                      "",
                      "pm.test('AI model information included', function () {",
                      "    const response = pm.response.json();",
                      "    pm.expect(response.modelUsed).to.not.be.undefined;",
                      "    pm.expect(response.confidence).to.be.a('number');",
                      "});"
                    ],
                    "_lastExecutionId": "5a00c76a-0731-41c1-ba8e-68dfdf5a4fb0"
                  }
                }
              ]
            },
            {
              "id": "c91cd447-227c-4ce5-921e-968a46557b75",
              "name": "Generate Loan Recommendations",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "recommendations",
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "011099cd-e503-4cf8-9811-a0688e172656",
              "name": "RAG Query - Banking Knowledge",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "rag",
                    "query"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "DPoP",
                    "value": "{{dpop_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"query\": \"ŸÖÿß ŸáŸä ŸÖÿ™ÿ∑ŸÑÿ®ÿßÿ™ ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ ŸÇÿ±ÿ∂ ÿßŸÑŸÖÿ±ÿßÿ®ÿ≠ÿ© ÿßŸÑÿπŸÇÿßÿ±Ÿäÿü\",\n  \"customerId\": \"{{test_customer_id}}\",\n  \"context\": \"islamic_banking_inquiry\",\n  \"language\": \"ar\",\n  \"includeShariahCompliance\": true\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "3f78356d-2d6c-49ab-a935-6aefe920de04",
              "name": "AI Health Check",
              "request": {
                "url": {
                  "path": [
                    "ai",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20454d3e-74a7-49c9-af01-5b820e331c27",
          "length": 26,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d6c2a2d-6dd5-4539-9ed3-f367a3835647",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "ebb2ccad-03db-4bc6-872a-0e5cc833b069"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "b91fc3c2-1ecc-41e1-9102-a030e489e5eb",
          "timestamp": 1750962190453,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dc5b5ead-e0bc-4aed-a767-7870911a6466",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "6f9a3a32-e763-452f-bdec-8b532775b4be",
          "timestamp": 1750962190460,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dc5b5ead-e0bc-4aed-a767-7870911a6466",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "85908808-9724-4923-a737-4c95cf6d5f44"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "86027090360beb090c90fb943346e183",
          "id": "e97a8d0b-fd2c-4c83-ba48-92d7dbbc89b9",
          "timestamp": 1750962190464,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
          "name": "Validate Berlin Group Account Structure",
          "request": {
            "url": {
              "path": [
                "accounts",
                "validate-berlin-group"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "dc5b5ead-e0bc-4aed-a767-7870911a6466",
          "length": 26,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "85908808-9724-4923-a737-4c95cf6d5f44",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "dd3cfe31-3bc1-469b-aad6-bab5522da7c2"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "cc3e894e-1906-436d-a77c-9cbc5e2a6345",
          "timestamp": 1750962190575,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7ef68121-b55d-47dd-93e7-61c4fca1d7b5",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "94498249-8603-4979-91ff-dce1e1b823ae",
          "timestamp": 1750962190582,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7ef68121-b55d-47dd-93e7-61c4fca1d7b5",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3a08d1f-bc30-4ccd-98a1-943b218dd918"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "3371355cc28f5b3387978dc950e51fd7",
          "id": "6eab8689-f8cb-4bf2-a594-dffe362666bd",
          "timestamp": 1750962190586,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
          "name": "Validate BIAN Service Domain",
          "request": {
            "url": {
              "path": [
                "bian",
                "validate-service-domain"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "133fc254-b9a5-41f7-abed-488cde857fb2",
          "name": "‚öñÔ∏è Compliance & Validation",
          "item": [
            {
              "id": "5c0e5235-d287-4b1d-b49d-be16f44e4847",
              "name": "Validate Berlin Group Account Structure",
              "request": {
                "url": {
                  "path": [
                    "accounts",
                    "validate-berlin-group"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"iban\": \"AE07 0331 2345 6789 0123 456\",\n  \"currency\": \"AED\",\n  \"accountType\": \"Cacc\",\n  \"ownerName\": \"Ahmed Al-Mansouri\",\n  \"bankCode\": \"EBILAEAD\",\n  \"balances\": [\n    {\n      \"balanceAmount\": {\n        \"amount\": \"150000.00\",\n        \"currency\": \"AED\"\n      },\n      \"balanceType\": \"closingBooked\"\n    }\n  ]\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "73dcf717-7872-47b2-81b2-fc6652ea9c37",
              "name": "Validate BIAN Service Domain",
              "request": {
                "url": {
                  "path": [
                    "bian",
                    "validate-service-domain"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceDomainReference\": \"CR-ConsumerLoan-001\",\n  \"functionalPattern\": \"Fulfill\",\n  \"businessArea\": \"Customer Products & Services\",\n  \"serviceDomain\": \"Consumer Loan\",\n  \"serviceOperation\": \"Loan Origination\",\n  \"assetType\": \"Islamic Banking Product\",\n  \"partyReference\": \"{{test_customer_id}}\"\n}"
                }
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7ef68121-b55d-47dd-93e7-61c4fca1d7b5",
          "length": 26,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3a08d1f-bc30-4ccd-98a1-943b218dd918",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "dadb7ba5-2370-4f8a-bb6a-b9a21acf031c"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "9d36d8ec-0487-41a4-ac5c-e5acf7435451",
          "timestamp": 1750962190696,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4a1e127f-8356-43fa-bcef-1de7c1579a9b",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "96542711-dfdd-4f0f-b862-ff6035ec9862",
          "timestamp": 1750962190704,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4a1e127f-8356-43fa-bcef-1de7c1579a9b",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d7b25dc-910f-437c-81ec-e0b76544dfa6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "909410dc0bb719c75b3b3cdc96e23548",
          "id": "eb26344a-39f1-450a-80c4-d6fdb6821a99",
          "timestamp": 1750962190708,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
          "name": "Application Health Check",
          "request": {
            "url": {
              "path": [
                "actuator",
                "health"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4a1e127f-8356-43fa-bcef-1de7c1579a9b",
          "length": 26,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3d7b25dc-910f-437c-81ec-e0b76544dfa6",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "b6920499-61f3-4a8d-ae45-34c15b7017f9"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "ecb28d44-2dda-4bd0-84c7-a369e26926ac",
          "timestamp": 1750962190820,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7a32d7ec-14f3-4e7b-9006-1a6beb351325",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "cd2b0569-ea00-4f1a-9299-e4fa6e2f1046",
          "timestamp": 1750962190827,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7a32d7ec-14f3-4e7b-9006-1a6beb351325",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "015814d7-d08b-49a6-95de-6fcffa2faf6a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "00acb12c3bdcf6f72b8e98d073f17d4f",
          "id": "eb530315-dcc6-407a-b088-a0364a9dcc55",
          "timestamp": 1750962190832,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
          "name": "Prometheus Metrics",
          "request": {
            "url": {
              "path": [
                "actuator",
                "prometheus"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7a32d7ec-14f3-4e7b-9006-1a6beb351325",
          "length": 26,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "015814d7-d08b-49a6-95de-6fcffa2faf6a",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "9e6ca1d0-6503-44d1-9198-f96c46f55493"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "03d030c0-3046-4046-b8af-98cdd821cfc3",
          "timestamp": 1750962190945,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9bcd78e8-7994-4965-847f-5b2106fb90b7",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "abb9ec75-6f46-46c9-8a92-b2c92a7cf193",
          "timestamp": 1750962190953,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9bcd78e8-7994-4965-847f-5b2106fb90b7",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eedbd822-46bd-40d1-b1e7-3763a7a3de77"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:21)",
          "checksum": "35f02c091395476dbc24dc60929ad860",
          "id": "558a3b87-7d6f-4c5d-8ac3-65598c392d48",
          "timestamp": 1750962190956,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
          "name": "Circuit Breaker Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "circuitbreakers"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "9bcd78e8-7994-4965-847f-5b2106fb90b7",
          "length": 26,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "eedbd822-46bd-40d1-b1e7-3763a7a3de77",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "0833deed-e341-47af-9445-8177bfc50977"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "78eccc00-3812-4064-a734-9845806ce71c",
          "timestamp": 1750962191065,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ef6cd6d1-0891-4bbc-ba01-456ca9b75c93",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "b52d92ef-c4e3-489c-8d00-5812a3bb7211",
          "timestamp": 1750962191071,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ef6cd6d1-0891-4bbc-ba01-456ca9b75c93",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eda3973c-61fc-434d-918f-53daed318c8b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:22)",
          "checksum": "fbd9daff0534265451763c25cdcbe68a",
          "id": "9acac9b4-fed0-4e96-8047-db45780e7b1a",
          "timestamp": 1750962191075,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 22,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
          "name": "Rate Limiting Status",
          "request": {
            "url": {
              "path": [
                "actuator",
                "ratelimit"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "b410837b-aa86-45f7-8aba-f5de94ee1576",
          "name": "üìä Monitoring & Health",
          "item": [
            {
              "id": "ddfd8e6b-ef7f-4db9-977a-10492b2005d3",
              "name": "Application Health Check",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "health"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "a8be74af-fbaa-4f34-9c4a-e9156d676123",
              "name": "Prometheus Metrics",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "prometheus"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "e9e77e1c-0ac2-44d2-a193-415ab9ee89f4",
              "name": "Circuit Breaker Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "circuitbreakers"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "0eef72cf-5393-4d9b-83f4-b74c0cb20c48",
              "name": "Rate Limiting Status",
              "request": {
                "url": {
                  "path": [
                    "actuator",
                    "ratelimit"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ef6cd6d1-0891-4bbc-ba01-456ca9b75c93",
          "length": 26,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eda3973c-61fc-434d-918f-53daed318c8b",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "24ee9646-37ea-49b0-9dcf-12554f1df910"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "514622d4-529a-41ee-a060-8d9194d7a9c2",
          "timestamp": 1750962191185,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c299175a-fd98-43e6-a41f-9693e62566d6",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "d6d6f0ea-440b-4069-a96b-e599e1a277e7",
          "timestamp": 1750962191191,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c299175a-fd98-43e6-a41f-9693e62566d6",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aacd29e6-a2da-4093-b9e6-53846b034721"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:23)",
          "checksum": "65d426a75506919c33a802f64ae01371",
          "id": "8c4ab0f0-21db-41de-a6a8-81a22944ad00",
          "timestamp": 1750962191194,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 23,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
          "name": "Concurrent Loan Applications",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "load-test-{{$timestamp}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
            }
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "c299175a-fd98-43e6-a41f-9693e62566d6",
          "length": 26,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aacd29e6-a2da-4093-b9e6-53846b034721",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "ec583164-7456-49c6-848d-60aebed9750e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "b45c1fd9-4e92-4a83-a9e6-2efef333d039",
          "timestamp": 1750962191307,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "09e112e6-383b-4cf5-a1d2-a4fb8825a2e9",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "cc6878c8-9881-4089-824b-f292411f3d93",
          "timestamp": 1750962191314,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "09e112e6-383b-4cf5-a1d2-a4fb8825a2e9",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f89c4717-dc56-4d29-a9db-c00798aa7139"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:24)",
          "checksum": "c6fa0635e964349296d3a07fbefdb564",
          "id": "73c3112b-f6d6-402c-a756-46f727319b48",
          "timestamp": 1750962191319,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 24,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
          "name": "Rate Limit Test - Rapid Requests",
          "request": {
            "url": {
              "path": [
                "loans"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [
                {
                  "key": "customerId",
                  "value": "{{test_customer_id}}"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "rate-limit-test-{{$timestamp}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "7751c730-b49e-4d33-965d-8d0db1aa09cd",
          "name": "üß™ Load Testing & Performance",
          "item": [
            {
              "id": "dc888e72-b6e4-46b1-91b6-b688906f146f",
              "name": "Concurrent Loan Applications",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "load-test-{{$timestamp}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerId\": \"load-test-customer-{{$randomInt}}\",\n  \"amount\": {{$randomInt}},\n  \"termInMonths\": {{$randomInt}},\n  \"loanType\": \"PERSONAL\",\n  \"purpose\": \"EDUCATION\"\n}"
                }
              },
              "response": [],
              "event": []
            },
            {
              "id": "d3be92d0-a8dd-4bd8-8d32-47afb29f5b58",
              "name": "Rate Limit Test - Rapid Requests",
              "request": {
                "url": {
                  "path": [
                    "loans"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [
                    {
                      "key": "customerId",
                      "value": "{{test_customer_id}}"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "rate-limit-test-{{$timestamp}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "09e112e6-383b-4cf5-a1d2-a4fb8825a2e9",
          "length": 26,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f89c4717-dc56-4d29-a9db-c00798aa7139",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "4a640847-21e4-41fc-817c-7098185b23b3"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "9a728515-3e50-44a2-9a50-0dd341f4934f",
          "timestamp": 1750962191431,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "728957d2-d998-40d4-987f-7067b83b63f6",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "728957d2-d998-40d4-987f-7067b83b63f6",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "32a1303e-dd2d-42ab-92a0-5a3e2f6749dc",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "663cf536-7795-49f4-af58-8a76f6dfd3a7",
          "timestamp": 1750962191437,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "728957d2-d998-40d4-987f-7067b83b63f6",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "728957d2-d998-40d4-987f-7067b83b63f6",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "32a1303e-dd2d-42ab-92a0-5a3e2f6749dc",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7979915e-db22-412c-8853-08ab2ce82b22"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:25)",
          "checksum": "027842f5771f4c69bb0ff67797d08121",
          "id": "523b2508-6fb8-40f2-825c-a62a0a1c310b",
          "timestamp": 1750962191442,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 25,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "728957d2-d998-40d4-987f-7067b83b63f6",
          "name": "Arabic Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "ar-AE"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "728957d2-d998-40d4-987f-7067b83b63f6",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "32a1303e-dd2d-42ab-92a0-5a3e2f6749dc",
          "length": 26,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7979915e-db22-412c-8853-08ab2ce82b22",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "c61c2a52-96fd-488c-834d-1468980c6d1a"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "TypeError",
          "message": "pm.variables.replaceIn is not a function",
          "checksum": "de9af7b942b57877848f5d5b7c8e14c0",
          "id": "28d266cd-2c83-4ea0-a5b4-06a144da8b7d",
          "timestamp": 1750962191555,
          "stacktrace": []
        },
        "at": "prerequest-script",
        "source": {
          "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "728957d2-d998-40d4-987f-7067b83b63f6",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8476de41-1700-4a21-97fc-58663847eb06",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "scriptId": "9fe9a9fc-b901-4c32-8b0d-db3219867fe8"
        }
      },
      {
        "error": {
          "code": "ERR_INVALID_IP_ADDRESS",
          "name": "TypeError",
          "message": "Invalid IP address: undefined",
          "stack": "TypeError [ERR_INVALID_IP_ADDRESS]: Invalid IP address: undefined\n    at emitLookup (node:net:1494:17)\n    at /usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:141:31\n    at Socket.done (/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js:95:21)\n    at Object.onceWrapper (node:events:633:26)\n    at Socket.emit (node:events:518:28)\n    at emitErrorNT (node:internal/streams/destroy:170:8)\n    at emitErrorCloseNT (node:internal/streams/destroy:129:3)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)",
          "checksum": "2e7b0ac64afa5f8fe8623406c05e4d3f",
          "id": "48f61780-c2de-4df4-b248-71d9e5d62abe",
          "timestamp": 1750962191561,
          "stacktrace": [
            {
              "fileName": "node:net",
              "lineNumber": 1494,
              "functionName": "emitLookup",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 17,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 141,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 31,
              "native": false
            },
            {
              "fileName": "/usr/local/lib/node_modules/newman/node_modules/postman-runtime/lib/requester/core.js",
              "lineNumber": 95,
              "functionName": "Socket.done",
              "typeName": "Socket",
              "methodName": "done",
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 633,
              "functionName": "Object.onceWrapper",
              "typeName": "Object",
              "methodName": "onceWrapper",
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": "node:events",
              "lineNumber": 518,
              "functionName": "Socket.emit",
              "typeName": "Socket",
              "methodName": "emit",
              "columnNumber": 28,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 170,
              "functionName": "emitErrorNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "node:internal/streams/destroy",
              "lineNumber": 129,
              "functionName": "emitErrorCloseNT",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 3,
              "native": false
            },
            {
              "fileName": "node:internal/process/task_queues",
              "lineNumber": 90,
              "functionName": "process.processTicksAndRejections",
              "typeName": "process",
              "methodName": "processTicksAndRejections",
              "columnNumber": 21,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "728957d2-d998-40d4-987f-7067b83b63f6",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8476de41-1700-4a21-97fc-58663847eb06",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b0bdf97-4b6b-4ed5-a9d4-a4f38e83b6ea"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is acceptable",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:1:26)",
          "checksum": "d0e4e3a6e503766c57f82d03550d9b12",
          "id": "6beb74d4-366c-4e27-bea1-3763aef914ff",
          "timestamp": 1750962191565,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
          "name": "French Error Messages",
          "request": {
            "url": {
              "path": [
                "loans",
                "invalid-loan-id"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept-Language",
                "value": "fr-FR"
              },
              {
                "key": "Authorization",
                "value": "DPoP {{access_token}}"
              },
              {
                "key": "X-Correlation-ID",
                "value": "{{correlation_id}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": []
        },
        "parent": {
          "id": "44cf27c1-d6e5-4d41-9d35-5245cc02d61d",
          "name": "üåê Multi-Language Support",
          "item": [
            {
              "id": "728957d2-d998-40d4-987f-7067b83b63f6",
              "name": "Arabic Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "ar-AE"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            },
            {
              "id": "68cfcca9-39f0-40f1-bdef-f49c62ec24c2",
              "name": "French Error Messages",
              "request": {
                "url": {
                  "path": [
                    "loans",
                    "invalid-loan-id"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept-Language",
                    "value": "fr-FR"
                  },
                  {
                    "key": "Authorization",
                    "value": "DPoP {{access_token}}"
                  },
                  {
                    "key": "X-Correlation-ID",
                    "value": "{{correlation_id}}"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8476de41-1700-4a21-97fc-58663847eb06",
          "length": 26,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b0bdf97-4b6b-4ed5-a9d4-a4f38e83b6ea",
          "scriptId": "5e61f146-0e84-4af9-915a-be677b69951d",
          "execution": "0ffcdc00-62b4-4c51-8a36-778c6e957439"
        }
      }
    ],
    "error": null
  }
}