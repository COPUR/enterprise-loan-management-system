# Customer Service Configuration
server:
  port: ${CUSTOMER_SERVICE_PORT:8081}
  servlet:
    context-path: /customer-service

spring:
  application:
    name: customer-service
  
  # Database Configuration - Customer Service DB
  datasource:
    url: ${CUSTOMER_DB_URL:jdbc:postgresql://localhost:5432/customer_db}
    username: ${CUSTOMER_DB_USERNAME:customer_user}
    password: ${CUSTOMER_DB_PASSWORD:customer_pass}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:validate}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        
  # Kafka Configuration for Events
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: customer-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.loanmanagement.*"

# API Documentation
springdoc:
  api-docs:
    path: /customer-service/v3/api-docs
  swagger-ui:
    path: /customer-service/swagger-ui.html

# Eureka Client Configuration
eureka:
  client:
    enabled: ${EUREKA_ENABLED:false}
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    
# Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000

# Management Endpoints
management:
  endpoints:
    web:
      base-path: /customer-service/actuator
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true