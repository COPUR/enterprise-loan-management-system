# Java 21 Virtual Threads Configuration for Enterprise Banking System
# Optimized for high-throughput banking operations and regulatory compliance

# =====================================================
# Virtual Threads Configuration
# =====================================================
banking.virtualthreads.enabled=true
banking.virtualthreads.loan-processing-pool-size=1000
banking.virtualthreads.payment-processing-pool-size=2000
banking.virtualthreads.risk-assessment-pool-size=500
banking.virtualthreads.compliance-check-pool-size=300
banking.virtualthreads.audit-processing-pool-size=1000

# Spring Boot Virtual Threads Support
spring.threads.virtual.enabled=true

# =====================================================
# JVM Virtual Threads Tuning
# =====================================================
# Virtual Thread Scheduler Configuration
jdk.virtualThreadScheduler.parallelism=100
jdk.virtualThreadScheduler.maxPoolSize=1000

# Virtual Thread Pinning Detection
jdk.tracePinnedThreads=true

# =====================================================
# Banking-Specific Performance Tuning
# =====================================================

# Loan Processing Optimization
banking.loan.processing.batch-size=100
banking.loan.processing.timeout-seconds=30
banking.loan.processing.concurrent-limit=1000

# Payment Processing Configuration
banking.payment.processing.batch-size=500
banking.payment.processing.timeout-seconds=10
banking.payment.processing.concurrent-limit=2000
banking.payment.processing.retry-attempts=3

# Risk Assessment Settings
banking.risk.assessment.concurrent-models=10
banking.risk.assessment.calculation-timeout=15
banking.risk.assessment.cache-enabled=true

# Compliance Check Configuration
banking.compliance.pci-dss.enabled=true
banking.compliance.gdpr.enabled=true
banking.compliance.sox.enabled=true
banking.compliance.fapi.enabled=true
banking.compliance.concurrent-checks=300

# Fraud Detection Settings
banking.fraud.detection.real-time-enabled=true
banking.fraud.detection.concurrent-scans=200
banking.fraud.detection.alert-threshold=0.7

# =====================================================
# Database Connection Pool Optimization for Virtual Threads
# =====================================================
spring.datasource.hikari.maximum-pool-size=100
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# =====================================================
# Redis Configuration for Virtual Threads
# =====================================================
spring.redis.lettuce.pool.max-active=200
spring.redis.lettuce.pool.max-idle=50
spring.redis.lettuce.pool.min-idle=10
spring.redis.timeout=2000ms
spring.redis.connect-timeout=2000ms

# =====================================================
# Kafka Configuration for High-Throughput Processing
# =====================================================
spring.kafka.consumer.max-poll-records=500
spring.kafka.consumer.fetch-max-wait=500ms
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.properties.max.partition.fetch.bytes=1048576

spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.retries=3

# =====================================================
# Actuator and Monitoring for Virtual Threads
# =====================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus,virtualthreads
management.endpoint.health.show-details=always

# Custom Virtual Threads Metrics
management.metrics.virtualthreads.enabled=true
management.metrics.virtualthreads.percentiles=0.50,0.95,0.99
management.metrics.virtualthreads.percentiles-histogram=true

# =====================================================
# Security Configuration for Banking Environment
# =====================================================
# TLS Configuration
server.ssl.enabled=true
server.ssl.protocol=TLSv1.3
server.ssl.enabled-protocols=TLSv1.3
server.ssl.ciphers=TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# =====================================================
# Logging Configuration for Virtual Threads
# =====================================================
logging.level.com.loanmanagement=INFO
logging.level.org.springframework.scheduling=DEBUG
logging.level.java.util.concurrent=DEBUG

# Virtual Threads Specific Logging
logging.level.jdk.internal.misc.VirtualThread=DEBUG

# Banking Audit Logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId:-},%X{spanId:-}] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{traceId:-},%X{spanId:-}] %-5level %logger{36} - %msg%n

# =====================================================
# Circuit Breaker Configuration for Virtual Threads
# =====================================================
resilience4j.circuitbreaker.instances.loanProcessing.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.loanProcessing.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.loanProcessing.sliding-window-size=10
resilience4j.circuitbreaker.instances.loanProcessing.minimum-number-of-calls=5

resilience4j.circuitbreaker.instances.paymentProcessing.failure-rate-threshold=30
resilience4j.circuitbreaker.instances.paymentProcessing.wait-duration-in-open-state=20s
resilience4j.circuitbreaker.instances.paymentProcessing.sliding-window-size=15
resilience4j.circuitbreaker.instances.paymentProcessing.minimum-number-of-calls=10

# =====================================================
# Rate Limiting for Virtual Threads
# =====================================================
resilience4j.ratelimiter.instances.loanApplications.limit-for-period=1000
resilience4j.ratelimiter.instances.loanApplications.limit-refresh-period=1m
resilience4j.ratelimiter.instances.loanApplications.timeout-duration=5s

resilience4j.ratelimiter.instances.paymentRequests.limit-for-period=5000
resilience4j.ratelimiter.instances.paymentRequests.limit-refresh-period=1m
resilience4j.ratelimiter.instances.paymentRequests.timeout-duration=3s

# =====================================================
# Banking Business Rules Configuration
# =====================================================
banking.business-rules.loan.max-amount=1000000
banking.business-rules.loan.min-credit-score=650
banking.business-rules.loan.max-debt-to-income=0.43
banking.business-rules.payment.daily-limit=50000
banking.business-rules.payment.monthly-limit=500000

# =====================================================
# Regulatory Compliance Configuration
# =====================================================
banking.compliance.audit.enabled=true
banking.compliance.audit.batch-size=1000
banking.compliance.audit.retention-days=2555  # 7 years
banking.compliance.encryption.algorithm=AES-256-GCM
banking.compliance.data-masking.enabled=true

# =====================================================
# Performance Monitoring
# =====================================================
banking.monitoring.performance.enabled=true
banking.monitoring.performance.threshold-ms=1000
banking.monitoring.performance.slow-query-threshold-ms=500
banking.monitoring.alerts.enabled=true
banking.monitoring.alerts.email-recipients=devops@bank.com,security@bank.com