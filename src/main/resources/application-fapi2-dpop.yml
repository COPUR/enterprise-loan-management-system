server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  ssl:
    enabled: ${SERVER_SSL_ENABLED:false}
    key-store: ${SERVER_SSL_KEY_STORE:}
    key-store-password: ${SERVER_SSL_KEY_STORE_PASSWORD:}
    key-store-type: ${SERVER_SSL_KEY_STORE_TYPE:PKCS12}

spring:
  application:
    name: enterprise-loan-management-system-fapi2
  
  # Database Configuration - PostgreSQL Enterprise
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5434/banking_fapi2}
    username: ${DATABASE_USERNAME:banking_fapi2}
    password: ${DATABASE_PASSWORD:fapi2_banking_pass_2024}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
      pool-name: FAPI2BankingHikariCP
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        order_inserts: true
        order_updates: true
        batch_size: 25
        fetch_size: 150
        max_fetch_depth: 3
        default_batch_fetch_size: 16
        generate_statistics: false
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.redis.RedisRegionFactory
  
  # Redis Configuration for DPoP JTI and Nonce Storage
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6381}
      database: ${REDIS_DATABASE:1}  # Separate database for FAPI2
      timeout: ${REDIS_TIMEOUT:5000}
      password: ${REDIS_PASSWORD:}
      lettuce:
        pool:
          max-active: 50  # Increased for DPoP operations
          max-idle: 20
          min-idle: 10
          max-wait: 5000ms
        shutdown-timeout: 100ms
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000 # 5 minutes for DPoP
      cache-null-values: false
      use-key-prefix: true
      key-prefix: "fapi2:banking:"
  
  # Enhanced Security Configuration - FAPI 2.0 with DPoP
  security:
    oauth2:
      resourceserver:
        jwt:
          # Keycloak with FAPI 2.0 + DPoP support
          issuer-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://localhost:8090/realms/banking-fapi2}
          jwk-set-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/certs}
          # Support multiple algorithms for DPoP
          jws-algorithms: ${JWT_JWS_ALGORITHMS:PS256,RS256,ES256}
      client:
        registration:
          # Main banking client - enterprise-banking-app
          enterprise-banking-app:
            client-id: ${OAUTH2_CLIENT_ENTERPRISE_ID:enterprise-banking-app}
            client-secret: ${OAUTH2_CLIENT_ENTERPRISE_SECRET:}  # No secret for public client with private_key_jwt
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH2_CLIENT_ENTERPRISE_REDIRECT:https://banking.example.com/callback}
            scope: openid,profile,banking-scope,banking-loans,banking-payments
            client-name: "Enterprise Banking Application"
          # Admin client - enterprise-banking-admin  
          enterprise-banking-admin:
            client-id: ${OAUTH2_CLIENT_ADMIN_ID:enterprise-banking-admin}
            client-secret: ${OAUTH2_CLIENT_ADMIN_SECRET:}
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            redirect-uri: ${OAUTH2_CLIENT_ADMIN_REDIRECT:https://admin.banking.example.com/callback}
            scope: openid,profile,admin,banking-scope,banking-loans,banking-payments,audit
            client-name: "Enterprise Banking Admin"
        provider:
          keycloak:
            authorization-uri: ${OAUTH2_PROVIDER_KEYCLOAK_AUTH_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/auth}
            token-uri: ${OAUTH2_PROVIDER_KEYCLOAK_TOKEN_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/token}
            user-info-uri: ${OAUTH2_PROVIDER_KEYCLOAK_USER_INFO_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/userinfo}
            jwk-set-uri: ${OAUTH2_PROVIDER_KEYCLOAK_JWK_SET_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/certs}
            user-name-attribute: preferred_username
            # FAPI 2.0 specific endpoints
            par-uri: ${OAUTH2_PROVIDER_KEYCLOAK_PAR_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/ext/par}
            device-authorization-uri: ${OAUTH2_PROVIDER_KEYCLOAK_DEVICE_AUTH_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/auth/device}

# FAPI 2.0 + DPoP Configuration
fapi:
  version: "2.0"
  enabled: true
  security-profile: advanced
  # FAPI-specific headers validation
  headers:
    interaction-id:
      required: true
      header-name: "X-FAPI-Interaction-ID"
    auth-date:
      required: true
      header-name: "X-FAPI-Auth-Date"
    customer-ip:
      required: true
      header-name: "X-FAPI-Customer-IP-Address"
  # Rate limiting per client
  rate-limiting:
    enabled: true
    default-requests-per-minute: 100
    burst-capacity: 20
  # Request validation
  request-validation:
    enabled: true
    max-request-size: 1048576  # 1MB
    require-https: ${FAPI_REQUIRE_HTTPS:true}

# DPoP Configuration
dpop:
  enabled: ${DPOP_ENABLED:true}
  # Proof validation settings
  proof:
    expiration-time: ${DPOP_PROOF_EXPIRATION:60}  # seconds
    clock-skew-tolerance: ${DPOP_CLOCK_SKEW:30}   # seconds
    require-access-token-hash: ${DPOP_REQUIRE_ATH:true}
  # JTI replay prevention
  jti:
    cache-size: ${DPOP_JTI_CACHE_SIZE:10000}
    cleanup-interval: ${DPOP_JTI_CLEANUP_INTERVAL:300}  # seconds
    cache-prefix: "dpop:jti:"
  # Nonce support
  nonce:
    enabled: ${DPOP_NONCE_ENABLED:true}
    expiration-time: ${DPOP_NONCE_EXPIRATION:300}  # seconds
    cache-prefix: "dpop:nonce:"
    required-for-clients: ${DPOP_NONCE_REQUIRED_CLIENTS:}  # comma-separated client IDs
  # Key validation
  key-validation:
    minimum-key-size: ${DPOP_MIN_KEY_SIZE:256}
    allowed-algorithms: ${DPOP_ALLOWED_ALGORITHMS:ES256,ES384,ES512,RS256,RS384,RS512,PS256,PS384,PS512}
    allowed-key-types: ${DPOP_ALLOWED_KEY_TYPES:EC,RSA}
    allowed-curves: ${DPOP_ALLOWED_CURVES:P-256,P-384,P-521}
  # Monitoring and metrics
  metrics:
    enabled: ${DPOP_METRICS_ENABLED:true}
    include-detailed-metrics: ${DPOP_DETAILED_METRICS:true}
    track-validation-time: true
    track-cache-hit-rate: true

# PAR (Pushed Authorization Requests) Configuration
par:
  enabled: ${PAR_ENABLED:true}
  required: ${PAR_REQUIRED:true}  # Reject direct authorization requests
  endpoint: "/oauth2/par"
  expiration-time: ${PAR_EXPIRATION:300}  # seconds
  max-expiration-time: ${PAR_MAX_EXPIRATION:600}  # seconds
  min-expiration-time: ${PAR_MIN_EXPIRATION:60}   # seconds
  cache-prefix: "par:request:"
  # Request validation
  validation:
    max-request-size: ${PAR_MAX_REQUEST_SIZE:4096}  # bytes
    require-pkce: ${PAR_REQUIRE_PKCE:true}
    require-dpop-jkt: ${PAR_REQUIRE_DPOP_JKT:true}

# OAuth2 Endpoints Configuration
oauth2:
  endpoints:
    authorization: "/oauth2/authorize"
    token: "/oauth2/token"
    par: "/oauth2/par"
    jwks: "/oauth2/jwks"
    userinfo: "/oauth2/userinfo"
    revocation: "/oauth2/revoke"
    introspection: "/oauth2/introspect"
  # Client authentication
  client-authentication:
    methods: ${OAUTH2_CLIENT_AUTH_METHODS:private_key_jwt}  # Only private_key_jwt for FAPI 2.0
    private-key-jwt:
      max-lifetime: ${OAUTH2_CLIENT_ASSERTION_MAX_LIFETIME:300}  # seconds
      clock-skew: ${OAUTH2_CLIENT_ASSERTION_CLOCK_SKEW:30}      # seconds
  # Token configuration
  tokens:
    access-token:
      lifetime: ${OAUTH2_ACCESS_TOKEN_LIFETIME:300}      # 5 minutes
      type: "DPoP"  # DPoP-bound tokens
    refresh-token:
      lifetime: ${OAUTH2_REFRESH_TOKEN_LIFETIME:28800}   # 8 hours
      rotation: ${OAUTH2_REFRESH_TOKEN_ROTATION:true}
    authorization-code:
      lifetime: ${OAUTH2_AUTH_CODE_LIFETIME:60}          # 1 minute

# Security Configuration
security:
  # CORS configuration for FAPI 2.0 + DPoP
  cors:
    allowed-origins: ${SECURITY_CORS_ALLOWED_ORIGINS:https://banking.example.com,https://admin.banking.example.com}
    allowed-origin-patterns: ${SECURITY_CORS_ALLOWED_ORIGIN_PATTERNS:https://*.banking.example.com}
    allowed-methods: ${SECURITY_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
    allowed-headers: ${SECURITY_CORS_ALLOWED_HEADERS:Authorization,Content-Type,X-Requested-With,Accept,Origin,X-FAPI-Interaction-ID,X-FAPI-Auth-Date,X-FAPI-Customer-IP-Address,DPoP,DPoP-Nonce}
    exposed-headers: ${SECURITY_CORS_EXPOSED_HEADERS:X-FAPI-Interaction-ID,X-RateLimit-Remaining,X-RateLimit-Retry-After,WWW-Authenticate,DPoP-Nonce,X-DPoP-Supported}
    allow-credentials: ${SECURITY_CORS_ALLOW_CREDENTIALS:true}
    max-age: ${SECURITY_CORS_MAX_AGE:1800}  # 30 minutes
  # JWT configuration
  jwt:
    jwk-set-uri: ${SECURITY_JWT_JWK_SET_URI:http://localhost:8090/realms/banking-fapi2/protocol/openid_connect/certs}
    issuer-uri: ${SECURITY_JWT_ISSUER_URI:http://localhost:8090/realms/banking-fapi2}
    audience: ${SECURITY_JWT_AUDIENCE:https://api.banking.example.com}
  # Password encoding
  password:
    strength: ${SECURITY_PASSWORD_STRENGTH:12}
  # Rate limiting
  rate-limiting:
    enabled: ${SECURITY_RATE_LIMITING_ENABLED:true}
    redis-key-prefix: "rate_limit:"
    default-capacity: ${SECURITY_RATE_LIMITING_DEFAULT_CAPACITY:100}
    default-refill-tokens: ${SECURITY_RATE_LIMITING_DEFAULT_REFILL:10}
    default-refill-period: ${SECURITY_RATE_LIMITING_DEFAULT_PERIOD:60}  # seconds

# Kafka Configuration
kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9093}
  consumer:
    group-id: ${KAFKA_GROUP_ID:banking-fapi2}
    auto-offset-reset: ${KAFKA_AUTO_OFFSET_RESET:earliest}
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    properties:
      spring.json.trusted.packages: "com.bank.loan.loan"
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      spring.json.add.type.headers: false
  admin:
    properties:
      bootstrap.servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9093}

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics,prometheus,fapi,dpop}
      base-path: /api/actuator
  endpoint:
    health:
      show-details: ${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:always}
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    # Custom endpoints for FAPI 2.0 + DPoP monitoring
    fapi:
      enabled: true
    dpop:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: ${MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED:true}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        dpop.validation.time: true
        fapi.request.time: true
      percentiles:
        http.server.requests: 0.5,0.95,0.99
        dpop.validation.time: 0.5,0.95,0.99
        fapi.request.time: 0.5,0.95,0.99
      sla:
        http.server.requests: 100ms,200ms,500ms,1s
        dpop.validation.time: 10ms,50ms,100ms
    tags:
      application: ${spring.application.name}
      environment: ${APP_ENVIRONMENT:fapi2-enterprise}
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    db:
      enabled: true
    redis:
      enabled: true
    diskspace:
      enabled: true
    # Custom health indicators
    dpop:
      enabled: true
    fapi:
      enabled: true

# Banking Business Configuration
banking:
  loan:
    max-amount: ${LOAN_MAX_AMOUNT:10000000}
    min-amount: ${LOAN_MIN_AMOUNT:1000}
    max-installments: ${LOAN_MAX_INSTALLMENTS:60}
    min-installments: ${LOAN_MIN_INSTALLMENTS:6}
    default-interest-rate: ${INTEREST_RATE_DEFAULT:0.029}
  transaction:
    daily-limit: ${TRANSACTION_DAILY_LIMIT:100000}
  compliance:
    strict-validation: true
    audit-enabled: true
    fapi-validation: true
    fapi-version: "2.0"
    dpop-required: true
    par-required: true
    mtls-required: false  # REMOVED: Replaced by DPoP
    certificate-binding-enabled: false  # REMOVED: Replaced by DPoP key binding
    front-channel-delivery-enabled: false  # REMOVED: Only back-channel supported
    hybrid-flow-enabled: false  # REMOVED: Only authorization code flow
    implicit-flow-enabled: false  # REMOVED: Only authorization code flow
    pkce-required: true
    private-key-jwt-required: true
    
  # Legacy features explicitly disabled
  legacy:
    mtls-certificate-binding: false
    token-binding-rfc8473: false
    front-channel-id-token-delivery: false
    hybrid-flows: false
    implicit-flows: false
    fragment-response-mode: false
    form-post-response-mode: false
    tls-client-auth: false

# Logging Configuration
logging:
  level:
    com.bank.loan.loan: ${LOGGING_LEVEL_BANKING:INFO}
    com.bank.loan.loan.security.dpop: ${LOGGING_LEVEL_DPOP:DEBUG}
    com.bank.loan.loan.security.par: ${LOGGING_LEVEL_PAR:DEBUG}
    com.bank.loan.loan.security.fapi: ${LOGGING_LEVEL_FAPI:INFO}
    org.springframework.security: ${LOGGING_LEVEL_SECURITY:INFO}
    org.springframework.security.oauth2: ${LOGGING_LEVEL_OAUTH2:INFO}
    org.springframework.graphql: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.apache.kafka: INFO
    redis.clients.jedis: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/banking-fapi2-enterprise.log
    max-size: 100MB
    max-history: 30

# Application Information
info:
  app:
    name: ${APP_NAME:Enterprise Loan Management System - FAPI 2.0}
    description: "Enterprise Banking System with FAPI 2.0, DPoP, OAuth2.1, Microservices Architecture"
    version: ${APP_VERSION:1.0.0-fapi2-enterprise}
    environment: ${APP_ENVIRONMENT:fapi2-enterprise}
    security-profile: "FAPI 2.0 Security Profile with DPoP"
    oauth2-version: "OAuth 2.1"
    supported-features:
      - "FAPI 2.0 Security Profile"
      - "DPoP (Demonstrating Proof-of-Possession)"
      - "PAR (Pushed Authorization Requests)"
      - "PKCE (Proof Key for Code Exchange)"
      - "Private Key JWT Client Authentication"
      - "JTI Replay Prevention"
      - "Cryptographic Nonces"
  build:
    artifact: enterprise-loan-management-system-fapi2
    name: Enterprise Loan Management System - FAPI 2.0
    version: ${APP_VERSION:1.0.0-fapi2-enterprise}
    java:
      version: 21
  security:
    fapi-version: "2.0"
    dpop-enabled: ${dpop.enabled}
    par-enabled: ${par.enabled}
    par-required: ${par.required}

# Resilience4j Configuration - Enhanced for FAPI 2.0
resilience4j:
  circuitbreaker:
    instances:
      loanService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      paymentService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
      dpopValidation:
        registerHealthIndicator: true
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 75  # More tolerant for security operations
        waitDurationInOpenState: 10s
      parService:
        registerHealthIndicator: true
        slidingWindowSize: 15
        minimumNumberOfCalls: 5
        failureRateThreshold: 60
  retry:
    instances:
      loanService:
        maxRetryAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      redisOperation:
        maxRetryAttempts: 2
        waitDuration: 100ms
        retryExceptions:
          - redis.clients.jedis.exceptions.JedisConnectionException
          - org.springframework.data.redis.RedisConnectionFailureException
  ratelimiter:
    instances:
      loanCreation:
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 500ms
      dpopValidation:
        limitForPeriod: 100  # Higher limit for DPoP operations
        limitRefreshPeriod: 1s
        timeoutDuration: 200ms
  bulkhead:
    instances:
      loanService:
        maxConcurrentCalls: 20
        maxWaitDuration: 1s
      securityOperations:
        maxConcurrentCalls: 50  # Higher for security operations
        maxWaitDuration: 500ms

# OpenAPI Documentation - Enhanced for FAPI 2.0
springdoc:
  api-docs:
    enabled: true
    path: /api/v3/api-docs
  swagger-ui:
    enabled: true
    path: /api/swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    # FAPI 2.0 security schemes
    oauth2-redirect-url: /api/swagger-ui/oauth2-redirect.html
  show-actuator: true
  group-configs:
    - group: banking-api
      display-name: Banking API (FAPI 2.0 + DPoP)
      paths-to-match: /api/v1/loans/**, /api/v1/customers/**, /api/v1/payments/**
    - group: admin-api
      display-name: Admin API (FAPI 2.0 + DPoP)
      paths-to-match: /api/v1/admin/**
    - group: oauth2-api
      display-name: OAuth2 API (FAPI 2.0)
      paths-to-match: /oauth2/**
    - group: fapi-api
      display-name: FAPI 2.0 Specific API
      paths-to-match: /api/v1/fapi/**
  # Security documentation
  components:
    security-schemes:
      dpop:
        type: http
        scheme: DPoP
        description: "DPoP (Demonstrating Proof-of-Possession) authentication"
      oauth2:
        type: oauth2
        description: "OAuth2 with FAPI 2.0 Security Profile"
        flows:
          authorizationCode:
            authorizationUrl: ${oauth2.endpoints.authorization}
            tokenUrl: ${oauth2.endpoints.token}
            scopes:
              banking-scope: "Access to banking operations"
              banking-loans: "Access to loan operations"
              banking-payments: "Access to payment operations"
              admin: "Administrative access"
              audit: "Audit access"