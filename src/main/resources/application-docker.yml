server:
  port: 8080

spring:
  application:
    name: enterprise-loan-management-system
  
  # PostgreSQL database configuration for Docker
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/banking_system}
    username: ${DATABASE_USERNAME:banking_user}
    password: ${DATABASE_PASSWORD:banking_secure_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          time_zone: UTC
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  # Redis configuration for Docker
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:banking_redis_pass}
      timeout: 10000ms
      database: 0
      jedis:
        pool:
          max-active: 20
          max-idle: 8
          min-idle: 0
  
  # Disable Spring Cloud Config for Docker
  cloud:
    config:
      enabled: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /api/actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true

logging:
  level:
    com.bank.loanmanagement: INFO
    org.springframework.security: INFO
    org.hibernate: WARN
    org.springframework.web: INFO
  pattern:
    console: "%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"