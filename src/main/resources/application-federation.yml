# Cross-Region Monitoring Federation Configuration
spring:
  application:
    name: enterprise-loan-management-federation
  profiles:
    active: federation
  
  # Database configuration for federation data
  datasource:
    federation:
      url: jdbc:postgresql://localhost:5432/banking_federation
      username: banking_user
      password: ${DB_PASSWORD:banking_password}
      driver-class-name: org.postgresql.Driver
      
  # Redis configuration for cross-region caching
  redis:
    federation:
      host: localhost
      port: 6379
      database: 2
      password: ${REDIS_PASSWORD:}
      timeout: 5000ms
      jedis:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

# Federation-specific configuration
federation:
  monitoring:
    # Supported regions
    regions:
      - us-east-1
      - eu-west-1
      - ap-southeast-1
    
    # Metrics collection settings
    metrics:
      collection-interval: 30s
      retention-period: 24h
      batch-size: 100
      timeout: 10s
      
    # Alert correlation settings
    alerts:
      correlation-threshold: 0.6
      time-window: 15m
      max-correlations: 50
      
    # Disaster recovery settings
    disaster-recovery:
      health-check-interval: 60s
      failover-timeout: 300s
      replication-lag-threshold: 10s
      
    # Dashboard settings
    dashboard:
      refresh-interval: 10s
      data-retention: 7d
      max-alerts: 100
      
    # Compliance settings
    compliance:
      check-interval: 12h
      frameworks:
        - PCI_DSS
        - SOX
        - GDPR
        - CCPA
        - GLBA
        - PSD2
        - PDPA
        - MAS
      
    # Performance analytics settings
    performance:
      analysis-interval: 5m
      trending-period: 1h
      baseline-period: 24h

# Logging configuration
logging:
  level:
    com.bank.monitoring.federation: DEBUG
    com.bank.monitoring.health: INFO
    com.bank.ml.anomaly: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
  
  file:
    name: logs/federation-monitoring.log
    max-size: 100MB
    max-history: 30

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,federation
      base-path: /actuator
  
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
    federation:
      enabled: true
  
  health:
    federation:
      enabled: true
    regions:
      enabled: true
    disaster-recovery:
      enabled: true
    compliance:
      enabled: true

# Prometheus metrics configuration
metrics:
  export:
    prometheus:
      enabled: true
      descriptions: true
      step: 30s
  
  tags:
    application: enterprise-loan-management
    service: federation-monitoring
    environment: ${ENVIRONMENT:development}
    region: ${AWS_REGION:us-east-1}

# Security configuration
security:
  federation:
    api-key: ${FEDERATION_API_KEY:federation-secret-key}
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true
      max-age: 3600

# Async configuration
async:
  executor:
    core-pool-size: 10
    max-pool-size: 50
    queue-capacity: 100
    thread-name-prefix: Federation-
    keep-alive-seconds: 60

# Circuit breaker configuration
resilience4j:
  circuitbreaker:
    instances:
      region-metrics:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
      
      alert-correlation:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 60
        eventConsumerBufferSize: 10
      
      disaster-recovery:
        registerHealthIndicator: true
        slidingWindowSize: 3
        minimumNumberOfCalls: 2
        permittedNumberOfCallsInHalfOpenState: 1
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 30
        eventConsumerBufferSize: 10

  retry:
    instances:
      federation-api:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - java.util.concurrent.TimeoutException
          - java.io.IOException
          - java.net.SocketTimeoutException

  timelimiter:
    instances:
      federation-timeout:
        timeoutDuration: 30s
        cancelRunningFuture: true

# Monitoring and alerting
monitoring:
  alerts:
    enabled: true
    webhook-url: ${ALERT_WEBHOOK_URL:http://localhost:8080/webhooks/alerts}
    
  thresholds:
    federation-health:
      critical: 60
      warning: 80
      
    region-availability:
      critical: 90
      warning: 95
      
    compliance-score:
      critical: 90
      warning: 95
      
    performance-degradation:
      critical: 200
      warning: 150

# Custom federation health checks
health:
  federation:
    indicators:
      - name: region-connectivity
        enabled: true
        timeout: 5s
        
      - name: cross-region-latency
        enabled: true
        timeout: 10s
        
      - name: data-synchronization
        enabled: true
        timeout: 15s
        
      - name: compliance-status
        enabled: true
        timeout: 30s