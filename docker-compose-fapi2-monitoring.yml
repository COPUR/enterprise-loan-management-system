version: '3.8'

services:
  # FAPI 2.0 + DPoP Banking Application
  banking-app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=fapi2-dpop
      - SPRING_CONFIG_LOCATION=classpath:application-fapi2-dpop.yml
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DATABASE_URL=jdbc:postgresql://postgres:5432/banking_fapi2
      - KEYCLOAK_URL=http://keycloak:8080/realms/banking-fapi2
      - PROMETHEUS_ENABLED=true
      - GRAFANA_ENABLED=true
      - JAEGER_ENABLED=true
    depends_on:
      - postgres
      - redis
      - kafka
      - keycloak
      - prometheus
      - grafana
      - jaeger
    volumes:
      - ./logs:/app/logs
      - ./monitoring:/app/monitoring
    networks:
      - banking-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: banking_fapi2
      POSTGRES_USER: banking_fapi2
      POSTGRES_PASSWORD: fapi2_banking_pass_2024
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5434:5432"
    networks:
      - banking-network

  # Redis for DPoP JTI Cache and PAR Storage
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6381:6379"
    networks:
      - banking-network

  # Kafka for Event Streaming
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - banking-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - banking-network

  # Keycloak Identity Provider with FAPI 2.0 + DPoP Support
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123
      KC_HTTP_PORT: 8080
      KC_FEATURES: fapi,dpop,par
    ports:
      - "8090:8080"
    depends_on:
      - postgres
    volumes:
      - ./keycloak-realm-fapi2.json:/opt/keycloak/data/import/realm-fapi2.json
      - keycloak_data:/opt/keycloak/data
    networks:
      - banking-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.47.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - banking-network

  # Grafana Dashboards
  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - banking-network

  # Jaeger Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.50
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - QUERY_BASE_PATH=/jaeger
    volumes:
      - jaeger_data:/tmp
    networks:
      - banking-network

  # AlertManager for Alerts
  alertmanager:
    image: prom/alertmanager:v0.26.0
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - banking-network

  # Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - banking-network

  # Redis Exporter for Redis Metrics
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
    depends_on:
      - redis
    networks:
      - banking-network

  # Postgres Exporter for Database Metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://banking_fapi2:fapi2_banking_pass_2024@postgres:5432/banking_fapi2?sslmode=disable
    depends_on:
      - postgres
    networks:
      - banking-network

  # Loki for Log Aggregation
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - banking-network

  # Promtail for Log Collection
  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./logs:/var/log/banking
      - ./monitoring/promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - banking-network

  # Nginx for Load Balancing and SSL Termination
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - banking-app
    networks:
      - banking-network

volumes:
  postgres_data:
  redis_data:
  kafka_data:
  zookeeper_data:
  keycloak_data:
  prometheus_data:
  grafana_data:
  jaeger_data:
  alertmanager_data:
  loki_data:

networks:
  banking-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16